// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target, unnecessary_question_mark

part of 'amplitude_event_part_two.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;

final _privateConstructorUsedError = UnsupportedError(
    'It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more information: https://github.com/rrousselGit/freezed#adding-getters-and-methods-to-our-models');

AmplitudeEventPartTwo _$AmplitudeEventPartTwoFromJson(
    Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'continueClicked':
      return ContinueCLicked.fromJson(json);
    case 'editSecretsClicked':
      return EditSecretsClicked.fromJson(json);
    case 'walletActivated':
      return WalletActivated.fromJson(json);
    case 'walletActivationFailed':
      return WalletActivationFailed.fromJson(json);
    case 'guideMeClicked':
      return GuideMeClicked.fromJson(json);
    case 'cardColorChanged':
      return CardColorCHanged.fromJson(json);
    case 'clickedOnPrivateKey':
      return ClickedOnPrivateKey.fromJson(json);
    case 'privateKeyRevealed':
      return PrivateKeyRevealed.fromJson(json);
    case 'privateKeyCopied':
      return PrivateKeyCopied.fromJson(json);
    case 'cardNameChanged':
      return CardNameChanged.fromJson(json);
    case 'helpCenterClicked':
      return HelpCenterClicked.fromJson(json);
    case 'removeCardClicked':
      return RemoveCardClicked.fromJson(json);
    case 'cardDeleted':
      return CardDeleted.fromJson(json);
    case 'notSureClicked':
      return NotSureClicked.fromJson(json);
    case 'contactUsClicked':
      return ContactUsClicked.fromJson(json);
    case 'appLockClicked':
      return AppLockClicked.fromJson(json);
    case 'appLockDisabled':
      return AppLockDisabled.fromJson(json);
    case 'changePasscodeClicked':
      return ChangePasscodeClicked.fromJson(json);
    case 'passcodeChanged':
      return PasscodeChanged.fromJson(json);
    case 'faceIdEnabled':
      return FaceIdEnabled.fromJson(json);
    case 'faceIdDisabled':
      return FaceIdDisabled.fromJson(json);
    case 'pushNotificationsOn':
      return PushNotificationsOn.fromJson(json);
    case 'pushNotificationsOff':
      return PushNotificationsOff.fromJson(json);
    case 'joinCommunityClicked':
      return JoinCommunityClicked.fromJson(json);
    case 'privacyPolicyClicked':
      return PrivacyPolicyClicked.fromJson(json);
    case 'termsOfUseClicked':
      return TermsOfUseClicked.fromJson(json);
    case 'verifyCardClicked':
      return VerifyCardClicked.fromJson(json);
    case 'verifyCardTapped':
      return VerifyCardTapped.fromJson(json);
    case 'sendMessageClicked':
      return SendMessageClicked.fromJson(json);
    case 'cardTabClicked':
      return CardTabClicked.fromJson(json);
    case 'barTabClicked':
      return BarTabClicked.fromJson(json);
    case 'tapToConnectClicked':
      return TapToConnectClicked.fromJson(json);
    case 'cardDamagedClicked':
      return CardDamagedClicked.fromJson(json);
    case 'nfcNotWorkingClicked':
      return NfcNotWorkingCLicked.fromJson(json);
    case 'dontHaveCardWithMeNowClicked':
      return DontHaveCardWithMeNowClicked.fromJson(json);
    case 'lostCardClicked':
      return LostCardClicked.fromJson(json);
    case 'troubleActivateClicked':
      return TroubleActivateClicked.fromJson(json);
    case 'troubleCloseClicked':
      return TroubleCloseClicked.fromJson(json);
    case 'troubleGotItClicked':
      return TroubleGotItClicked.fromJson(json);
    case 'troubleActivateNowClicked':
      return TroubleActivateNowClicked.fromJson(json);
    case 'cardAdded':
      return CardAddedEvent.fromJson(json);
    case 'barAdded':
      return BarAddedEvent.fromJson(json);
    case 'eraseMyDataClicked':
      return EraseMyDataClicked.fromJson(json);
    case 'eraseMyDataConfirmed':
      return EraseMyDataConfirmed.fromJson(json);
    case 'coinSearchClicked':
      return CoinSearchClicked.fromJson(json);
    case 'coinSearched':
      return CoinSearched.fromJson(json);
    case 'fiatClicked':
      return FiatCliked.fromJson(json);
    case 'coinClicked':
      return CoinClicked.fromJson(json);
    case 'loadCoinsClicked':
      return LoadCoinsClicked.fromJson(json);
    case 'goUpClicked':
      return GoUpClicked.fromJson(json);
    case 'cardTabHistoryClicked':
      return CardTabHistoryClicked.fromJson(json);
    case 'barTabHistoryClicked':
      return BarTabHistoryClicked.fromJson(json);
    case 'selectWalletClicked':
      return SelectWalletClicked.fromJson(json);
    case 'walletSelected':
      return WalletSelected.fromJson(json);
    case 'pullToRefresh':
      return PullToRefresh.fromJson(json);
    case 'transactionClicked':
      return TransactionClicked.fromJson(json);
    case 'loadTransactionClicked':
      return LoadTransactionClicked.fromJson(json);
    case 'refreshClicked':
      return RefreshClicked.fromJson(json);
    case 'buyBitcoinShown':
      return BuyBitcoinShown.fromJson(json);
    case 'buyBitcoinNowClicked':
      return BuyBitcoinNowClicked.fromJson(json);
    case 'dontHaveCardClicked':
      return DontHaveCardClicked.fromJson(json);
    case 'pageIndicatorClicked':
      return PageIndicatorClicked.fromJson(json);
    case 'activationNextClicked':
      return ActivationNextClicked.fromJson(json);
    case 'sendToAddressFilled':
      return SendToAddressFilled.fromJson(json);
    case 'buyCardClicked':
      return BuyCardClicked.fromJson(json);
    case 'sendFromAddressChanged':
      return SendFromAddressChanged.fromJson(json);
    case 'sendNextClicked':
      return SendNextClicked.fromJson(json);
    case 'amountEntered':
      return AmountEntered.fromJson(json);
    case 'sendCurrencyChanged':
      return SendCurrencyChanged.fromJson(json);
    case 'useMaxClicked':
      return UseMaxClicked.fromJson(json);
    case 'amountNextClicked':
      return AmountNextClicked.fromJson(json);
    case 'sendClicked':
      return SendClicked.fromJson(json);

    default:
      throw CheckedFromJsonException(
          json,
          'runtimeType',
          'AmplitudeEventPartTwo',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
mixin _$AmplitudeEventPartTwo {
  String get eventType => throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;

  /// Serializes this AmplitudeEventPartTwo to a JSON map.
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  $AmplitudeEventPartTwoCopyWith<AmplitudeEventPartTwo> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AmplitudeEventPartTwoCopyWith<$Res> {
  factory $AmplitudeEventPartTwoCopyWith(AmplitudeEventPartTwo value,
          $Res Function(AmplitudeEventPartTwo) then) =
      _$AmplitudeEventPartTwoCopyWithImpl<$Res, AmplitudeEventPartTwo>;
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        $Val extends AmplitudeEventPartTwo>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  _$AmplitudeEventPartTwoCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_value.copyWith(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ) as $Val);
  }
}

/// @nodoc
abstract class _$$ContinueCLickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$ContinueCLickedImplCopyWith(_$ContinueCLickedImpl value,
          $Res Function(_$ContinueCLickedImpl) then) =
      __$$ContinueCLickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$ContinueCLickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$ContinueCLickedImpl>
    implements _$$ContinueCLickedImplCopyWith<$Res> {
  __$$ContinueCLickedImplCopyWithImpl(
      _$ContinueCLickedImpl _value, $Res Function(_$ContinueCLickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$ContinueCLickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ContinueCLickedImpl
    with DiagnosticableTreeMixin
    implements ContinueCLicked {
  const _$ContinueCLickedImpl(
      {this.eventType = 'CONTINUE_CLICKED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'continueClicked';

  factory _$ContinueCLickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$ContinueCLickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.continueClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEventPartTwo.continueClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ContinueCLickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$ContinueCLickedImplCopyWith<_$ContinueCLickedImpl> get copyWith =>
      __$$ContinueCLickedImplCopyWithImpl<_$ContinueCLickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return continueClicked(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return continueClicked?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (continueClicked != null) {
      return continueClicked(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return continueClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return continueClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (continueClicked != null) {
      return continueClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ContinueCLickedImplToJson(
      this,
    );
  }
}

abstract class ContinueCLicked implements AmplitudeEventPartTwo {
  const factory ContinueCLicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$ContinueCLickedImpl;

  factory ContinueCLicked.fromJson(Map<String, dynamic> json) =
      _$ContinueCLickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$ContinueCLickedImplCopyWith<_$ContinueCLickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$EditSecretsClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$EditSecretsClickedImplCopyWith(_$EditSecretsClickedImpl value,
          $Res Function(_$EditSecretsClickedImpl) then) =
      __$$EditSecretsClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$EditSecretsClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$EditSecretsClickedImpl>
    implements _$$EditSecretsClickedImplCopyWith<$Res> {
  __$$EditSecretsClickedImplCopyWithImpl(_$EditSecretsClickedImpl _value,
      $Res Function(_$EditSecretsClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$EditSecretsClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$EditSecretsClickedImpl
    with DiagnosticableTreeMixin
    implements EditSecretsClicked {
  const _$EditSecretsClickedImpl(
      {this.eventType = 'EDIT_SECRETS_CLICKED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'editSecretsClicked';

  factory _$EditSecretsClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$EditSecretsClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.editSecretsClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.editSecretsClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$EditSecretsClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$EditSecretsClickedImplCopyWith<_$EditSecretsClickedImpl> get copyWith =>
      __$$EditSecretsClickedImplCopyWithImpl<_$EditSecretsClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return editSecretsClicked(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return editSecretsClicked?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (editSecretsClicked != null) {
      return editSecretsClicked(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return editSecretsClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return editSecretsClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (editSecretsClicked != null) {
      return editSecretsClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$EditSecretsClickedImplToJson(
      this,
    );
  }
}

abstract class EditSecretsClicked implements AmplitudeEventPartTwo {
  const factory EditSecretsClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$EditSecretsClickedImpl;

  factory EditSecretsClicked.fromJson(Map<String, dynamic> json) =
      _$EditSecretsClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$EditSecretsClickedImplCopyWith<_$EditSecretsClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$WalletActivatedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$WalletActivatedImplCopyWith(_$WalletActivatedImpl value,
          $Res Function(_$WalletActivatedImpl) then) =
      __$$WalletActivatedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$WalletActivatedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$WalletActivatedImpl>
    implements _$$WalletActivatedImplCopyWith<$Res> {
  __$$WalletActivatedImplCopyWithImpl(
      _$WalletActivatedImpl _value, $Res Function(_$WalletActivatedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$WalletActivatedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$WalletActivatedImpl
    with DiagnosticableTreeMixin
    implements WalletActivated {
  const _$WalletActivatedImpl(
      {this.eventType = 'WALLET_ACTIVATED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'walletActivated';

  factory _$WalletActivatedImpl.fromJson(Map<String, dynamic> json) =>
      _$$WalletActivatedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.walletActivated(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEventPartTwo.walletActivated'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$WalletActivatedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$WalletActivatedImplCopyWith<_$WalletActivatedImpl> get copyWith =>
      __$$WalletActivatedImplCopyWithImpl<_$WalletActivatedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return walletActivated(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return walletActivated?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (walletActivated != null) {
      return walletActivated(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return walletActivated(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return walletActivated?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (walletActivated != null) {
      return walletActivated(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$WalletActivatedImplToJson(
      this,
    );
  }
}

abstract class WalletActivated implements AmplitudeEventPartTwo {
  const factory WalletActivated(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$WalletActivatedImpl;

  factory WalletActivated.fromJson(Map<String, dynamic> json) =
      _$WalletActivatedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$WalletActivatedImplCopyWith<_$WalletActivatedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$WalletActivationFailedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$WalletActivationFailedImplCopyWith(
          _$WalletActivationFailedImpl value,
          $Res Function(_$WalletActivationFailedImpl) then) =
      __$$WalletActivationFailedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$WalletActivationFailedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$WalletActivationFailedImpl>
    implements _$$WalletActivationFailedImplCopyWith<$Res> {
  __$$WalletActivationFailedImplCopyWithImpl(
      _$WalletActivationFailedImpl _value,
      $Res Function(_$WalletActivationFailedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$WalletActivationFailedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$WalletActivationFailedImpl
    with DiagnosticableTreeMixin
    implements WalletActivationFailed {
  const _$WalletActivationFailedImpl(
      {this.eventType = 'WALLET_ACTIVATION_FAILED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'walletActivationFailed';

  factory _$WalletActivationFailedImpl.fromJson(Map<String, dynamic> json) =>
      _$$WalletActivationFailedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.walletActivationFailed(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.walletActivationFailed'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$WalletActivationFailedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$WalletActivationFailedImplCopyWith<_$WalletActivationFailedImpl>
      get copyWith => __$$WalletActivationFailedImplCopyWithImpl<
          _$WalletActivationFailedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return walletActivationFailed(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return walletActivationFailed?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (walletActivationFailed != null) {
      return walletActivationFailed(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return walletActivationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return walletActivationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (walletActivationFailed != null) {
      return walletActivationFailed(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$WalletActivationFailedImplToJson(
      this,
    );
  }
}

abstract class WalletActivationFailed implements AmplitudeEventPartTwo {
  const factory WalletActivationFailed(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$WalletActivationFailedImpl;

  factory WalletActivationFailed.fromJson(Map<String, dynamic> json) =
      _$WalletActivationFailedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$WalletActivationFailedImplCopyWith<_$WalletActivationFailedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$GuideMeClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$GuideMeClickedImplCopyWith(_$GuideMeClickedImpl value,
          $Res Function(_$GuideMeClickedImpl) then) =
      __$$GuideMeClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$GuideMeClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$GuideMeClickedImpl>
    implements _$$GuideMeClickedImplCopyWith<$Res> {
  __$$GuideMeClickedImplCopyWithImpl(
      _$GuideMeClickedImpl _value, $Res Function(_$GuideMeClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$GuideMeClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$GuideMeClickedImpl
    with DiagnosticableTreeMixin
    implements GuideMeClicked {
  const _$GuideMeClickedImpl(
      {this.eventType = 'GUIDE_ME_CLICKED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'guideMeClicked';

  factory _$GuideMeClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$GuideMeClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.guideMeClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.guideMeClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$GuideMeClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$GuideMeClickedImplCopyWith<_$GuideMeClickedImpl> get copyWith =>
      __$$GuideMeClickedImplCopyWithImpl<_$GuideMeClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return guideMeClicked(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return guideMeClicked?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (guideMeClicked != null) {
      return guideMeClicked(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return guideMeClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return guideMeClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (guideMeClicked != null) {
      return guideMeClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$GuideMeClickedImplToJson(
      this,
    );
  }
}

abstract class GuideMeClicked implements AmplitudeEventPartTwo {
  const factory GuideMeClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$GuideMeClickedImpl;

  factory GuideMeClicked.fromJson(Map<String, dynamic> json) =
      _$GuideMeClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$GuideMeClickedImplCopyWith<_$GuideMeClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CardColorCHangedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$CardColorCHangedImplCopyWith(_$CardColorCHangedImpl value,
          $Res Function(_$CardColorCHangedImpl) then) =
      __$$CardColorCHangedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String color});
}

/// @nodoc
class __$$CardColorCHangedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$CardColorCHangedImpl>
    implements _$$CardColorCHangedImplCopyWith<$Res> {
  __$$CardColorCHangedImplCopyWithImpl(_$CardColorCHangedImpl _value,
      $Res Function(_$CardColorCHangedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? color = null,
  }) {
    return _then(_$CardColorCHangedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      color: null == color
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CardColorCHangedImpl
    with DiagnosticableTreeMixin
    implements CardColorCHanged {
  const _$CardColorCHangedImpl(
      {this.eventType = 'CARD_COLOR_CHANGED',
      required this.walletAddress,
      required this.color,
      final String? $type})
      : $type = $type ?? 'cardColorChanged';

  factory _$CardColorCHangedImpl.fromJson(Map<String, dynamic> json) =>
      _$$CardColorCHangedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.cardColorChanged(eventType: $eventType, walletAddress: $walletAddress, color: $color)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEventPartTwo.cardColorChanged'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('color', color));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CardColorCHangedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.color, color) || other.color == color));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, walletAddress, color);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$CardColorCHangedImplCopyWith<_$CardColorCHangedImpl> get copyWith =>
      __$$CardColorCHangedImplCopyWithImpl<_$CardColorCHangedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return cardColorChanged(eventType, walletAddress, color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return cardColorChanged?.call(eventType, walletAddress, color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (cardColorChanged != null) {
      return cardColorChanged(eventType, walletAddress, color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return cardColorChanged(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return cardColorChanged?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (cardColorChanged != null) {
      return cardColorChanged(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CardColorCHangedImplToJson(
      this,
    );
  }
}

abstract class CardColorCHanged implements AmplitudeEventPartTwo {
  const factory CardColorCHanged(
      {final String eventType,
      required final String walletAddress,
      required final String color}) = _$CardColorCHangedImpl;

  factory CardColorCHanged.fromJson(Map<String, dynamic> json) =
      _$CardColorCHangedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get color;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$CardColorCHangedImplCopyWith<_$CardColorCHangedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ClickedOnPrivateKeyImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$ClickedOnPrivateKeyImplCopyWith(_$ClickedOnPrivateKeyImpl value,
          $Res Function(_$ClickedOnPrivateKeyImpl) then) =
      __$$ClickedOnPrivateKeyImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$ClickedOnPrivateKeyImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$ClickedOnPrivateKeyImpl>
    implements _$$ClickedOnPrivateKeyImplCopyWith<$Res> {
  __$$ClickedOnPrivateKeyImplCopyWithImpl(_$ClickedOnPrivateKeyImpl _value,
      $Res Function(_$ClickedOnPrivateKeyImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$ClickedOnPrivateKeyImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ClickedOnPrivateKeyImpl
    with DiagnosticableTreeMixin
    implements ClickedOnPrivateKey {
  const _$ClickedOnPrivateKeyImpl(
      {this.eventType = 'CLICKED_ON_PRIVATE_KEY',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'clickedOnPrivateKey';

  factory _$ClickedOnPrivateKeyImpl.fromJson(Map<String, dynamic> json) =>
      _$$ClickedOnPrivateKeyImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.clickedOnPrivateKey(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.clickedOnPrivateKey'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ClickedOnPrivateKeyImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$ClickedOnPrivateKeyImplCopyWith<_$ClickedOnPrivateKeyImpl> get copyWith =>
      __$$ClickedOnPrivateKeyImplCopyWithImpl<_$ClickedOnPrivateKeyImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return clickedOnPrivateKey(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return clickedOnPrivateKey?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (clickedOnPrivateKey != null) {
      return clickedOnPrivateKey(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return clickedOnPrivateKey(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return clickedOnPrivateKey?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (clickedOnPrivateKey != null) {
      return clickedOnPrivateKey(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ClickedOnPrivateKeyImplToJson(
      this,
    );
  }
}

abstract class ClickedOnPrivateKey implements AmplitudeEventPartTwo {
  const factory ClickedOnPrivateKey(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$ClickedOnPrivateKeyImpl;

  factory ClickedOnPrivateKey.fromJson(Map<String, dynamic> json) =
      _$ClickedOnPrivateKeyImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$ClickedOnPrivateKeyImplCopyWith<_$ClickedOnPrivateKeyImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PrivateKeyRevealedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$PrivateKeyRevealedImplCopyWith(_$PrivateKeyRevealedImpl value,
          $Res Function(_$PrivateKeyRevealedImpl) then) =
      __$$PrivateKeyRevealedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$PrivateKeyRevealedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$PrivateKeyRevealedImpl>
    implements _$$PrivateKeyRevealedImplCopyWith<$Res> {
  __$$PrivateKeyRevealedImplCopyWithImpl(_$PrivateKeyRevealedImpl _value,
      $Res Function(_$PrivateKeyRevealedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$PrivateKeyRevealedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$PrivateKeyRevealedImpl
    with DiagnosticableTreeMixin
    implements PrivateKeyRevealed {
  const _$PrivateKeyRevealedImpl(
      {this.eventType = 'PRIVATE_KEY_REVEALED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'privateKeyRevealed';

  factory _$PrivateKeyRevealedImpl.fromJson(Map<String, dynamic> json) =>
      _$$PrivateKeyRevealedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.privateKeyRevealed(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.privateKeyRevealed'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$PrivateKeyRevealedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$PrivateKeyRevealedImplCopyWith<_$PrivateKeyRevealedImpl> get copyWith =>
      __$$PrivateKeyRevealedImplCopyWithImpl<_$PrivateKeyRevealedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return privateKeyRevealed(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return privateKeyRevealed?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (privateKeyRevealed != null) {
      return privateKeyRevealed(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return privateKeyRevealed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return privateKeyRevealed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (privateKeyRevealed != null) {
      return privateKeyRevealed(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PrivateKeyRevealedImplToJson(
      this,
    );
  }
}

abstract class PrivateKeyRevealed implements AmplitudeEventPartTwo {
  const factory PrivateKeyRevealed(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$PrivateKeyRevealedImpl;

  factory PrivateKeyRevealed.fromJson(Map<String, dynamic> json) =
      _$PrivateKeyRevealedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$PrivateKeyRevealedImplCopyWith<_$PrivateKeyRevealedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PrivateKeyCopiedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$PrivateKeyCopiedImplCopyWith(_$PrivateKeyCopiedImpl value,
          $Res Function(_$PrivateKeyCopiedImpl) then) =
      __$$PrivateKeyCopiedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$PrivateKeyCopiedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$PrivateKeyCopiedImpl>
    implements _$$PrivateKeyCopiedImplCopyWith<$Res> {
  __$$PrivateKeyCopiedImplCopyWithImpl(_$PrivateKeyCopiedImpl _value,
      $Res Function(_$PrivateKeyCopiedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$PrivateKeyCopiedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$PrivateKeyCopiedImpl
    with DiagnosticableTreeMixin
    implements PrivateKeyCopied {
  const _$PrivateKeyCopiedImpl(
      {this.eventType = 'PRIVATE_KEY_COPIED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'privateKeyCopied';

  factory _$PrivateKeyCopiedImpl.fromJson(Map<String, dynamic> json) =>
      _$$PrivateKeyCopiedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.privateKeyCopied(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEventPartTwo.privateKeyCopied'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$PrivateKeyCopiedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$PrivateKeyCopiedImplCopyWith<_$PrivateKeyCopiedImpl> get copyWith =>
      __$$PrivateKeyCopiedImplCopyWithImpl<_$PrivateKeyCopiedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return privateKeyCopied(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return privateKeyCopied?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (privateKeyCopied != null) {
      return privateKeyCopied(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return privateKeyCopied(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return privateKeyCopied?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (privateKeyCopied != null) {
      return privateKeyCopied(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PrivateKeyCopiedImplToJson(
      this,
    );
  }
}

abstract class PrivateKeyCopied implements AmplitudeEventPartTwo {
  const factory PrivateKeyCopied(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$PrivateKeyCopiedImpl;

  factory PrivateKeyCopied.fromJson(Map<String, dynamic> json) =
      _$PrivateKeyCopiedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$PrivateKeyCopiedImplCopyWith<_$PrivateKeyCopiedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CardNameChangedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$CardNameChangedImplCopyWith(_$CardNameChangedImpl value,
          $Res Function(_$CardNameChangedImpl) then) =
      __$$CardNameChangedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletType});
}

/// @nodoc
class __$$CardNameChangedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$CardNameChangedImpl>
    implements _$$CardNameChangedImplCopyWith<$Res> {
  __$$CardNameChangedImplCopyWithImpl(
      _$CardNameChangedImpl _value, $Res Function(_$CardNameChangedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletType = null,
  }) {
    return _then(_$CardNameChangedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CardNameChangedImpl
    with DiagnosticableTreeMixin
    implements CardNameChanged {
  const _$CardNameChangedImpl(
      {this.eventType = 'CARD_NAME_CHANGED',
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'cardNameChanged';

  factory _$CardNameChangedImpl.fromJson(Map<String, dynamic> json) =>
      _$$CardNameChangedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.cardNameChanged(eventType: $eventType, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEventPartTwo.cardNameChanged'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CardNameChangedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, walletType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$CardNameChangedImplCopyWith<_$CardNameChangedImpl> get copyWith =>
      __$$CardNameChangedImplCopyWithImpl<_$CardNameChangedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return cardNameChanged(eventType, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return cardNameChanged?.call(eventType, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (cardNameChanged != null) {
      return cardNameChanged(eventType, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return cardNameChanged(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return cardNameChanged?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (cardNameChanged != null) {
      return cardNameChanged(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CardNameChangedImplToJson(
      this,
    );
  }
}

abstract class CardNameChanged implements AmplitudeEventPartTwo {
  const factory CardNameChanged(
      {final String eventType,
      required final String walletType}) = _$CardNameChangedImpl;

  factory CardNameChanged.fromJson(Map<String, dynamic> json) =
      _$CardNameChangedImpl.fromJson;

  @override
  String get eventType;
  String get walletType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$CardNameChangedImplCopyWith<_$CardNameChangedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$HelpCenterClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$HelpCenterClickedImplCopyWith(_$HelpCenterClickedImpl value,
          $Res Function(_$HelpCenterClickedImpl) then) =
      __$$HelpCenterClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String source});
}

/// @nodoc
class __$$HelpCenterClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$HelpCenterClickedImpl>
    implements _$$HelpCenterClickedImplCopyWith<$Res> {
  __$$HelpCenterClickedImplCopyWithImpl(_$HelpCenterClickedImpl _value,
      $Res Function(_$HelpCenterClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
  }) {
    return _then(_$HelpCenterClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$HelpCenterClickedImpl
    with DiagnosticableTreeMixin
    implements HelpCenterClicked {
  const _$HelpCenterClickedImpl(
      {this.eventType = 'HELP_CENTER_CLICKED',
      required this.source,
      final String? $type})
      : $type = $type ?? 'helpCenterClicked';

  factory _$HelpCenterClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$HelpCenterClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.helpCenterClicked(eventType: $eventType, source: $source)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.helpCenterClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HelpCenterClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, source);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$HelpCenterClickedImplCopyWith<_$HelpCenterClickedImpl> get copyWith =>
      __$$HelpCenterClickedImplCopyWithImpl<_$HelpCenterClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return helpCenterClicked(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return helpCenterClicked?.call(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (helpCenterClicked != null) {
      return helpCenterClicked(eventType, source);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return helpCenterClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return helpCenterClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (helpCenterClicked != null) {
      return helpCenterClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$HelpCenterClickedImplToJson(
      this,
    );
  }
}

abstract class HelpCenterClicked implements AmplitudeEventPartTwo {
  const factory HelpCenterClicked(
      {final String eventType,
      required final String source}) = _$HelpCenterClickedImpl;

  factory HelpCenterClicked.fromJson(Map<String, dynamic> json) =
      _$HelpCenterClickedImpl.fromJson;

  @override
  String get eventType;
  String get source;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$HelpCenterClickedImplCopyWith<_$HelpCenterClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$RemoveCardClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$RemoveCardClickedImplCopyWith(_$RemoveCardClickedImpl value,
          $Res Function(_$RemoveCardClickedImpl) then) =
      __$$RemoveCardClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$RemoveCardClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$RemoveCardClickedImpl>
    implements _$$RemoveCardClickedImplCopyWith<$Res> {
  __$$RemoveCardClickedImplCopyWithImpl(_$RemoveCardClickedImpl _value,
      $Res Function(_$RemoveCardClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$RemoveCardClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$RemoveCardClickedImpl
    with DiagnosticableTreeMixin
    implements RemoveCardClicked {
  const _$RemoveCardClickedImpl(
      {this.eventType = 'REMOVE_CARD_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'removeCardClicked';

  factory _$RemoveCardClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$RemoveCardClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.removeCardClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.removeCardClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$RemoveCardClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$RemoveCardClickedImplCopyWith<_$RemoveCardClickedImpl> get copyWith =>
      __$$RemoveCardClickedImplCopyWithImpl<_$RemoveCardClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return removeCardClicked(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return removeCardClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (removeCardClicked != null) {
      return removeCardClicked(eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return removeCardClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return removeCardClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (removeCardClicked != null) {
      return removeCardClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$RemoveCardClickedImplToJson(
      this,
    );
  }
}

abstract class RemoveCardClicked implements AmplitudeEventPartTwo {
  const factory RemoveCardClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$RemoveCardClickedImpl;

  factory RemoveCardClicked.fromJson(Map<String, dynamic> json) =
      _$RemoveCardClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$RemoveCardClickedImplCopyWith<_$RemoveCardClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CardDeletedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$CardDeletedImplCopyWith(
          _$CardDeletedImpl value, $Res Function(_$CardDeletedImpl) then) =
      __$$CardDeletedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$CardDeletedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$CardDeletedImpl>
    implements _$$CardDeletedImplCopyWith<$Res> {
  __$$CardDeletedImplCopyWithImpl(
      _$CardDeletedImpl _value, $Res Function(_$CardDeletedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$CardDeletedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CardDeletedImpl with DiagnosticableTreeMixin implements CardDeleted {
  const _$CardDeletedImpl(
      {this.eventType = 'CARD_DELETED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'cardDeleted';

  factory _$CardDeletedImpl.fromJson(Map<String, dynamic> json) =>
      _$$CardDeletedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.cardDeleted(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.cardDeleted'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CardDeletedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$CardDeletedImplCopyWith<_$CardDeletedImpl> get copyWith =>
      __$$CardDeletedImplCopyWithImpl<_$CardDeletedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return cardDeleted(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return cardDeleted?.call(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (cardDeleted != null) {
      return cardDeleted(eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return cardDeleted(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return cardDeleted?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (cardDeleted != null) {
      return cardDeleted(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CardDeletedImplToJson(
      this,
    );
  }
}

abstract class CardDeleted implements AmplitudeEventPartTwo {
  const factory CardDeleted(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$CardDeletedImpl;

  factory CardDeleted.fromJson(Map<String, dynamic> json) =
      _$CardDeletedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$CardDeletedImplCopyWith<_$CardDeletedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$NotSureClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$NotSureClickedImplCopyWith(_$NotSureClickedImpl value,
          $Res Function(_$NotSureClickedImpl) then) =
      __$$NotSureClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$NotSureClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$NotSureClickedImpl>
    implements _$$NotSureClickedImplCopyWith<$Res> {
  __$$NotSureClickedImplCopyWithImpl(
      _$NotSureClickedImpl _value, $Res Function(_$NotSureClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$NotSureClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$NotSureClickedImpl
    with DiagnosticableTreeMixin
    implements NotSureClicked {
  const _$NotSureClickedImpl(
      {this.eventType = 'NOT_SURE_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'notSureClicked';

  factory _$NotSureClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$NotSureClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.notSureClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.notSureClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$NotSureClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$NotSureClickedImplCopyWith<_$NotSureClickedImpl> get copyWith =>
      __$$NotSureClickedImplCopyWithImpl<_$NotSureClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return notSureClicked(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return notSureClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (notSureClicked != null) {
      return notSureClicked(eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return notSureClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return notSureClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (notSureClicked != null) {
      return notSureClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$NotSureClickedImplToJson(
      this,
    );
  }
}

abstract class NotSureClicked implements AmplitudeEventPartTwo {
  const factory NotSureClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$NotSureClickedImpl;

  factory NotSureClicked.fromJson(Map<String, dynamic> json) =
      _$NotSureClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$NotSureClickedImplCopyWith<_$NotSureClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ContactUsClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$ContactUsClickedImplCopyWith(_$ContactUsClickedImpl value,
          $Res Function(_$ContactUsClickedImpl) then) =
      __$$ContactUsClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$ContactUsClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$ContactUsClickedImpl>
    implements _$$ContactUsClickedImplCopyWith<$Res> {
  __$$ContactUsClickedImplCopyWithImpl(_$ContactUsClickedImpl _value,
      $Res Function(_$ContactUsClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$ContactUsClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ContactUsClickedImpl
    with DiagnosticableTreeMixin
    implements ContactUsClicked {
  const _$ContactUsClickedImpl(
      {this.eventType = 'CONTACT_US_CLICKED', final String? $type})
      : $type = $type ?? 'contactUsClicked';

  factory _$ContactUsClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$ContactUsClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.contactUsClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEventPartTwo.contactUsClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ContactUsClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$ContactUsClickedImplCopyWith<_$ContactUsClickedImpl> get copyWith =>
      __$$ContactUsClickedImplCopyWithImpl<_$ContactUsClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return contactUsClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return contactUsClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (contactUsClicked != null) {
      return contactUsClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return contactUsClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return contactUsClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (contactUsClicked != null) {
      return contactUsClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ContactUsClickedImplToJson(
      this,
    );
  }
}

abstract class ContactUsClicked implements AmplitudeEventPartTwo {
  const factory ContactUsClicked({final String eventType}) =
      _$ContactUsClickedImpl;

  factory ContactUsClicked.fromJson(Map<String, dynamic> json) =
      _$ContactUsClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$ContactUsClickedImplCopyWith<_$ContactUsClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AppLockClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$AppLockClickedImplCopyWith(_$AppLockClickedImpl value,
          $Res Function(_$AppLockClickedImpl) then) =
      __$$AppLockClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$AppLockClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$AppLockClickedImpl>
    implements _$$AppLockClickedImplCopyWith<$Res> {
  __$$AppLockClickedImplCopyWithImpl(
      _$AppLockClickedImpl _value, $Res Function(_$AppLockClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$AppLockClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AppLockClickedImpl
    with DiagnosticableTreeMixin
    implements AppLockClicked {
  const _$AppLockClickedImpl(
      {this.eventType = 'APP_LOCK_CLICKED', final String? $type})
      : $type = $type ?? 'appLockClicked';

  factory _$AppLockClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$AppLockClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.appLockClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.appLockClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AppLockClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$AppLockClickedImplCopyWith<_$AppLockClickedImpl> get copyWith =>
      __$$AppLockClickedImplCopyWithImpl<_$AppLockClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return appLockClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return appLockClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (appLockClicked != null) {
      return appLockClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return appLockClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return appLockClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (appLockClicked != null) {
      return appLockClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AppLockClickedImplToJson(
      this,
    );
  }
}

abstract class AppLockClicked implements AmplitudeEventPartTwo {
  const factory AppLockClicked({final String eventType}) = _$AppLockClickedImpl;

  factory AppLockClicked.fromJson(Map<String, dynamic> json) =
      _$AppLockClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$AppLockClickedImplCopyWith<_$AppLockClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AppLockDisabledImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$AppLockDisabledImplCopyWith(_$AppLockDisabledImpl value,
          $Res Function(_$AppLockDisabledImpl) then) =
      __$$AppLockDisabledImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$AppLockDisabledImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$AppLockDisabledImpl>
    implements _$$AppLockDisabledImplCopyWith<$Res> {
  __$$AppLockDisabledImplCopyWithImpl(
      _$AppLockDisabledImpl _value, $Res Function(_$AppLockDisabledImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$AppLockDisabledImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AppLockDisabledImpl
    with DiagnosticableTreeMixin
    implements AppLockDisabled {
  const _$AppLockDisabledImpl(
      {this.eventType = 'APP_LOCK_DISABLED', final String? $type})
      : $type = $type ?? 'appLockDisabled';

  factory _$AppLockDisabledImpl.fromJson(Map<String, dynamic> json) =>
      _$$AppLockDisabledImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.appLockDisabled(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEventPartTwo.appLockDisabled'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AppLockDisabledImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$AppLockDisabledImplCopyWith<_$AppLockDisabledImpl> get copyWith =>
      __$$AppLockDisabledImplCopyWithImpl<_$AppLockDisabledImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return appLockDisabled(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return appLockDisabled?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (appLockDisabled != null) {
      return appLockDisabled(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return appLockDisabled(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return appLockDisabled?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (appLockDisabled != null) {
      return appLockDisabled(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AppLockDisabledImplToJson(
      this,
    );
  }
}

abstract class AppLockDisabled implements AmplitudeEventPartTwo {
  const factory AppLockDisabled({final String eventType}) =
      _$AppLockDisabledImpl;

  factory AppLockDisabled.fromJson(Map<String, dynamic> json) =
      _$AppLockDisabledImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$AppLockDisabledImplCopyWith<_$AppLockDisabledImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ChangePasscodeClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$ChangePasscodeClickedImplCopyWith(
          _$ChangePasscodeClickedImpl value,
          $Res Function(_$ChangePasscodeClickedImpl) then) =
      __$$ChangePasscodeClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$ChangePasscodeClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$ChangePasscodeClickedImpl>
    implements _$$ChangePasscodeClickedImplCopyWith<$Res> {
  __$$ChangePasscodeClickedImplCopyWithImpl(_$ChangePasscodeClickedImpl _value,
      $Res Function(_$ChangePasscodeClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$ChangePasscodeClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ChangePasscodeClickedImpl
    with DiagnosticableTreeMixin
    implements ChangePasscodeClicked {
  const _$ChangePasscodeClickedImpl(
      {this.eventType = 'CHANGE_PASSCODE_CLICKED', final String? $type})
      : $type = $type ?? 'changePasscodeClicked';

  factory _$ChangePasscodeClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$ChangePasscodeClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.changePasscodeClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.changePasscodeClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ChangePasscodeClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$ChangePasscodeClickedImplCopyWith<_$ChangePasscodeClickedImpl>
      get copyWith => __$$ChangePasscodeClickedImplCopyWithImpl<
          _$ChangePasscodeClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return changePasscodeClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return changePasscodeClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (changePasscodeClicked != null) {
      return changePasscodeClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return changePasscodeClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return changePasscodeClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (changePasscodeClicked != null) {
      return changePasscodeClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ChangePasscodeClickedImplToJson(
      this,
    );
  }
}

abstract class ChangePasscodeClicked implements AmplitudeEventPartTwo {
  const factory ChangePasscodeClicked({final String eventType}) =
      _$ChangePasscodeClickedImpl;

  factory ChangePasscodeClicked.fromJson(Map<String, dynamic> json) =
      _$ChangePasscodeClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$ChangePasscodeClickedImplCopyWith<_$ChangePasscodeClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PasscodeChangedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$PasscodeChangedImplCopyWith(_$PasscodeChangedImpl value,
          $Res Function(_$PasscodeChangedImpl) then) =
      __$$PasscodeChangedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$PasscodeChangedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$PasscodeChangedImpl>
    implements _$$PasscodeChangedImplCopyWith<$Res> {
  __$$PasscodeChangedImplCopyWithImpl(
      _$PasscodeChangedImpl _value, $Res Function(_$PasscodeChangedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$PasscodeChangedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$PasscodeChangedImpl
    with DiagnosticableTreeMixin
    implements PasscodeChanged {
  const _$PasscodeChangedImpl(
      {this.eventType = 'PASSCODE_CHANGED', final String? $type})
      : $type = $type ?? 'passcodeChanged';

  factory _$PasscodeChangedImpl.fromJson(Map<String, dynamic> json) =>
      _$$PasscodeChangedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.passcodeChanged(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEventPartTwo.passcodeChanged'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$PasscodeChangedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$PasscodeChangedImplCopyWith<_$PasscodeChangedImpl> get copyWith =>
      __$$PasscodeChangedImplCopyWithImpl<_$PasscodeChangedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return passcodeChanged(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return passcodeChanged?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (passcodeChanged != null) {
      return passcodeChanged(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return passcodeChanged(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return passcodeChanged?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (passcodeChanged != null) {
      return passcodeChanged(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PasscodeChangedImplToJson(
      this,
    );
  }
}

abstract class PasscodeChanged implements AmplitudeEventPartTwo {
  const factory PasscodeChanged({final String eventType}) =
      _$PasscodeChangedImpl;

  factory PasscodeChanged.fromJson(Map<String, dynamic> json) =
      _$PasscodeChangedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$PasscodeChangedImplCopyWith<_$PasscodeChangedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$FaceIdEnabledImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$FaceIdEnabledImplCopyWith(
          _$FaceIdEnabledImpl value, $Res Function(_$FaceIdEnabledImpl) then) =
      __$$FaceIdEnabledImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$FaceIdEnabledImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$FaceIdEnabledImpl>
    implements _$$FaceIdEnabledImplCopyWith<$Res> {
  __$$FaceIdEnabledImplCopyWithImpl(
      _$FaceIdEnabledImpl _value, $Res Function(_$FaceIdEnabledImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$FaceIdEnabledImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$FaceIdEnabledImpl
    with DiagnosticableTreeMixin
    implements FaceIdEnabled {
  const _$FaceIdEnabledImpl(
      {this.eventType = 'FACE_ID_ENABLED', final String? $type})
      : $type = $type ?? 'faceIdEnabled';

  factory _$FaceIdEnabledImpl.fromJson(Map<String, dynamic> json) =>
      _$$FaceIdEnabledImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.faceIdEnabled(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.faceIdEnabled'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FaceIdEnabledImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$FaceIdEnabledImplCopyWith<_$FaceIdEnabledImpl> get copyWith =>
      __$$FaceIdEnabledImplCopyWithImpl<_$FaceIdEnabledImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return faceIdEnabled(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return faceIdEnabled?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (faceIdEnabled != null) {
      return faceIdEnabled(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return faceIdEnabled(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return faceIdEnabled?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (faceIdEnabled != null) {
      return faceIdEnabled(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$FaceIdEnabledImplToJson(
      this,
    );
  }
}

abstract class FaceIdEnabled implements AmplitudeEventPartTwo {
  const factory FaceIdEnabled({final String eventType}) = _$FaceIdEnabledImpl;

  factory FaceIdEnabled.fromJson(Map<String, dynamic> json) =
      _$FaceIdEnabledImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$FaceIdEnabledImplCopyWith<_$FaceIdEnabledImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$FaceIdDisabledImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$FaceIdDisabledImplCopyWith(_$FaceIdDisabledImpl value,
          $Res Function(_$FaceIdDisabledImpl) then) =
      __$$FaceIdDisabledImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$FaceIdDisabledImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$FaceIdDisabledImpl>
    implements _$$FaceIdDisabledImplCopyWith<$Res> {
  __$$FaceIdDisabledImplCopyWithImpl(
      _$FaceIdDisabledImpl _value, $Res Function(_$FaceIdDisabledImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$FaceIdDisabledImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$FaceIdDisabledImpl
    with DiagnosticableTreeMixin
    implements FaceIdDisabled {
  const _$FaceIdDisabledImpl(
      {this.eventType = 'FACE_ID_DISABLED', final String? $type})
      : $type = $type ?? 'faceIdDisabled';

  factory _$FaceIdDisabledImpl.fromJson(Map<String, dynamic> json) =>
      _$$FaceIdDisabledImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.faceIdDisabled(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.faceIdDisabled'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FaceIdDisabledImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$FaceIdDisabledImplCopyWith<_$FaceIdDisabledImpl> get copyWith =>
      __$$FaceIdDisabledImplCopyWithImpl<_$FaceIdDisabledImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return faceIdDisabled(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return faceIdDisabled?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (faceIdDisabled != null) {
      return faceIdDisabled(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return faceIdDisabled(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return faceIdDisabled?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (faceIdDisabled != null) {
      return faceIdDisabled(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$FaceIdDisabledImplToJson(
      this,
    );
  }
}

abstract class FaceIdDisabled implements AmplitudeEventPartTwo {
  const factory FaceIdDisabled({final String eventType}) = _$FaceIdDisabledImpl;

  factory FaceIdDisabled.fromJson(Map<String, dynamic> json) =
      _$FaceIdDisabledImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$FaceIdDisabledImplCopyWith<_$FaceIdDisabledImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PushNotificationsOnImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$PushNotificationsOnImplCopyWith(_$PushNotificationsOnImpl value,
          $Res Function(_$PushNotificationsOnImpl) then) =
      __$$PushNotificationsOnImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$PushNotificationsOnImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$PushNotificationsOnImpl>
    implements _$$PushNotificationsOnImplCopyWith<$Res> {
  __$$PushNotificationsOnImplCopyWithImpl(_$PushNotificationsOnImpl _value,
      $Res Function(_$PushNotificationsOnImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$PushNotificationsOnImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$PushNotificationsOnImpl
    with DiagnosticableTreeMixin
    implements PushNotificationsOn {
  const _$PushNotificationsOnImpl(
      {this.eventType = 'PUSH_NOTIFICATIONS_ON', final String? $type})
      : $type = $type ?? 'pushNotificationsOn';

  factory _$PushNotificationsOnImpl.fromJson(Map<String, dynamic> json) =>
      _$$PushNotificationsOnImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.pushNotificationsOn(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.pushNotificationsOn'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$PushNotificationsOnImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$PushNotificationsOnImplCopyWith<_$PushNotificationsOnImpl> get copyWith =>
      __$$PushNotificationsOnImplCopyWithImpl<_$PushNotificationsOnImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return pushNotificationsOn(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return pushNotificationsOn?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (pushNotificationsOn != null) {
      return pushNotificationsOn(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return pushNotificationsOn(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return pushNotificationsOn?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (pushNotificationsOn != null) {
      return pushNotificationsOn(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PushNotificationsOnImplToJson(
      this,
    );
  }
}

abstract class PushNotificationsOn implements AmplitudeEventPartTwo {
  const factory PushNotificationsOn({final String eventType}) =
      _$PushNotificationsOnImpl;

  factory PushNotificationsOn.fromJson(Map<String, dynamic> json) =
      _$PushNotificationsOnImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$PushNotificationsOnImplCopyWith<_$PushNotificationsOnImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PushNotificationsOffImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$PushNotificationsOffImplCopyWith(_$PushNotificationsOffImpl value,
          $Res Function(_$PushNotificationsOffImpl) then) =
      __$$PushNotificationsOffImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$PushNotificationsOffImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$PushNotificationsOffImpl>
    implements _$$PushNotificationsOffImplCopyWith<$Res> {
  __$$PushNotificationsOffImplCopyWithImpl(_$PushNotificationsOffImpl _value,
      $Res Function(_$PushNotificationsOffImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$PushNotificationsOffImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$PushNotificationsOffImpl
    with DiagnosticableTreeMixin
    implements PushNotificationsOff {
  const _$PushNotificationsOffImpl(
      {this.eventType = 'PUSH_NOTIFICATIONS_OFF', final String? $type})
      : $type = $type ?? 'pushNotificationsOff';

  factory _$PushNotificationsOffImpl.fromJson(Map<String, dynamic> json) =>
      _$$PushNotificationsOffImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.pushNotificationsOff(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.pushNotificationsOff'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$PushNotificationsOffImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$PushNotificationsOffImplCopyWith<_$PushNotificationsOffImpl>
      get copyWith =>
          __$$PushNotificationsOffImplCopyWithImpl<_$PushNotificationsOffImpl>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return pushNotificationsOff(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return pushNotificationsOff?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (pushNotificationsOff != null) {
      return pushNotificationsOff(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return pushNotificationsOff(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return pushNotificationsOff?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (pushNotificationsOff != null) {
      return pushNotificationsOff(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PushNotificationsOffImplToJson(
      this,
    );
  }
}

abstract class PushNotificationsOff implements AmplitudeEventPartTwo {
  const factory PushNotificationsOff({final String eventType}) =
      _$PushNotificationsOffImpl;

  factory PushNotificationsOff.fromJson(Map<String, dynamic> json) =
      _$PushNotificationsOffImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$PushNotificationsOffImplCopyWith<_$PushNotificationsOffImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$JoinCommunityClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$JoinCommunityClickedImplCopyWith(_$JoinCommunityClickedImpl value,
          $Res Function(_$JoinCommunityClickedImpl) then) =
      __$$JoinCommunityClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String social});
}

/// @nodoc
class __$$JoinCommunityClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$JoinCommunityClickedImpl>
    implements _$$JoinCommunityClickedImplCopyWith<$Res> {
  __$$JoinCommunityClickedImplCopyWithImpl(_$JoinCommunityClickedImpl _value,
      $Res Function(_$JoinCommunityClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? social = null,
  }) {
    return _then(_$JoinCommunityClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      social: null == social
          ? _value.social
          : social // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$JoinCommunityClickedImpl
    with DiagnosticableTreeMixin
    implements JoinCommunityClicked {
  const _$JoinCommunityClickedImpl(
      {this.eventType = 'JOIN_COMMUNITY_CLICKED',
      required this.social,
      final String? $type})
      : $type = $type ?? 'joinCommunityClicked';

  factory _$JoinCommunityClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$JoinCommunityClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String social;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.joinCommunityClicked(eventType: $eventType, social: $social)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.joinCommunityClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('social', social));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$JoinCommunityClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.social, social) || other.social == social));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, social);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$JoinCommunityClickedImplCopyWith<_$JoinCommunityClickedImpl>
      get copyWith =>
          __$$JoinCommunityClickedImplCopyWithImpl<_$JoinCommunityClickedImpl>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return joinCommunityClicked(eventType, social);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return joinCommunityClicked?.call(eventType, social);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (joinCommunityClicked != null) {
      return joinCommunityClicked(eventType, social);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return joinCommunityClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return joinCommunityClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (joinCommunityClicked != null) {
      return joinCommunityClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$JoinCommunityClickedImplToJson(
      this,
    );
  }
}

abstract class JoinCommunityClicked implements AmplitudeEventPartTwo {
  const factory JoinCommunityClicked(
      {final String eventType,
      required final String social}) = _$JoinCommunityClickedImpl;

  factory JoinCommunityClicked.fromJson(Map<String, dynamic> json) =
      _$JoinCommunityClickedImpl.fromJson;

  @override
  String get eventType;
  String get social;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$JoinCommunityClickedImplCopyWith<_$JoinCommunityClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PrivacyPolicyClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$PrivacyPolicyClickedImplCopyWith(_$PrivacyPolicyClickedImpl value,
          $Res Function(_$PrivacyPolicyClickedImpl) then) =
      __$$PrivacyPolicyClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$PrivacyPolicyClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$PrivacyPolicyClickedImpl>
    implements _$$PrivacyPolicyClickedImplCopyWith<$Res> {
  __$$PrivacyPolicyClickedImplCopyWithImpl(_$PrivacyPolicyClickedImpl _value,
      $Res Function(_$PrivacyPolicyClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$PrivacyPolicyClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$PrivacyPolicyClickedImpl
    with DiagnosticableTreeMixin
    implements PrivacyPolicyClicked {
  const _$PrivacyPolicyClickedImpl(
      {this.eventType = 'PRIVACY_POLICY_CLICKED', final String? $type})
      : $type = $type ?? 'privacyPolicyClicked';

  factory _$PrivacyPolicyClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$PrivacyPolicyClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.privacyPolicyClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.privacyPolicyClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$PrivacyPolicyClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$PrivacyPolicyClickedImplCopyWith<_$PrivacyPolicyClickedImpl>
      get copyWith =>
          __$$PrivacyPolicyClickedImplCopyWithImpl<_$PrivacyPolicyClickedImpl>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return privacyPolicyClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return privacyPolicyClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (privacyPolicyClicked != null) {
      return privacyPolicyClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return privacyPolicyClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return privacyPolicyClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (privacyPolicyClicked != null) {
      return privacyPolicyClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PrivacyPolicyClickedImplToJson(
      this,
    );
  }
}

abstract class PrivacyPolicyClicked implements AmplitudeEventPartTwo {
  const factory PrivacyPolicyClicked({final String eventType}) =
      _$PrivacyPolicyClickedImpl;

  factory PrivacyPolicyClicked.fromJson(Map<String, dynamic> json) =
      _$PrivacyPolicyClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$PrivacyPolicyClickedImplCopyWith<_$PrivacyPolicyClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TermsOfUseClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$TermsOfUseClickedImplCopyWith(_$TermsOfUseClickedImpl value,
          $Res Function(_$TermsOfUseClickedImpl) then) =
      __$$TermsOfUseClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$TermsOfUseClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$TermsOfUseClickedImpl>
    implements _$$TermsOfUseClickedImplCopyWith<$Res> {
  __$$TermsOfUseClickedImplCopyWithImpl(_$TermsOfUseClickedImpl _value,
      $Res Function(_$TermsOfUseClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$TermsOfUseClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TermsOfUseClickedImpl
    with DiagnosticableTreeMixin
    implements TermsOfUseClicked {
  const _$TermsOfUseClickedImpl(
      {this.eventType = 'TERMS_OF_USE_CLICKED', final String? $type})
      : $type = $type ?? 'termsOfUseClicked';

  factory _$TermsOfUseClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TermsOfUseClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.termsOfUseClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.termsOfUseClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TermsOfUseClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$TermsOfUseClickedImplCopyWith<_$TermsOfUseClickedImpl> get copyWith =>
      __$$TermsOfUseClickedImplCopyWithImpl<_$TermsOfUseClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return termsOfUseClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return termsOfUseClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (termsOfUseClicked != null) {
      return termsOfUseClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return termsOfUseClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return termsOfUseClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (termsOfUseClicked != null) {
      return termsOfUseClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TermsOfUseClickedImplToJson(
      this,
    );
  }
}

abstract class TermsOfUseClicked implements AmplitudeEventPartTwo {
  const factory TermsOfUseClicked({final String eventType}) =
      _$TermsOfUseClickedImpl;

  factory TermsOfUseClicked.fromJson(Map<String, dynamic> json) =
      _$TermsOfUseClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$TermsOfUseClickedImplCopyWith<_$TermsOfUseClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$VerifyCardClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$VerifyCardClickedImplCopyWith(_$VerifyCardClickedImpl value,
          $Res Function(_$VerifyCardClickedImpl) then) =
      __$$VerifyCardClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$VerifyCardClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$VerifyCardClickedImpl>
    implements _$$VerifyCardClickedImplCopyWith<$Res> {
  __$$VerifyCardClickedImplCopyWithImpl(_$VerifyCardClickedImpl _value,
      $Res Function(_$VerifyCardClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$VerifyCardClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$VerifyCardClickedImpl
    with DiagnosticableTreeMixin
    implements VerifyCardClicked {
  const _$VerifyCardClickedImpl(
      {this.eventType = 'VERIFY_CARD_CLICKED', final String? $type})
      : $type = $type ?? 'verifyCardClicked';

  factory _$VerifyCardClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$VerifyCardClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.verifyCardClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.verifyCardClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$VerifyCardClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$VerifyCardClickedImplCopyWith<_$VerifyCardClickedImpl> get copyWith =>
      __$$VerifyCardClickedImplCopyWithImpl<_$VerifyCardClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return verifyCardClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return verifyCardClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (verifyCardClicked != null) {
      return verifyCardClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return verifyCardClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return verifyCardClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (verifyCardClicked != null) {
      return verifyCardClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$VerifyCardClickedImplToJson(
      this,
    );
  }
}

abstract class VerifyCardClicked implements AmplitudeEventPartTwo {
  const factory VerifyCardClicked({final String eventType}) =
      _$VerifyCardClickedImpl;

  factory VerifyCardClicked.fromJson(Map<String, dynamic> json) =
      _$VerifyCardClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$VerifyCardClickedImplCopyWith<_$VerifyCardClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$VerifyCardTappedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$VerifyCardTappedImplCopyWith(_$VerifyCardTappedImpl value,
          $Res Function(_$VerifyCardTappedImpl) then) =
      __$$VerifyCardTappedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$VerifyCardTappedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$VerifyCardTappedImpl>
    implements _$$VerifyCardTappedImplCopyWith<$Res> {
  __$$VerifyCardTappedImplCopyWithImpl(_$VerifyCardTappedImpl _value,
      $Res Function(_$VerifyCardTappedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$VerifyCardTappedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$VerifyCardTappedImpl
    with DiagnosticableTreeMixin
    implements VerifyCardTapped {
  const _$VerifyCardTappedImpl(
      {this.eventType = 'VERIFY_CARD_TAPPED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'verifyCardTapped';

  factory _$VerifyCardTappedImpl.fromJson(Map<String, dynamic> json) =>
      _$$VerifyCardTappedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.verifyCardTapped(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEventPartTwo.verifyCardTapped'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$VerifyCardTappedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$VerifyCardTappedImplCopyWith<_$VerifyCardTappedImpl> get copyWith =>
      __$$VerifyCardTappedImplCopyWithImpl<_$VerifyCardTappedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return verifyCardTapped(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return verifyCardTapped?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (verifyCardTapped != null) {
      return verifyCardTapped(eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return verifyCardTapped(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return verifyCardTapped?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (verifyCardTapped != null) {
      return verifyCardTapped(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$VerifyCardTappedImplToJson(
      this,
    );
  }
}

abstract class VerifyCardTapped implements AmplitudeEventPartTwo {
  const factory VerifyCardTapped(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$VerifyCardTappedImpl;

  factory VerifyCardTapped.fromJson(Map<String, dynamic> json) =
      _$VerifyCardTappedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$VerifyCardTappedImplCopyWith<_$VerifyCardTappedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SendMessageClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$SendMessageClickedImplCopyWith(_$SendMessageClickedImpl value,
          $Res Function(_$SendMessageClickedImpl) then) =
      __$$SendMessageClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$SendMessageClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$SendMessageClickedImpl>
    implements _$$SendMessageClickedImplCopyWith<$Res> {
  __$$SendMessageClickedImplCopyWithImpl(_$SendMessageClickedImpl _value,
      $Res Function(_$SendMessageClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$SendMessageClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$SendMessageClickedImpl
    with DiagnosticableTreeMixin
    implements SendMessageClicked {
  const _$SendMessageClickedImpl(
      {this.eventType = 'SEND_MESSAGE_CLICKED', final String? $type})
      : $type = $type ?? 'sendMessageClicked';

  factory _$SendMessageClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$SendMessageClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.sendMessageClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.sendMessageClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SendMessageClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$SendMessageClickedImplCopyWith<_$SendMessageClickedImpl> get copyWith =>
      __$$SendMessageClickedImplCopyWithImpl<_$SendMessageClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return sendMessageClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return sendMessageClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (sendMessageClicked != null) {
      return sendMessageClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return sendMessageClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return sendMessageClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (sendMessageClicked != null) {
      return sendMessageClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SendMessageClickedImplToJson(
      this,
    );
  }
}

abstract class SendMessageClicked implements AmplitudeEventPartTwo {
  const factory SendMessageClicked({final String eventType}) =
      _$SendMessageClickedImpl;

  factory SendMessageClicked.fromJson(Map<String, dynamic> json) =
      _$SendMessageClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$SendMessageClickedImplCopyWith<_$SendMessageClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CardTabClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$CardTabClickedImplCopyWith(_$CardTabClickedImpl value,
          $Res Function(_$CardTabClickedImpl) then) =
      __$$CardTabClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$CardTabClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$CardTabClickedImpl>
    implements _$$CardTabClickedImplCopyWith<$Res> {
  __$$CardTabClickedImplCopyWithImpl(
      _$CardTabClickedImpl _value, $Res Function(_$CardTabClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$CardTabClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CardTabClickedImpl
    with DiagnosticableTreeMixin
    implements CardTabClicked {
  const _$CardTabClickedImpl(
      {this.eventType = 'CARD_TAB_CLICKED', final String? $type})
      : $type = $type ?? 'cardTabClicked';

  factory _$CardTabClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$CardTabClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.cardTabClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.cardTabClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CardTabClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$CardTabClickedImplCopyWith<_$CardTabClickedImpl> get copyWith =>
      __$$CardTabClickedImplCopyWithImpl<_$CardTabClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return cardTabClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return cardTabClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (cardTabClicked != null) {
      return cardTabClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return cardTabClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return cardTabClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (cardTabClicked != null) {
      return cardTabClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CardTabClickedImplToJson(
      this,
    );
  }
}

abstract class CardTabClicked implements AmplitudeEventPartTwo {
  const factory CardTabClicked({final String eventType}) = _$CardTabClickedImpl;

  factory CardTabClicked.fromJson(Map<String, dynamic> json) =
      _$CardTabClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$CardTabClickedImplCopyWith<_$CardTabClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$BarTabClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$BarTabClickedImplCopyWith(
          _$BarTabClickedImpl value, $Res Function(_$BarTabClickedImpl) then) =
      __$$BarTabClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$BarTabClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$BarTabClickedImpl>
    implements _$$BarTabClickedImplCopyWith<$Res> {
  __$$BarTabClickedImplCopyWithImpl(
      _$BarTabClickedImpl _value, $Res Function(_$BarTabClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$BarTabClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BarTabClickedImpl
    with DiagnosticableTreeMixin
    implements BarTabClicked {
  const _$BarTabClickedImpl(
      {this.eventType = 'BAR_TAB_CLICKED', final String? $type})
      : $type = $type ?? 'barTabClicked';

  factory _$BarTabClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$BarTabClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.barTabClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.barTabClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BarTabClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$BarTabClickedImplCopyWith<_$BarTabClickedImpl> get copyWith =>
      __$$BarTabClickedImplCopyWithImpl<_$BarTabClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return barTabClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return barTabClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (barTabClicked != null) {
      return barTabClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return barTabClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return barTabClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (barTabClicked != null) {
      return barTabClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$BarTabClickedImplToJson(
      this,
    );
  }
}

abstract class BarTabClicked implements AmplitudeEventPartTwo {
  const factory BarTabClicked({final String eventType}) = _$BarTabClickedImpl;

  factory BarTabClicked.fromJson(Map<String, dynamic> json) =
      _$BarTabClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$BarTabClickedImplCopyWith<_$BarTabClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TapToConnectClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$TapToConnectClickedImplCopyWith(_$TapToConnectClickedImpl value,
          $Res Function(_$TapToConnectClickedImpl) then) =
      __$$TapToConnectClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String tab});
}

/// @nodoc
class __$$TapToConnectClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$TapToConnectClickedImpl>
    implements _$$TapToConnectClickedImplCopyWith<$Res> {
  __$$TapToConnectClickedImplCopyWithImpl(_$TapToConnectClickedImpl _value,
      $Res Function(_$TapToConnectClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? tab = null,
  }) {
    return _then(_$TapToConnectClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      tab: null == tab
          ? _value.tab
          : tab // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TapToConnectClickedImpl
    with DiagnosticableTreeMixin
    implements TapToConnectClicked {
  const _$TapToConnectClickedImpl(
      {this.eventType = 'TAP_TO_CONNECT_CLICKED',
      required this.tab,
      final String? $type})
      : $type = $type ?? 'tapToConnectClicked';

  factory _$TapToConnectClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TapToConnectClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String tab;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.tapToConnectClicked(eventType: $eventType, tab: $tab)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.tapToConnectClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('tab', tab));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TapToConnectClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.tab, tab) || other.tab == tab));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, tab);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$TapToConnectClickedImplCopyWith<_$TapToConnectClickedImpl> get copyWith =>
      __$$TapToConnectClickedImplCopyWithImpl<_$TapToConnectClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return tapToConnectClicked(eventType, tab);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return tapToConnectClicked?.call(eventType, tab);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (tapToConnectClicked != null) {
      return tapToConnectClicked(eventType, tab);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return tapToConnectClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return tapToConnectClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (tapToConnectClicked != null) {
      return tapToConnectClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TapToConnectClickedImplToJson(
      this,
    );
  }
}

abstract class TapToConnectClicked implements AmplitudeEventPartTwo {
  const factory TapToConnectClicked(
      {final String eventType,
      required final String tab}) = _$TapToConnectClickedImpl;

  factory TapToConnectClicked.fromJson(Map<String, dynamic> json) =
      _$TapToConnectClickedImpl.fromJson;

  @override
  String get eventType;
  String get tab;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$TapToConnectClickedImplCopyWith<_$TapToConnectClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CardDamagedClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$CardDamagedClickedImplCopyWith(_$CardDamagedClickedImpl value,
          $Res Function(_$CardDamagedClickedImpl) then) =
      __$$CardDamagedClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$CardDamagedClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$CardDamagedClickedImpl>
    implements _$$CardDamagedClickedImplCopyWith<$Res> {
  __$$CardDamagedClickedImplCopyWithImpl(_$CardDamagedClickedImpl _value,
      $Res Function(_$CardDamagedClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$CardDamagedClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CardDamagedClickedImpl
    with DiagnosticableTreeMixin
    implements CardDamagedClicked {
  const _$CardDamagedClickedImpl(
      {this.eventType = 'CARD_DAMAGED_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'cardDamagedClicked';

  factory _$CardDamagedClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$CardDamagedClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.cardDamagedClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.cardDamagedClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CardDamagedClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$CardDamagedClickedImplCopyWith<_$CardDamagedClickedImpl> get copyWith =>
      __$$CardDamagedClickedImplCopyWithImpl<_$CardDamagedClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return cardDamagedClicked(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return cardDamagedClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (cardDamagedClicked != null) {
      return cardDamagedClicked(
          eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return cardDamagedClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return cardDamagedClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (cardDamagedClicked != null) {
      return cardDamagedClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CardDamagedClickedImplToJson(
      this,
    );
  }
}

abstract class CardDamagedClicked implements AmplitudeEventPartTwo {
  const factory CardDamagedClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$CardDamagedClickedImpl;

  factory CardDamagedClicked.fromJson(Map<String, dynamic> json) =
      _$CardDamagedClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$CardDamagedClickedImplCopyWith<_$CardDamagedClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$NfcNotWorkingCLickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$NfcNotWorkingCLickedImplCopyWith(_$NfcNotWorkingCLickedImpl value,
          $Res Function(_$NfcNotWorkingCLickedImpl) then) =
      __$$NfcNotWorkingCLickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$NfcNotWorkingCLickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$NfcNotWorkingCLickedImpl>
    implements _$$NfcNotWorkingCLickedImplCopyWith<$Res> {
  __$$NfcNotWorkingCLickedImplCopyWithImpl(_$NfcNotWorkingCLickedImpl _value,
      $Res Function(_$NfcNotWorkingCLickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$NfcNotWorkingCLickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$NfcNotWorkingCLickedImpl
    with DiagnosticableTreeMixin
    implements NfcNotWorkingCLicked {
  const _$NfcNotWorkingCLickedImpl(
      {this.eventType = 'NFC_NOT_WORKING_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'nfcNotWorkingClicked';

  factory _$NfcNotWorkingCLickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$NfcNotWorkingCLickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.nfcNotWorkingClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.nfcNotWorkingClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$NfcNotWorkingCLickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$NfcNotWorkingCLickedImplCopyWith<_$NfcNotWorkingCLickedImpl>
      get copyWith =>
          __$$NfcNotWorkingCLickedImplCopyWithImpl<_$NfcNotWorkingCLickedImpl>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return nfcNotWorkingClicked(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return nfcNotWorkingClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (nfcNotWorkingClicked != null) {
      return nfcNotWorkingClicked(
          eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return nfcNotWorkingClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return nfcNotWorkingClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (nfcNotWorkingClicked != null) {
      return nfcNotWorkingClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$NfcNotWorkingCLickedImplToJson(
      this,
    );
  }
}

abstract class NfcNotWorkingCLicked implements AmplitudeEventPartTwo {
  const factory NfcNotWorkingCLicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$NfcNotWorkingCLickedImpl;

  factory NfcNotWorkingCLicked.fromJson(Map<String, dynamic> json) =
      _$NfcNotWorkingCLickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$NfcNotWorkingCLickedImplCopyWith<_$NfcNotWorkingCLickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$DontHaveCardWithMeNowClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$DontHaveCardWithMeNowClickedImplCopyWith(
          _$DontHaveCardWithMeNowClickedImpl value,
          $Res Function(_$DontHaveCardWithMeNowClickedImpl) then) =
      __$$DontHaveCardWithMeNowClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$DontHaveCardWithMeNowClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$DontHaveCardWithMeNowClickedImpl>
    implements _$$DontHaveCardWithMeNowClickedImplCopyWith<$Res> {
  __$$DontHaveCardWithMeNowClickedImplCopyWithImpl(
      _$DontHaveCardWithMeNowClickedImpl _value,
      $Res Function(_$DontHaveCardWithMeNowClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$DontHaveCardWithMeNowClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$DontHaveCardWithMeNowClickedImpl
    with DiagnosticableTreeMixin
    implements DontHaveCardWithMeNowClicked {
  const _$DontHaveCardWithMeNowClickedImpl(
      {this.eventType = 'DONT_HAVE_CARD_WITH_ME_NOW_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'dontHaveCardWithMeNowClicked';

  factory _$DontHaveCardWithMeNowClickedImpl.fromJson(
          Map<String, dynamic> json) =>
      _$$DontHaveCardWithMeNowClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.dontHaveCardWithMeNowClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.dontHaveCardWithMeNowClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DontHaveCardWithMeNowClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$DontHaveCardWithMeNowClickedImplCopyWith<
          _$DontHaveCardWithMeNowClickedImpl>
      get copyWith => __$$DontHaveCardWithMeNowClickedImplCopyWithImpl<
          _$DontHaveCardWithMeNowClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return dontHaveCardWithMeNowClicked(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return dontHaveCardWithMeNowClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (dontHaveCardWithMeNowClicked != null) {
      return dontHaveCardWithMeNowClicked(
          eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return dontHaveCardWithMeNowClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return dontHaveCardWithMeNowClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (dontHaveCardWithMeNowClicked != null) {
      return dontHaveCardWithMeNowClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$DontHaveCardWithMeNowClickedImplToJson(
      this,
    );
  }
}

abstract class DontHaveCardWithMeNowClicked implements AmplitudeEventPartTwo {
  const factory DontHaveCardWithMeNowClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$DontHaveCardWithMeNowClickedImpl;

  factory DontHaveCardWithMeNowClicked.fromJson(Map<String, dynamic> json) =
      _$DontHaveCardWithMeNowClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$DontHaveCardWithMeNowClickedImplCopyWith<
          _$DontHaveCardWithMeNowClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$LostCardClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$LostCardClickedImplCopyWith(_$LostCardClickedImpl value,
          $Res Function(_$LostCardClickedImpl) then) =
      __$$LostCardClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$LostCardClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$LostCardClickedImpl>
    implements _$$LostCardClickedImplCopyWith<$Res> {
  __$$LostCardClickedImplCopyWithImpl(
      _$LostCardClickedImpl _value, $Res Function(_$LostCardClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$LostCardClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$LostCardClickedImpl
    with DiagnosticableTreeMixin
    implements LostCardClicked {
  const _$LostCardClickedImpl(
      {this.eventType = 'LOST_CARD_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'lostCardClicked';

  factory _$LostCardClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$LostCardClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.lostCardClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEventPartTwo.lostCardClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LostCardClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$LostCardClickedImplCopyWith<_$LostCardClickedImpl> get copyWith =>
      __$$LostCardClickedImplCopyWithImpl<_$LostCardClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return lostCardClicked(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return lostCardClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (lostCardClicked != null) {
      return lostCardClicked(eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return lostCardClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return lostCardClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (lostCardClicked != null) {
      return lostCardClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$LostCardClickedImplToJson(
      this,
    );
  }
}

abstract class LostCardClicked implements AmplitudeEventPartTwo {
  const factory LostCardClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$LostCardClickedImpl;

  factory LostCardClicked.fromJson(Map<String, dynamic> json) =
      _$LostCardClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$LostCardClickedImplCopyWith<_$LostCardClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TroubleActivateClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$TroubleActivateClickedImplCopyWith(
          _$TroubleActivateClickedImpl value,
          $Res Function(_$TroubleActivateClickedImpl) then) =
      __$$TroubleActivateClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$TroubleActivateClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$TroubleActivateClickedImpl>
    implements _$$TroubleActivateClickedImplCopyWith<$Res> {
  __$$TroubleActivateClickedImplCopyWithImpl(
      _$TroubleActivateClickedImpl _value,
      $Res Function(_$TroubleActivateClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$TroubleActivateClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TroubleActivateClickedImpl
    with DiagnosticableTreeMixin
    implements TroubleActivateClicked {
  const _$TroubleActivateClickedImpl(
      {this.eventType = 'TROUBLE_ACTIVATE_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'troubleActivateClicked';

  factory _$TroubleActivateClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TroubleActivateClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.troubleActivateClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.troubleActivateClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TroubleActivateClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$TroubleActivateClickedImplCopyWith<_$TroubleActivateClickedImpl>
      get copyWith => __$$TroubleActivateClickedImplCopyWithImpl<
          _$TroubleActivateClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return troubleActivateClicked(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return troubleActivateClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (troubleActivateClicked != null) {
      return troubleActivateClicked(
          eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return troubleActivateClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return troubleActivateClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (troubleActivateClicked != null) {
      return troubleActivateClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TroubleActivateClickedImplToJson(
      this,
    );
  }
}

abstract class TroubleActivateClicked implements AmplitudeEventPartTwo {
  const factory TroubleActivateClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$TroubleActivateClickedImpl;

  factory TroubleActivateClicked.fromJson(Map<String, dynamic> json) =
      _$TroubleActivateClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$TroubleActivateClickedImplCopyWith<_$TroubleActivateClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TroubleCloseClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$TroubleCloseClickedImplCopyWith(_$TroubleCloseClickedImpl value,
          $Res Function(_$TroubleCloseClickedImpl) then) =
      __$$TroubleCloseClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$TroubleCloseClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$TroubleCloseClickedImpl>
    implements _$$TroubleCloseClickedImplCopyWith<$Res> {
  __$$TroubleCloseClickedImplCopyWithImpl(_$TroubleCloseClickedImpl _value,
      $Res Function(_$TroubleCloseClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$TroubleCloseClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TroubleCloseClickedImpl
    with DiagnosticableTreeMixin
    implements TroubleCloseClicked {
  const _$TroubleCloseClickedImpl(
      {this.eventType = 'TROUBLE_CLOSE_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'troubleCloseClicked';

  factory _$TroubleCloseClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TroubleCloseClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.troubleCloseClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.troubleCloseClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TroubleCloseClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$TroubleCloseClickedImplCopyWith<_$TroubleCloseClickedImpl> get copyWith =>
      __$$TroubleCloseClickedImplCopyWithImpl<_$TroubleCloseClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return troubleCloseClicked(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return troubleCloseClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (troubleCloseClicked != null) {
      return troubleCloseClicked(
          eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return troubleCloseClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return troubleCloseClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (troubleCloseClicked != null) {
      return troubleCloseClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TroubleCloseClickedImplToJson(
      this,
    );
  }
}

abstract class TroubleCloseClicked implements AmplitudeEventPartTwo {
  const factory TroubleCloseClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$TroubleCloseClickedImpl;

  factory TroubleCloseClicked.fromJson(Map<String, dynamic> json) =
      _$TroubleCloseClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$TroubleCloseClickedImplCopyWith<_$TroubleCloseClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TroubleGotItClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$TroubleGotItClickedImplCopyWith(_$TroubleGotItClickedImpl value,
          $Res Function(_$TroubleGotItClickedImpl) then) =
      __$$TroubleGotItClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$TroubleGotItClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$TroubleGotItClickedImpl>
    implements _$$TroubleGotItClickedImplCopyWith<$Res> {
  __$$TroubleGotItClickedImplCopyWithImpl(_$TroubleGotItClickedImpl _value,
      $Res Function(_$TroubleGotItClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$TroubleGotItClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TroubleGotItClickedImpl
    with DiagnosticableTreeMixin
    implements TroubleGotItClicked {
  const _$TroubleGotItClickedImpl(
      {this.eventType = 'TROUBLE_GOT_IT_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'troubleGotItClicked';

  factory _$TroubleGotItClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TroubleGotItClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.troubleGotItClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.troubleGotItClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TroubleGotItClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$TroubleGotItClickedImplCopyWith<_$TroubleGotItClickedImpl> get copyWith =>
      __$$TroubleGotItClickedImplCopyWithImpl<_$TroubleGotItClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return troubleGotItClicked(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return troubleGotItClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (troubleGotItClicked != null) {
      return troubleGotItClicked(
          eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return troubleGotItClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return troubleGotItClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (troubleGotItClicked != null) {
      return troubleGotItClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TroubleGotItClickedImplToJson(
      this,
    );
  }
}

abstract class TroubleGotItClicked implements AmplitudeEventPartTwo {
  const factory TroubleGotItClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$TroubleGotItClickedImpl;

  factory TroubleGotItClicked.fromJson(Map<String, dynamic> json) =
      _$TroubleGotItClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$TroubleGotItClickedImplCopyWith<_$TroubleGotItClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TroubleActivateNowClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$TroubleActivateNowClickedImplCopyWith(
          _$TroubleActivateNowClickedImpl value,
          $Res Function(_$TroubleActivateNowClickedImpl) then) =
      __$$TroubleActivateNowClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$TroubleActivateNowClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$TroubleActivateNowClickedImpl>
    implements _$$TroubleActivateNowClickedImplCopyWith<$Res> {
  __$$TroubleActivateNowClickedImplCopyWithImpl(
      _$TroubleActivateNowClickedImpl _value,
      $Res Function(_$TroubleActivateNowClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$TroubleActivateNowClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TroubleActivateNowClickedImpl
    with DiagnosticableTreeMixin
    implements TroubleActivateNowClicked {
  const _$TroubleActivateNowClickedImpl(
      {this.eventType = 'TROUBLE_ACTIVATE_NOW_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'troubleActivateNowClicked';

  factory _$TroubleActivateNowClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TroubleActivateNowClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.troubleActivateNowClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.troubleActivateNowClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TroubleActivateNowClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$TroubleActivateNowClickedImplCopyWith<_$TroubleActivateNowClickedImpl>
      get copyWith => __$$TroubleActivateNowClickedImplCopyWithImpl<
          _$TroubleActivateNowClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return troubleActivateNowClicked(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return troubleActivateNowClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (troubleActivateNowClicked != null) {
      return troubleActivateNowClicked(
          eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return troubleActivateNowClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return troubleActivateNowClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (troubleActivateNowClicked != null) {
      return troubleActivateNowClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TroubleActivateNowClickedImplToJson(
      this,
    );
  }
}

abstract class TroubleActivateNowClicked implements AmplitudeEventPartTwo {
  const factory TroubleActivateNowClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$TroubleActivateNowClickedImpl;

  factory TroubleActivateNowClicked.fromJson(Map<String, dynamic> json) =
      _$TroubleActivateNowClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$TroubleActivateNowClickedImplCopyWith<_$TroubleActivateNowClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CardAddedEventImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$CardAddedEventImplCopyWith(_$CardAddedEventImpl value,
          $Res Function(_$CardAddedEventImpl) then) =
      __$$CardAddedEventImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String address});
}

/// @nodoc
class __$$CardAddedEventImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$CardAddedEventImpl>
    implements _$$CardAddedEventImplCopyWith<$Res> {
  __$$CardAddedEventImplCopyWithImpl(
      _$CardAddedEventImpl _value, $Res Function(_$CardAddedEventImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? address = null,
  }) {
    return _then(_$CardAddedEventImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      address: null == address
          ? _value.address
          : address // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CardAddedEventImpl
    with DiagnosticableTreeMixin
    implements CardAddedEvent {
  const _$CardAddedEventImpl(
      {this.eventType = 'CARD_ADDED',
      required this.address,
      final String? $type})
      : $type = $type ?? 'cardAdded';

  factory _$CardAddedEventImpl.fromJson(Map<String, dynamic> json) =>
      _$$CardAddedEventImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String address;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.cardAdded(eventType: $eventType, address: $address)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.cardAdded'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('address', address));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CardAddedEventImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.address, address) || other.address == address));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, address);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$CardAddedEventImplCopyWith<_$CardAddedEventImpl> get copyWith =>
      __$$CardAddedEventImplCopyWithImpl<_$CardAddedEventImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return cardAdded(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return cardAdded?.call(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (cardAdded != null) {
      return cardAdded(eventType, address);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return cardAdded(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return cardAdded?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (cardAdded != null) {
      return cardAdded(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CardAddedEventImplToJson(
      this,
    );
  }
}

abstract class CardAddedEvent implements AmplitudeEventPartTwo {
  const factory CardAddedEvent(
      {final String eventType,
      required final String address}) = _$CardAddedEventImpl;

  factory CardAddedEvent.fromJson(Map<String, dynamic> json) =
      _$CardAddedEventImpl.fromJson;

  @override
  String get eventType;
  String get address;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$CardAddedEventImplCopyWith<_$CardAddedEventImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$BarAddedEventImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$BarAddedEventImplCopyWith(
          _$BarAddedEventImpl value, $Res Function(_$BarAddedEventImpl) then) =
      __$$BarAddedEventImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String address});
}

/// @nodoc
class __$$BarAddedEventImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$BarAddedEventImpl>
    implements _$$BarAddedEventImplCopyWith<$Res> {
  __$$BarAddedEventImplCopyWithImpl(
      _$BarAddedEventImpl _value, $Res Function(_$BarAddedEventImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? address = null,
  }) {
    return _then(_$BarAddedEventImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      address: null == address
          ? _value.address
          : address // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BarAddedEventImpl
    with DiagnosticableTreeMixin
    implements BarAddedEvent {
  const _$BarAddedEventImpl(
      {this.eventType = 'BAR_ADDED',
      required this.address,
      final String? $type})
      : $type = $type ?? 'barAdded';

  factory _$BarAddedEventImpl.fromJson(Map<String, dynamic> json) =>
      _$$BarAddedEventImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String address;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.barAdded(eventType: $eventType, address: $address)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.barAdded'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('address', address));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BarAddedEventImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.address, address) || other.address == address));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, address);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$BarAddedEventImplCopyWith<_$BarAddedEventImpl> get copyWith =>
      __$$BarAddedEventImplCopyWithImpl<_$BarAddedEventImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return barAdded(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return barAdded?.call(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (barAdded != null) {
      return barAdded(eventType, address);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return barAdded(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return barAdded?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (barAdded != null) {
      return barAdded(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$BarAddedEventImplToJson(
      this,
    );
  }
}

abstract class BarAddedEvent implements AmplitudeEventPartTwo {
  const factory BarAddedEvent(
      {final String eventType,
      required final String address}) = _$BarAddedEventImpl;

  factory BarAddedEvent.fromJson(Map<String, dynamic> json) =
      _$BarAddedEventImpl.fromJson;

  @override
  String get eventType;
  String get address;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$BarAddedEventImplCopyWith<_$BarAddedEventImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$EraseMyDataClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$EraseMyDataClickedImplCopyWith(_$EraseMyDataClickedImpl value,
          $Res Function(_$EraseMyDataClickedImpl) then) =
      __$$EraseMyDataClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$EraseMyDataClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$EraseMyDataClickedImpl>
    implements _$$EraseMyDataClickedImplCopyWith<$Res> {
  __$$EraseMyDataClickedImplCopyWithImpl(_$EraseMyDataClickedImpl _value,
      $Res Function(_$EraseMyDataClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$EraseMyDataClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$EraseMyDataClickedImpl
    with DiagnosticableTreeMixin
    implements EraseMyDataClicked {
  const _$EraseMyDataClickedImpl(
      {this.eventType = 'ERASE_MY_DATA_CLICKED', final String? $type})
      : $type = $type ?? 'eraseMyDataClicked';

  factory _$EraseMyDataClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$EraseMyDataClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.eraseMyDataClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.eraseMyDataClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$EraseMyDataClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$EraseMyDataClickedImplCopyWith<_$EraseMyDataClickedImpl> get copyWith =>
      __$$EraseMyDataClickedImplCopyWithImpl<_$EraseMyDataClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return eraseMyDataClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return eraseMyDataClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (eraseMyDataClicked != null) {
      return eraseMyDataClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return eraseMyDataClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return eraseMyDataClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (eraseMyDataClicked != null) {
      return eraseMyDataClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$EraseMyDataClickedImplToJson(
      this,
    );
  }
}

abstract class EraseMyDataClicked implements AmplitudeEventPartTwo {
  const factory EraseMyDataClicked({final String eventType}) =
      _$EraseMyDataClickedImpl;

  factory EraseMyDataClicked.fromJson(Map<String, dynamic> json) =
      _$EraseMyDataClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$EraseMyDataClickedImplCopyWith<_$EraseMyDataClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$EraseMyDataConfirmedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$EraseMyDataConfirmedImplCopyWith(_$EraseMyDataConfirmedImpl value,
          $Res Function(_$EraseMyDataConfirmedImpl) then) =
      __$$EraseMyDataConfirmedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$EraseMyDataConfirmedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$EraseMyDataConfirmedImpl>
    implements _$$EraseMyDataConfirmedImplCopyWith<$Res> {
  __$$EraseMyDataConfirmedImplCopyWithImpl(_$EraseMyDataConfirmedImpl _value,
      $Res Function(_$EraseMyDataConfirmedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$EraseMyDataConfirmedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$EraseMyDataConfirmedImpl
    with DiagnosticableTreeMixin
    implements EraseMyDataConfirmed {
  const _$EraseMyDataConfirmedImpl(
      {this.eventType = 'ERASE_MY_DATA_CONFIRMED', final String? $type})
      : $type = $type ?? 'eraseMyDataConfirmed';

  factory _$EraseMyDataConfirmedImpl.fromJson(Map<String, dynamic> json) =>
      _$$EraseMyDataConfirmedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.eraseMyDataConfirmed(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.eraseMyDataConfirmed'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$EraseMyDataConfirmedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$EraseMyDataConfirmedImplCopyWith<_$EraseMyDataConfirmedImpl>
      get copyWith =>
          __$$EraseMyDataConfirmedImplCopyWithImpl<_$EraseMyDataConfirmedImpl>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return eraseMyDataConfirmed(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return eraseMyDataConfirmed?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (eraseMyDataConfirmed != null) {
      return eraseMyDataConfirmed(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return eraseMyDataConfirmed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return eraseMyDataConfirmed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (eraseMyDataConfirmed != null) {
      return eraseMyDataConfirmed(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$EraseMyDataConfirmedImplToJson(
      this,
    );
  }
}

abstract class EraseMyDataConfirmed implements AmplitudeEventPartTwo {
  const factory EraseMyDataConfirmed({final String eventType}) =
      _$EraseMyDataConfirmedImpl;

  factory EraseMyDataConfirmed.fromJson(Map<String, dynamic> json) =
      _$EraseMyDataConfirmedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$EraseMyDataConfirmedImplCopyWith<_$EraseMyDataConfirmedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CoinSearchClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$CoinSearchClickedImplCopyWith(_$CoinSearchClickedImpl value,
          $Res Function(_$CoinSearchClickedImpl) then) =
      __$$CoinSearchClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$CoinSearchClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$CoinSearchClickedImpl>
    implements _$$CoinSearchClickedImplCopyWith<$Res> {
  __$$CoinSearchClickedImplCopyWithImpl(_$CoinSearchClickedImpl _value,
      $Res Function(_$CoinSearchClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$CoinSearchClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CoinSearchClickedImpl
    with DiagnosticableTreeMixin
    implements CoinSearchClicked {
  const _$CoinSearchClickedImpl(
      {this.eventType = 'COIN_SEARCH_CLICKED', final String? $type})
      : $type = $type ?? 'coinSearchClicked';

  factory _$CoinSearchClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$CoinSearchClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.coinSearchClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.coinSearchClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CoinSearchClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$CoinSearchClickedImplCopyWith<_$CoinSearchClickedImpl> get copyWith =>
      __$$CoinSearchClickedImplCopyWithImpl<_$CoinSearchClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return coinSearchClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return coinSearchClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (coinSearchClicked != null) {
      return coinSearchClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return coinSearchClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return coinSearchClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (coinSearchClicked != null) {
      return coinSearchClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CoinSearchClickedImplToJson(
      this,
    );
  }
}

abstract class CoinSearchClicked implements AmplitudeEventPartTwo {
  const factory CoinSearchClicked({final String eventType}) =
      _$CoinSearchClickedImpl;

  factory CoinSearchClicked.fromJson(Map<String, dynamic> json) =
      _$CoinSearchClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$CoinSearchClickedImplCopyWith<_$CoinSearchClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CoinSearchedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$CoinSearchedImplCopyWith(
          _$CoinSearchedImpl value, $Res Function(_$CoinSearchedImpl) then) =
      __$$CoinSearchedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String coinName});
}

/// @nodoc
class __$$CoinSearchedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$CoinSearchedImpl>
    implements _$$CoinSearchedImplCopyWith<$Res> {
  __$$CoinSearchedImplCopyWithImpl(
      _$CoinSearchedImpl _value, $Res Function(_$CoinSearchedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? coinName = null,
  }) {
    return _then(_$CoinSearchedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      coinName: null == coinName
          ? _value.coinName
          : coinName // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CoinSearchedImpl with DiagnosticableTreeMixin implements CoinSearched {
  const _$CoinSearchedImpl(
      {this.eventType = 'COIN_SEARCHED',
      required this.coinName,
      final String? $type})
      : $type = $type ?? 'coinSearched';

  factory _$CoinSearchedImpl.fromJson(Map<String, dynamic> json) =>
      _$$CoinSearchedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String coinName;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.coinSearched(eventType: $eventType, coinName: $coinName)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.coinSearched'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('coinName', coinName));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CoinSearchedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.coinName, coinName) ||
                other.coinName == coinName));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, coinName);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$CoinSearchedImplCopyWith<_$CoinSearchedImpl> get copyWith =>
      __$$CoinSearchedImplCopyWithImpl<_$CoinSearchedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return coinSearched(eventType, coinName);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return coinSearched?.call(eventType, coinName);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (coinSearched != null) {
      return coinSearched(eventType, coinName);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return coinSearched(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return coinSearched?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (coinSearched != null) {
      return coinSearched(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CoinSearchedImplToJson(
      this,
    );
  }
}

abstract class CoinSearched implements AmplitudeEventPartTwo {
  const factory CoinSearched(
      {final String eventType,
      required final String coinName}) = _$CoinSearchedImpl;

  factory CoinSearched.fromJson(Map<String, dynamic> json) =
      _$CoinSearchedImpl.fromJson;

  @override
  String get eventType;
  String get coinName;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$CoinSearchedImplCopyWith<_$CoinSearchedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$FiatClikedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$FiatClikedImplCopyWith(
          _$FiatClikedImpl value, $Res Function(_$FiatClikedImpl) then) =
      __$$FiatClikedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$FiatClikedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$FiatClikedImpl>
    implements _$$FiatClikedImplCopyWith<$Res> {
  __$$FiatClikedImplCopyWithImpl(
      _$FiatClikedImpl _value, $Res Function(_$FiatClikedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$FiatClikedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$FiatClikedImpl with DiagnosticableTreeMixin implements FiatCliked {
  const _$FiatClikedImpl({this.eventType = 'FIAT_CLICKED', final String? $type})
      : $type = $type ?? 'fiatClicked';

  factory _$FiatClikedImpl.fromJson(Map<String, dynamic> json) =>
      _$$FiatClikedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.fiatClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.fiatClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FiatClikedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$FiatClikedImplCopyWith<_$FiatClikedImpl> get copyWith =>
      __$$FiatClikedImplCopyWithImpl<_$FiatClikedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return fiatClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return fiatClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (fiatClicked != null) {
      return fiatClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return fiatClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return fiatClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (fiatClicked != null) {
      return fiatClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$FiatClikedImplToJson(
      this,
    );
  }
}

abstract class FiatCliked implements AmplitudeEventPartTwo {
  const factory FiatCliked({final String eventType}) = _$FiatClikedImpl;

  factory FiatCliked.fromJson(Map<String, dynamic> json) =
      _$FiatClikedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$FiatClikedImplCopyWith<_$FiatClikedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CoinClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$CoinClickedImplCopyWith(
          _$CoinClickedImpl value, $Res Function(_$CoinClickedImpl) then) =
      __$$CoinClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String coinName});
}

/// @nodoc
class __$$CoinClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$CoinClickedImpl>
    implements _$$CoinClickedImplCopyWith<$Res> {
  __$$CoinClickedImplCopyWithImpl(
      _$CoinClickedImpl _value, $Res Function(_$CoinClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? coinName = null,
  }) {
    return _then(_$CoinClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      coinName: null == coinName
          ? _value.coinName
          : coinName // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CoinClickedImpl with DiagnosticableTreeMixin implements CoinClicked {
  const _$CoinClickedImpl(
      {this.eventType = 'COIN_CLICKED',
      required this.coinName,
      final String? $type})
      : $type = $type ?? 'coinClicked';

  factory _$CoinClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$CoinClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String coinName;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.coinClicked(eventType: $eventType, coinName: $coinName)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.coinClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('coinName', coinName));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CoinClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.coinName, coinName) ||
                other.coinName == coinName));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, coinName);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$CoinClickedImplCopyWith<_$CoinClickedImpl> get copyWith =>
      __$$CoinClickedImplCopyWithImpl<_$CoinClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return coinClicked(eventType, coinName);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return coinClicked?.call(eventType, coinName);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (coinClicked != null) {
      return coinClicked(eventType, coinName);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return coinClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return coinClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (coinClicked != null) {
      return coinClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CoinClickedImplToJson(
      this,
    );
  }
}

abstract class CoinClicked implements AmplitudeEventPartTwo {
  const factory CoinClicked(
      {final String eventType,
      required final String coinName}) = _$CoinClickedImpl;

  factory CoinClicked.fromJson(Map<String, dynamic> json) =
      _$CoinClickedImpl.fromJson;

  @override
  String get eventType;
  String get coinName;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$CoinClickedImplCopyWith<_$CoinClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$LoadCoinsClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$LoadCoinsClickedImplCopyWith(_$LoadCoinsClickedImpl value,
          $Res Function(_$LoadCoinsClickedImpl) then) =
      __$$LoadCoinsClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$LoadCoinsClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$LoadCoinsClickedImpl>
    implements _$$LoadCoinsClickedImplCopyWith<$Res> {
  __$$LoadCoinsClickedImplCopyWithImpl(_$LoadCoinsClickedImpl _value,
      $Res Function(_$LoadCoinsClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$LoadCoinsClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$LoadCoinsClickedImpl
    with DiagnosticableTreeMixin
    implements LoadCoinsClicked {
  const _$LoadCoinsClickedImpl(
      {this.eventType = 'LOAD_COINS_CLICKED', final String? $type})
      : $type = $type ?? 'loadCoinsClicked';

  factory _$LoadCoinsClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$LoadCoinsClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.loadCoinsClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEventPartTwo.loadCoinsClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LoadCoinsClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$LoadCoinsClickedImplCopyWith<_$LoadCoinsClickedImpl> get copyWith =>
      __$$LoadCoinsClickedImplCopyWithImpl<_$LoadCoinsClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return loadCoinsClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return loadCoinsClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (loadCoinsClicked != null) {
      return loadCoinsClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return loadCoinsClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return loadCoinsClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (loadCoinsClicked != null) {
      return loadCoinsClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$LoadCoinsClickedImplToJson(
      this,
    );
  }
}

abstract class LoadCoinsClicked implements AmplitudeEventPartTwo {
  const factory LoadCoinsClicked({final String eventType}) =
      _$LoadCoinsClickedImpl;

  factory LoadCoinsClicked.fromJson(Map<String, dynamic> json) =
      _$LoadCoinsClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$LoadCoinsClickedImplCopyWith<_$LoadCoinsClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$GoUpClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$GoUpClickedImplCopyWith(
          _$GoUpClickedImpl value, $Res Function(_$GoUpClickedImpl) then) =
      __$$GoUpClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$GoUpClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$GoUpClickedImpl>
    implements _$$GoUpClickedImplCopyWith<$Res> {
  __$$GoUpClickedImplCopyWithImpl(
      _$GoUpClickedImpl _value, $Res Function(_$GoUpClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$GoUpClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$GoUpClickedImpl with DiagnosticableTreeMixin implements GoUpClicked {
  const _$GoUpClickedImpl(
      {this.eventType = 'GO_UP_CLICKED', final String? $type})
      : $type = $type ?? 'goUpClicked';

  factory _$GoUpClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$GoUpClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.goUpClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.goUpClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$GoUpClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$GoUpClickedImplCopyWith<_$GoUpClickedImpl> get copyWith =>
      __$$GoUpClickedImplCopyWithImpl<_$GoUpClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return goUpClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return goUpClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (goUpClicked != null) {
      return goUpClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return goUpClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return goUpClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (goUpClicked != null) {
      return goUpClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$GoUpClickedImplToJson(
      this,
    );
  }
}

abstract class GoUpClicked implements AmplitudeEventPartTwo {
  const factory GoUpClicked({final String eventType}) = _$GoUpClickedImpl;

  factory GoUpClicked.fromJson(Map<String, dynamic> json) =
      _$GoUpClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$GoUpClickedImplCopyWith<_$GoUpClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CardTabHistoryClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$CardTabHistoryClickedImplCopyWith(
          _$CardTabHistoryClickedImpl value,
          $Res Function(_$CardTabHistoryClickedImpl) then) =
      __$$CardTabHistoryClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$CardTabHistoryClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$CardTabHistoryClickedImpl>
    implements _$$CardTabHistoryClickedImplCopyWith<$Res> {
  __$$CardTabHistoryClickedImplCopyWithImpl(_$CardTabHistoryClickedImpl _value,
      $Res Function(_$CardTabHistoryClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$CardTabHistoryClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CardTabHistoryClickedImpl
    with DiagnosticableTreeMixin
    implements CardTabHistoryClicked {
  const _$CardTabHistoryClickedImpl(
      {this.eventType = 'CARD_TAB_HISTORY_CLICKED', final String? $type})
      : $type = $type ?? 'cardTabHistoryClicked';

  factory _$CardTabHistoryClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$CardTabHistoryClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.cardTabHistoryClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.cardTabHistoryClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CardTabHistoryClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$CardTabHistoryClickedImplCopyWith<_$CardTabHistoryClickedImpl>
      get copyWith => __$$CardTabHistoryClickedImplCopyWithImpl<
          _$CardTabHistoryClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return cardTabHistoryClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return cardTabHistoryClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (cardTabHistoryClicked != null) {
      return cardTabHistoryClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return cardTabHistoryClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return cardTabHistoryClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (cardTabHistoryClicked != null) {
      return cardTabHistoryClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CardTabHistoryClickedImplToJson(
      this,
    );
  }
}

abstract class CardTabHistoryClicked implements AmplitudeEventPartTwo {
  const factory CardTabHistoryClicked({final String eventType}) =
      _$CardTabHistoryClickedImpl;

  factory CardTabHistoryClicked.fromJson(Map<String, dynamic> json) =
      _$CardTabHistoryClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$CardTabHistoryClickedImplCopyWith<_$CardTabHistoryClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$BarTabHistoryClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$BarTabHistoryClickedImplCopyWith(_$BarTabHistoryClickedImpl value,
          $Res Function(_$BarTabHistoryClickedImpl) then) =
      __$$BarTabHistoryClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$BarTabHistoryClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$BarTabHistoryClickedImpl>
    implements _$$BarTabHistoryClickedImplCopyWith<$Res> {
  __$$BarTabHistoryClickedImplCopyWithImpl(_$BarTabHistoryClickedImpl _value,
      $Res Function(_$BarTabHistoryClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$BarTabHistoryClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BarTabHistoryClickedImpl
    with DiagnosticableTreeMixin
    implements BarTabHistoryClicked {
  const _$BarTabHistoryClickedImpl(
      {this.eventType = 'BAR_TAB_HISTORY_CLICKED', final String? $type})
      : $type = $type ?? 'barTabHistoryClicked';

  factory _$BarTabHistoryClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$BarTabHistoryClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.barTabHistoryClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.barTabHistoryClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BarTabHistoryClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$BarTabHistoryClickedImplCopyWith<_$BarTabHistoryClickedImpl>
      get copyWith =>
          __$$BarTabHistoryClickedImplCopyWithImpl<_$BarTabHistoryClickedImpl>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return barTabHistoryClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return barTabHistoryClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (barTabHistoryClicked != null) {
      return barTabHistoryClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return barTabHistoryClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return barTabHistoryClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (barTabHistoryClicked != null) {
      return barTabHistoryClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$BarTabHistoryClickedImplToJson(
      this,
    );
  }
}

abstract class BarTabHistoryClicked implements AmplitudeEventPartTwo {
  const factory BarTabHistoryClicked({final String eventType}) =
      _$BarTabHistoryClickedImpl;

  factory BarTabHistoryClicked.fromJson(Map<String, dynamic> json) =
      _$BarTabHistoryClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$BarTabHistoryClickedImplCopyWith<_$BarTabHistoryClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SelectWalletClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$SelectWalletClickedImplCopyWith(_$SelectWalletClickedImpl value,
          $Res Function(_$SelectWalletClickedImpl) then) =
      __$$SelectWalletClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletType});
}

/// @nodoc
class __$$SelectWalletClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$SelectWalletClickedImpl>
    implements _$$SelectWalletClickedImplCopyWith<$Res> {
  __$$SelectWalletClickedImplCopyWithImpl(_$SelectWalletClickedImpl _value,
      $Res Function(_$SelectWalletClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletType = null,
  }) {
    return _then(_$SelectWalletClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$SelectWalletClickedImpl
    with DiagnosticableTreeMixin
    implements SelectWalletClicked {
  const _$SelectWalletClickedImpl(
      {this.eventType = 'SELECT_WALLET_CLICKED',
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'selectWalletClicked';

  factory _$SelectWalletClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$SelectWalletClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.selectWalletClicked(eventType: $eventType, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.selectWalletClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SelectWalletClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, walletType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$SelectWalletClickedImplCopyWith<_$SelectWalletClickedImpl> get copyWith =>
      __$$SelectWalletClickedImplCopyWithImpl<_$SelectWalletClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return selectWalletClicked(eventType, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return selectWalletClicked?.call(eventType, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (selectWalletClicked != null) {
      return selectWalletClicked(eventType, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return selectWalletClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return selectWalletClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (selectWalletClicked != null) {
      return selectWalletClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SelectWalletClickedImplToJson(
      this,
    );
  }
}

abstract class SelectWalletClicked implements AmplitudeEventPartTwo {
  const factory SelectWalletClicked(
      {final String eventType,
      required final String walletType}) = _$SelectWalletClickedImpl;

  factory SelectWalletClicked.fromJson(Map<String, dynamic> json) =
      _$SelectWalletClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$SelectWalletClickedImplCopyWith<_$SelectWalletClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$WalletSelectedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$WalletSelectedImplCopyWith(_$WalletSelectedImpl value,
          $Res Function(_$WalletSelectedImpl) then) =
      __$$WalletSelectedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletType, String address});
}

/// @nodoc
class __$$WalletSelectedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$WalletSelectedImpl>
    implements _$$WalletSelectedImplCopyWith<$Res> {
  __$$WalletSelectedImplCopyWithImpl(
      _$WalletSelectedImpl _value, $Res Function(_$WalletSelectedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletType = null,
    Object? address = null,
  }) {
    return _then(_$WalletSelectedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      address: null == address
          ? _value.address
          : address // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$WalletSelectedImpl
    with DiagnosticableTreeMixin
    implements WalletSelected {
  const _$WalletSelectedImpl(
      {this.eventType = 'WALLET_SELECTED',
      required this.walletType,
      required this.address,
      final String? $type})
      : $type = $type ?? 'walletSelected';

  factory _$WalletSelectedImpl.fromJson(Map<String, dynamic> json) =>
      _$$WalletSelectedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletType;
  @override
  final String address;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.walletSelected(eventType: $eventType, walletType: $walletType, address: $address)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.walletSelected'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('address', address));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$WalletSelectedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.address, address) || other.address == address));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, walletType, address);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$WalletSelectedImplCopyWith<_$WalletSelectedImpl> get copyWith =>
      __$$WalletSelectedImplCopyWithImpl<_$WalletSelectedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return walletSelected(eventType, walletType, address);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return walletSelected?.call(eventType, walletType, address);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (walletSelected != null) {
      return walletSelected(eventType, walletType, address);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return walletSelected(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return walletSelected?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (walletSelected != null) {
      return walletSelected(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$WalletSelectedImplToJson(
      this,
    );
  }
}

abstract class WalletSelected implements AmplitudeEventPartTwo {
  const factory WalletSelected(
      {final String eventType,
      required final String walletType,
      required final String address}) = _$WalletSelectedImpl;

  factory WalletSelected.fromJson(Map<String, dynamic> json) =
      _$WalletSelectedImpl.fromJson;

  @override
  String get eventType;
  String get walletType;
  String get address;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$WalletSelectedImplCopyWith<_$WalletSelectedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PullToRefreshImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$PullToRefreshImplCopyWith(
          _$PullToRefreshImpl value, $Res Function(_$PullToRefreshImpl) then) =
      __$$PullToRefreshImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String source});
}

/// @nodoc
class __$$PullToRefreshImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$PullToRefreshImpl>
    implements _$$PullToRefreshImplCopyWith<$Res> {
  __$$PullToRefreshImplCopyWithImpl(
      _$PullToRefreshImpl _value, $Res Function(_$PullToRefreshImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
  }) {
    return _then(_$PullToRefreshImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$PullToRefreshImpl
    with DiagnosticableTreeMixin
    implements PullToRefresh {
  const _$PullToRefreshImpl(
      {this.eventType = 'PULL_TO_REFRESH',
      required this.source,
      final String? $type})
      : $type = $type ?? 'pullToRefresh';

  factory _$PullToRefreshImpl.fromJson(Map<String, dynamic> json) =>
      _$$PullToRefreshImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.pullToRefresh(eventType: $eventType, source: $source)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.pullToRefresh'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$PullToRefreshImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, source);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$PullToRefreshImplCopyWith<_$PullToRefreshImpl> get copyWith =>
      __$$PullToRefreshImplCopyWithImpl<_$PullToRefreshImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return pullToRefresh(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return pullToRefresh?.call(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (pullToRefresh != null) {
      return pullToRefresh(eventType, source);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return pullToRefresh(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return pullToRefresh?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (pullToRefresh != null) {
      return pullToRefresh(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PullToRefreshImplToJson(
      this,
    );
  }
}

abstract class PullToRefresh implements AmplitudeEventPartTwo {
  const factory PullToRefresh(
      {final String eventType,
      required final String source}) = _$PullToRefreshImpl;

  factory PullToRefresh.fromJson(Map<String, dynamic> json) =
      _$PullToRefreshImpl.fromJson;

  @override
  String get eventType;
  String get source;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$PullToRefreshImplCopyWith<_$PullToRefreshImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TransactionClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$TransactionClickedImplCopyWith(_$TransactionClickedImpl value,
          $Res Function(_$TransactionClickedImpl) then) =
      __$$TransactionClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$TransactionClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$TransactionClickedImpl>
    implements _$$TransactionClickedImplCopyWith<$Res> {
  __$$TransactionClickedImplCopyWithImpl(_$TransactionClickedImpl _value,
      $Res Function(_$TransactionClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$TransactionClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TransactionClickedImpl
    with DiagnosticableTreeMixin
    implements TransactionClicked {
  const _$TransactionClickedImpl(
      {this.eventType = 'TRANSACTION_CLICKED', final String? $type})
      : $type = $type ?? 'transactionClicked';

  factory _$TransactionClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TransactionClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.transactionClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.transactionClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TransactionClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$TransactionClickedImplCopyWith<_$TransactionClickedImpl> get copyWith =>
      __$$TransactionClickedImplCopyWithImpl<_$TransactionClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return transactionClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return transactionClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (transactionClicked != null) {
      return transactionClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return transactionClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return transactionClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (transactionClicked != null) {
      return transactionClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TransactionClickedImplToJson(
      this,
    );
  }
}

abstract class TransactionClicked implements AmplitudeEventPartTwo {
  const factory TransactionClicked({final String eventType}) =
      _$TransactionClickedImpl;

  factory TransactionClicked.fromJson(Map<String, dynamic> json) =
      _$TransactionClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$TransactionClickedImplCopyWith<_$TransactionClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$LoadTransactionClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$LoadTransactionClickedImplCopyWith(
          _$LoadTransactionClickedImpl value,
          $Res Function(_$LoadTransactionClickedImpl) then) =
      __$$LoadTransactionClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$LoadTransactionClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$LoadTransactionClickedImpl>
    implements _$$LoadTransactionClickedImplCopyWith<$Res> {
  __$$LoadTransactionClickedImplCopyWithImpl(
      _$LoadTransactionClickedImpl _value,
      $Res Function(_$LoadTransactionClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$LoadTransactionClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$LoadTransactionClickedImpl
    with DiagnosticableTreeMixin
    implements LoadTransactionClicked {
  const _$LoadTransactionClickedImpl(
      {this.eventType = 'LOAD_TRANSACTION_CLICKED', final String? $type})
      : $type = $type ?? 'loadTransactionClicked';

  factory _$LoadTransactionClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$LoadTransactionClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.loadTransactionClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.loadTransactionClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LoadTransactionClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$LoadTransactionClickedImplCopyWith<_$LoadTransactionClickedImpl>
      get copyWith => __$$LoadTransactionClickedImplCopyWithImpl<
          _$LoadTransactionClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return loadTransactionClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return loadTransactionClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (loadTransactionClicked != null) {
      return loadTransactionClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return loadTransactionClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return loadTransactionClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (loadTransactionClicked != null) {
      return loadTransactionClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$LoadTransactionClickedImplToJson(
      this,
    );
  }
}

abstract class LoadTransactionClicked implements AmplitudeEventPartTwo {
  const factory LoadTransactionClicked({final String eventType}) =
      _$LoadTransactionClickedImpl;

  factory LoadTransactionClicked.fromJson(Map<String, dynamic> json) =
      _$LoadTransactionClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$LoadTransactionClickedImplCopyWith<_$LoadTransactionClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$RefreshClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$RefreshClickedImplCopyWith(_$RefreshClickedImpl value,
          $Res Function(_$RefreshClickedImpl) then) =
      __$$RefreshClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String address});
}

/// @nodoc
class __$$RefreshClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$RefreshClickedImpl>
    implements _$$RefreshClickedImplCopyWith<$Res> {
  __$$RefreshClickedImplCopyWithImpl(
      _$RefreshClickedImpl _value, $Res Function(_$RefreshClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? address = null,
  }) {
    return _then(_$RefreshClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      address: null == address
          ? _value.address
          : address // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$RefreshClickedImpl
    with DiagnosticableTreeMixin
    implements RefreshClicked {
  const _$RefreshClickedImpl(
      {this.eventType = 'REFRESH_CLICKED',
      required this.address,
      final String? $type})
      : $type = $type ?? 'refreshClicked';

  factory _$RefreshClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$RefreshClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String address;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.refreshClicked(eventType: $eventType, address: $address)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.refreshClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('address', address));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$RefreshClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.address, address) || other.address == address));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, address);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$RefreshClickedImplCopyWith<_$RefreshClickedImpl> get copyWith =>
      __$$RefreshClickedImplCopyWithImpl<_$RefreshClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return refreshClicked(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return refreshClicked?.call(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (refreshClicked != null) {
      return refreshClicked(eventType, address);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return refreshClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return refreshClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (refreshClicked != null) {
      return refreshClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$RefreshClickedImplToJson(
      this,
    );
  }
}

abstract class RefreshClicked implements AmplitudeEventPartTwo {
  const factory RefreshClicked(
      {final String eventType,
      required final String address}) = _$RefreshClickedImpl;

  factory RefreshClicked.fromJson(Map<String, dynamic> json) =
      _$RefreshClickedImpl.fromJson;

  @override
  String get eventType;
  String get address;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$RefreshClickedImplCopyWith<_$RefreshClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$BuyBitcoinShownImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$BuyBitcoinShownImplCopyWith(_$BuyBitcoinShownImpl value,
          $Res Function(_$BuyBitcoinShownImpl) then) =
      __$$BuyBitcoinShownImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$BuyBitcoinShownImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$BuyBitcoinShownImpl>
    implements _$$BuyBitcoinShownImplCopyWith<$Res> {
  __$$BuyBitcoinShownImplCopyWithImpl(
      _$BuyBitcoinShownImpl _value, $Res Function(_$BuyBitcoinShownImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$BuyBitcoinShownImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BuyBitcoinShownImpl
    with DiagnosticableTreeMixin
    implements BuyBitcoinShown {
  const _$BuyBitcoinShownImpl(
      {this.eventType = 'BUY_BITCOIN_SHOWN', final String? $type})
      : $type = $type ?? 'buyBitcoinShown';

  factory _$BuyBitcoinShownImpl.fromJson(Map<String, dynamic> json) =>
      _$$BuyBitcoinShownImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.buyBitcoinShown(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEventPartTwo.buyBitcoinShown'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BuyBitcoinShownImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$BuyBitcoinShownImplCopyWith<_$BuyBitcoinShownImpl> get copyWith =>
      __$$BuyBitcoinShownImplCopyWithImpl<_$BuyBitcoinShownImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return buyBitcoinShown(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return buyBitcoinShown?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (buyBitcoinShown != null) {
      return buyBitcoinShown(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return buyBitcoinShown(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return buyBitcoinShown?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (buyBitcoinShown != null) {
      return buyBitcoinShown(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$BuyBitcoinShownImplToJson(
      this,
    );
  }
}

abstract class BuyBitcoinShown implements AmplitudeEventPartTwo {
  const factory BuyBitcoinShown({final String eventType}) =
      _$BuyBitcoinShownImpl;

  factory BuyBitcoinShown.fromJson(Map<String, dynamic> json) =
      _$BuyBitcoinShownImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$BuyBitcoinShownImplCopyWith<_$BuyBitcoinShownImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$BuyBitcoinNowClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$BuyBitcoinNowClickedImplCopyWith(_$BuyBitcoinNowClickedImpl value,
          $Res Function(_$BuyBitcoinNowClickedImpl) then) =
      __$$BuyBitcoinNowClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$BuyBitcoinNowClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$BuyBitcoinNowClickedImpl>
    implements _$$BuyBitcoinNowClickedImplCopyWith<$Res> {
  __$$BuyBitcoinNowClickedImplCopyWithImpl(_$BuyBitcoinNowClickedImpl _value,
      $Res Function(_$BuyBitcoinNowClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$BuyBitcoinNowClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BuyBitcoinNowClickedImpl
    with DiagnosticableTreeMixin
    implements BuyBitcoinNowClicked {
  const _$BuyBitcoinNowClickedImpl(
      {this.eventType = 'BUY_BITCOIN_NOW_CLICKED', final String? $type})
      : $type = $type ?? 'buyBitcoinNowClicked';

  factory _$BuyBitcoinNowClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$BuyBitcoinNowClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.buyBitcoinNowClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.buyBitcoinNowClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BuyBitcoinNowClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$BuyBitcoinNowClickedImplCopyWith<_$BuyBitcoinNowClickedImpl>
      get copyWith =>
          __$$BuyBitcoinNowClickedImplCopyWithImpl<_$BuyBitcoinNowClickedImpl>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return buyBitcoinNowClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return buyBitcoinNowClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (buyBitcoinNowClicked != null) {
      return buyBitcoinNowClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return buyBitcoinNowClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return buyBitcoinNowClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (buyBitcoinNowClicked != null) {
      return buyBitcoinNowClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$BuyBitcoinNowClickedImplToJson(
      this,
    );
  }
}

abstract class BuyBitcoinNowClicked implements AmplitudeEventPartTwo {
  const factory BuyBitcoinNowClicked({final String eventType}) =
      _$BuyBitcoinNowClickedImpl;

  factory BuyBitcoinNowClicked.fromJson(Map<String, dynamic> json) =
      _$BuyBitcoinNowClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$BuyBitcoinNowClickedImplCopyWith<_$BuyBitcoinNowClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$DontHaveCardClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$DontHaveCardClickedImplCopyWith(_$DontHaveCardClickedImpl value,
          $Res Function(_$DontHaveCardClickedImpl) then) =
      __$$DontHaveCardClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$DontHaveCardClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$DontHaveCardClickedImpl>
    implements _$$DontHaveCardClickedImplCopyWith<$Res> {
  __$$DontHaveCardClickedImplCopyWithImpl(_$DontHaveCardClickedImpl _value,
      $Res Function(_$DontHaveCardClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$DontHaveCardClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$DontHaveCardClickedImpl
    with DiagnosticableTreeMixin
    implements DontHaveCardClicked {
  const _$DontHaveCardClickedImpl(
      {this.eventType = 'DONT_HAVE_CARD_CLICKED', final String? $type})
      : $type = $type ?? 'dontHaveCardClicked';

  factory _$DontHaveCardClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$DontHaveCardClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.dontHaveCardClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.dontHaveCardClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DontHaveCardClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$DontHaveCardClickedImplCopyWith<_$DontHaveCardClickedImpl> get copyWith =>
      __$$DontHaveCardClickedImplCopyWithImpl<_$DontHaveCardClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return dontHaveCardClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return dontHaveCardClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (dontHaveCardClicked != null) {
      return dontHaveCardClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return dontHaveCardClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return dontHaveCardClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (dontHaveCardClicked != null) {
      return dontHaveCardClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$DontHaveCardClickedImplToJson(
      this,
    );
  }
}

abstract class DontHaveCardClicked implements AmplitudeEventPartTwo {
  const factory DontHaveCardClicked({final String eventType}) =
      _$DontHaveCardClickedImpl;

  factory DontHaveCardClicked.fromJson(Map<String, dynamic> json) =
      _$DontHaveCardClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$DontHaveCardClickedImplCopyWith<_$DontHaveCardClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PageIndicatorClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$PageIndicatorClickedImplCopyWith(_$PageIndicatorClickedImpl value,
          $Res Function(_$PageIndicatorClickedImpl) then) =
      __$$PageIndicatorClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$PageIndicatorClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$PageIndicatorClickedImpl>
    implements _$$PageIndicatorClickedImplCopyWith<$Res> {
  __$$PageIndicatorClickedImplCopyWithImpl(_$PageIndicatorClickedImpl _value,
      $Res Function(_$PageIndicatorClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$PageIndicatorClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$PageIndicatorClickedImpl
    with DiagnosticableTreeMixin
    implements PageIndicatorClicked {
  const _$PageIndicatorClickedImpl(
      {this.eventType = 'PAGE_INDICATOR_CLICKED', final String? $type})
      : $type = $type ?? 'pageIndicatorClicked';

  factory _$PageIndicatorClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$PageIndicatorClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.pageIndicatorClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.pageIndicatorClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$PageIndicatorClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$PageIndicatorClickedImplCopyWith<_$PageIndicatorClickedImpl>
      get copyWith =>
          __$$PageIndicatorClickedImplCopyWithImpl<_$PageIndicatorClickedImpl>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return pageIndicatorClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return pageIndicatorClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (pageIndicatorClicked != null) {
      return pageIndicatorClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return pageIndicatorClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return pageIndicatorClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (pageIndicatorClicked != null) {
      return pageIndicatorClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PageIndicatorClickedImplToJson(
      this,
    );
  }
}

abstract class PageIndicatorClicked implements AmplitudeEventPartTwo {
  const factory PageIndicatorClicked({final String eventType}) =
      _$PageIndicatorClickedImpl;

  factory PageIndicatorClicked.fromJson(Map<String, dynamic> json) =
      _$PageIndicatorClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$PageIndicatorClickedImplCopyWith<_$PageIndicatorClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ActivationNextClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$ActivationNextClickedImplCopyWith(
          _$ActivationNextClickedImpl value,
          $Res Function(_$ActivationNextClickedImpl) then) =
      __$$ActivationNextClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String address});
}

/// @nodoc
class __$$ActivationNextClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$ActivationNextClickedImpl>
    implements _$$ActivationNextClickedImplCopyWith<$Res> {
  __$$ActivationNextClickedImplCopyWithImpl(_$ActivationNextClickedImpl _value,
      $Res Function(_$ActivationNextClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? address = null,
  }) {
    return _then(_$ActivationNextClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      address: null == address
          ? _value.address
          : address // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ActivationNextClickedImpl
    with DiagnosticableTreeMixin
    implements ActivationNextClicked {
  const _$ActivationNextClickedImpl(
      {this.eventType = 'ACTIVATION_NEXT_CLICKED',
      required this.address,
      final String? $type})
      : $type = $type ?? 'activationNextClicked';

  factory _$ActivationNextClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$ActivationNextClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String address;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.activationNextClicked(eventType: $eventType, address: $address)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.activationNextClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('address', address));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ActivationNextClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.address, address) || other.address == address));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, address);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$ActivationNextClickedImplCopyWith<_$ActivationNextClickedImpl>
      get copyWith => __$$ActivationNextClickedImplCopyWithImpl<
          _$ActivationNextClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return activationNextClicked(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return activationNextClicked?.call(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (activationNextClicked != null) {
      return activationNextClicked(eventType, address);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return activationNextClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return activationNextClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (activationNextClicked != null) {
      return activationNextClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ActivationNextClickedImplToJson(
      this,
    );
  }
}

abstract class ActivationNextClicked implements AmplitudeEventPartTwo {
  const factory ActivationNextClicked(
      {final String eventType,
      required final String address}) = _$ActivationNextClickedImpl;

  factory ActivationNextClicked.fromJson(Map<String, dynamic> json) =
      _$ActivationNextClickedImpl.fromJson;

  @override
  String get eventType;
  String get address;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$ActivationNextClickedImplCopyWith<_$ActivationNextClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SendToAddressFilledImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$SendToAddressFilledImplCopyWith(_$SendToAddressFilledImpl value,
          $Res Function(_$SendToAddressFilledImpl) then) =
      __$$SendToAddressFilledImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String address});
}

/// @nodoc
class __$$SendToAddressFilledImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$SendToAddressFilledImpl>
    implements _$$SendToAddressFilledImplCopyWith<$Res> {
  __$$SendToAddressFilledImplCopyWithImpl(_$SendToAddressFilledImpl _value,
      $Res Function(_$SendToAddressFilledImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? address = null,
  }) {
    return _then(_$SendToAddressFilledImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      address: null == address
          ? _value.address
          : address // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$SendToAddressFilledImpl
    with DiagnosticableTreeMixin
    implements SendToAddressFilled {
  const _$SendToAddressFilledImpl(
      {this.eventType = 'SEND_TO_ADDRESS_FILLED',
      required this.address,
      final String? $type})
      : $type = $type ?? 'sendToAddressFilled';

  factory _$SendToAddressFilledImpl.fromJson(Map<String, dynamic> json) =>
      _$$SendToAddressFilledImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String address;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.sendToAddressFilled(eventType: $eventType, address: $address)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.sendToAddressFilled'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('address', address));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SendToAddressFilledImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.address, address) || other.address == address));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, address);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$SendToAddressFilledImplCopyWith<_$SendToAddressFilledImpl> get copyWith =>
      __$$SendToAddressFilledImplCopyWithImpl<_$SendToAddressFilledImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return sendToAddressFilled(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return sendToAddressFilled?.call(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (sendToAddressFilled != null) {
      return sendToAddressFilled(eventType, address);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return sendToAddressFilled(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return sendToAddressFilled?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (sendToAddressFilled != null) {
      return sendToAddressFilled(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SendToAddressFilledImplToJson(
      this,
    );
  }
}

abstract class SendToAddressFilled implements AmplitudeEventPartTwo {
  const factory SendToAddressFilled(
      {final String eventType,
      required final String address}) = _$SendToAddressFilledImpl;

  factory SendToAddressFilled.fromJson(Map<String, dynamic> json) =
      _$SendToAddressFilledImpl.fromJson;

  @override
  String get eventType;
  String get address;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$SendToAddressFilledImplCopyWith<_$SendToAddressFilledImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$BuyCardClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$BuyCardClickedImplCopyWith(_$BuyCardClickedImpl value,
          $Res Function(_$BuyCardClickedImpl) then) =
      __$$BuyCardClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$BuyCardClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$BuyCardClickedImpl>
    implements _$$BuyCardClickedImplCopyWith<$Res> {
  __$$BuyCardClickedImplCopyWithImpl(
      _$BuyCardClickedImpl _value, $Res Function(_$BuyCardClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$BuyCardClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BuyCardClickedImpl
    with DiagnosticableTreeMixin
    implements BuyCardClicked {
  const _$BuyCardClickedImpl(
      {this.eventType = 'BUY_CARD_CLICKED', final String? $type})
      : $type = $type ?? 'buyCardClicked';

  factory _$BuyCardClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$BuyCardClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.buyCardClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.buyCardClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BuyCardClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$BuyCardClickedImplCopyWith<_$BuyCardClickedImpl> get copyWith =>
      __$$BuyCardClickedImplCopyWithImpl<_$BuyCardClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return buyCardClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return buyCardClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (buyCardClicked != null) {
      return buyCardClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return buyCardClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return buyCardClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (buyCardClicked != null) {
      return buyCardClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$BuyCardClickedImplToJson(
      this,
    );
  }
}

abstract class BuyCardClicked implements AmplitudeEventPartTwo {
  const factory BuyCardClicked({final String eventType}) = _$BuyCardClickedImpl;

  factory BuyCardClicked.fromJson(Map<String, dynamic> json) =
      _$BuyCardClickedImpl.fromJson;

  @override
  String get eventType;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$BuyCardClickedImplCopyWith<_$BuyCardClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SendFromAddressChangedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$SendFromAddressChangedImplCopyWith(
          _$SendFromAddressChangedImpl value,
          $Res Function(_$SendFromAddressChangedImpl) then) =
      __$$SendFromAddressChangedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String address});
}

/// @nodoc
class __$$SendFromAddressChangedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res,
        _$SendFromAddressChangedImpl>
    implements _$$SendFromAddressChangedImplCopyWith<$Res> {
  __$$SendFromAddressChangedImplCopyWithImpl(
      _$SendFromAddressChangedImpl _value,
      $Res Function(_$SendFromAddressChangedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? address = null,
  }) {
    return _then(_$SendFromAddressChangedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      address: null == address
          ? _value.address
          : address // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$SendFromAddressChangedImpl
    with DiagnosticableTreeMixin
    implements SendFromAddressChanged {
  const _$SendFromAddressChangedImpl(
      {this.eventType = 'SEND_FROM_ADDRESS_CHANGED',
      required this.address,
      final String? $type})
      : $type = $type ?? 'sendFromAddressChanged';

  factory _$SendFromAddressChangedImpl.fromJson(Map<String, dynamic> json) =>
      _$$SendFromAddressChangedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String address;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.sendFromAddressChanged(eventType: $eventType, address: $address)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.sendFromAddressChanged'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('address', address));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SendFromAddressChangedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.address, address) || other.address == address));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, address);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$SendFromAddressChangedImplCopyWith<_$SendFromAddressChangedImpl>
      get copyWith => __$$SendFromAddressChangedImplCopyWithImpl<
          _$SendFromAddressChangedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return sendFromAddressChanged(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return sendFromAddressChanged?.call(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (sendFromAddressChanged != null) {
      return sendFromAddressChanged(eventType, address);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return sendFromAddressChanged(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return sendFromAddressChanged?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (sendFromAddressChanged != null) {
      return sendFromAddressChanged(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SendFromAddressChangedImplToJson(
      this,
    );
  }
}

abstract class SendFromAddressChanged implements AmplitudeEventPartTwo {
  const factory SendFromAddressChanged(
      {final String eventType,
      required final String address}) = _$SendFromAddressChangedImpl;

  factory SendFromAddressChanged.fromJson(Map<String, dynamic> json) =
      _$SendFromAddressChangedImpl.fromJson;

  @override
  String get eventType;
  String get address;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$SendFromAddressChangedImplCopyWith<_$SendFromAddressChangedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SendNextClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$SendNextClickedImplCopyWith(_$SendNextClickedImpl value,
          $Res Function(_$SendNextClickedImpl) then) =
      __$$SendNextClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String sendToAddress, String sendFromAddress});
}

/// @nodoc
class __$$SendNextClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$SendNextClickedImpl>
    implements _$$SendNextClickedImplCopyWith<$Res> {
  __$$SendNextClickedImplCopyWithImpl(
      _$SendNextClickedImpl _value, $Res Function(_$SendNextClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? sendToAddress = null,
    Object? sendFromAddress = null,
  }) {
    return _then(_$SendNextClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      sendToAddress: null == sendToAddress
          ? _value.sendToAddress
          : sendToAddress // ignore: cast_nullable_to_non_nullable
              as String,
      sendFromAddress: null == sendFromAddress
          ? _value.sendFromAddress
          : sendFromAddress // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$SendNextClickedImpl
    with DiagnosticableTreeMixin
    implements SendNextClicked {
  const _$SendNextClickedImpl(
      {this.eventType = 'SEND_NEXT_CLICKED',
      required this.sendToAddress,
      required this.sendFromAddress,
      final String? $type})
      : $type = $type ?? 'sendNextClicked';

  factory _$SendNextClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$SendNextClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String sendToAddress;
  @override
  final String sendFromAddress;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.sendNextClicked(eventType: $eventType, sendToAddress: $sendToAddress, sendFromAddress: $sendFromAddress)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEventPartTwo.sendNextClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('sendToAddress', sendToAddress))
      ..add(DiagnosticsProperty('sendFromAddress', sendFromAddress));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SendNextClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.sendToAddress, sendToAddress) ||
                other.sendToAddress == sendToAddress) &&
            (identical(other.sendFromAddress, sendFromAddress) ||
                other.sendFromAddress == sendFromAddress));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, sendToAddress, sendFromAddress);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$SendNextClickedImplCopyWith<_$SendNextClickedImpl> get copyWith =>
      __$$SendNextClickedImplCopyWithImpl<_$SendNextClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return sendNextClicked(eventType, sendToAddress, sendFromAddress);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return sendNextClicked?.call(eventType, sendToAddress, sendFromAddress);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (sendNextClicked != null) {
      return sendNextClicked(eventType, sendToAddress, sendFromAddress);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return sendNextClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return sendNextClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (sendNextClicked != null) {
      return sendNextClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SendNextClickedImplToJson(
      this,
    );
  }
}

abstract class SendNextClicked implements AmplitudeEventPartTwo {
  const factory SendNextClicked(
      {final String eventType,
      required final String sendToAddress,
      required final String sendFromAddress}) = _$SendNextClickedImpl;

  factory SendNextClicked.fromJson(Map<String, dynamic> json) =
      _$SendNextClickedImpl.fromJson;

  @override
  String get eventType;
  String get sendToAddress;
  String get sendFromAddress;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$SendNextClickedImplCopyWith<_$SendNextClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AmountEnteredImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$AmountEnteredImplCopyWith(
          _$AmountEnteredImpl value, $Res Function(_$AmountEnteredImpl) then) =
      __$$AmountEnteredImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String amount, String balance, String fee});
}

/// @nodoc
class __$$AmountEnteredImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$AmountEnteredImpl>
    implements _$$AmountEnteredImplCopyWith<$Res> {
  __$$AmountEnteredImplCopyWithImpl(
      _$AmountEnteredImpl _value, $Res Function(_$AmountEnteredImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? amount = null,
    Object? balance = null,
    Object? fee = null,
  }) {
    return _then(_$AmountEnteredImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      amount: null == amount
          ? _value.amount
          : amount // ignore: cast_nullable_to_non_nullable
              as String,
      balance: null == balance
          ? _value.balance
          : balance // ignore: cast_nullable_to_non_nullable
              as String,
      fee: null == fee
          ? _value.fee
          : fee // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AmountEnteredImpl
    with DiagnosticableTreeMixin
    implements AmountEntered {
  const _$AmountEnteredImpl(
      {this.eventType = 'AMOUNT_ENTERED',
      required this.amount,
      required this.balance,
      required this.fee,
      final String? $type})
      : $type = $type ?? 'amountEntered';

  factory _$AmountEnteredImpl.fromJson(Map<String, dynamic> json) =>
      _$$AmountEnteredImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String amount;
  @override
  final String balance;
  @override
  final String fee;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.amountEntered(eventType: $eventType, amount: $amount, balance: $balance, fee: $fee)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.amountEntered'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('amount', amount))
      ..add(DiagnosticsProperty('balance', balance))
      ..add(DiagnosticsProperty('fee', fee));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AmountEnteredImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.amount, amount) || other.amount == amount) &&
            (identical(other.balance, balance) || other.balance == balance) &&
            (identical(other.fee, fee) || other.fee == fee));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, amount, balance, fee);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$AmountEnteredImplCopyWith<_$AmountEnteredImpl> get copyWith =>
      __$$AmountEnteredImplCopyWithImpl<_$AmountEnteredImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return amountEntered(eventType, amount, balance, fee);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return amountEntered?.call(eventType, amount, balance, fee);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (amountEntered != null) {
      return amountEntered(eventType, amount, balance, fee);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return amountEntered(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return amountEntered?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (amountEntered != null) {
      return amountEntered(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AmountEnteredImplToJson(
      this,
    );
  }
}

abstract class AmountEntered implements AmplitudeEventPartTwo {
  const factory AmountEntered(
      {final String eventType,
      required final String amount,
      required final String balance,
      required final String fee}) = _$AmountEnteredImpl;

  factory AmountEntered.fromJson(Map<String, dynamic> json) =
      _$AmountEnteredImpl.fromJson;

  @override
  String get eventType;
  String get amount;
  String get balance;
  String get fee;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$AmountEnteredImplCopyWith<_$AmountEnteredImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SendCurrencyChangedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$SendCurrencyChangedImplCopyWith(_$SendCurrencyChangedImpl value,
          $Res Function(_$SendCurrencyChangedImpl) then) =
      __$$SendCurrencyChangedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String currency});
}

/// @nodoc
class __$$SendCurrencyChangedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$SendCurrencyChangedImpl>
    implements _$$SendCurrencyChangedImplCopyWith<$Res> {
  __$$SendCurrencyChangedImplCopyWithImpl(_$SendCurrencyChangedImpl _value,
      $Res Function(_$SendCurrencyChangedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? currency = null,
  }) {
    return _then(_$SendCurrencyChangedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      currency: null == currency
          ? _value.currency
          : currency // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$SendCurrencyChangedImpl
    with DiagnosticableTreeMixin
    implements SendCurrencyChanged {
  const _$SendCurrencyChangedImpl(
      {this.eventType = 'SEND_CURRENCY_CHANGED',
      required this.currency,
      final String? $type})
      : $type = $type ?? 'sendCurrencyChanged';

  factory _$SendCurrencyChangedImpl.fromJson(Map<String, dynamic> json) =>
      _$$SendCurrencyChangedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String currency;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.sendCurrencyChanged(eventType: $eventType, currency: $currency)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.sendCurrencyChanged'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('currency', currency));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SendCurrencyChangedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.currency, currency) ||
                other.currency == currency));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, currency);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$SendCurrencyChangedImplCopyWith<_$SendCurrencyChangedImpl> get copyWith =>
      __$$SendCurrencyChangedImplCopyWithImpl<_$SendCurrencyChangedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return sendCurrencyChanged(eventType, currency);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return sendCurrencyChanged?.call(eventType, currency);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (sendCurrencyChanged != null) {
      return sendCurrencyChanged(eventType, currency);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return sendCurrencyChanged(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return sendCurrencyChanged?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (sendCurrencyChanged != null) {
      return sendCurrencyChanged(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SendCurrencyChangedImplToJson(
      this,
    );
  }
}

abstract class SendCurrencyChanged implements AmplitudeEventPartTwo {
  const factory SendCurrencyChanged(
      {final String eventType,
      required final String currency}) = _$SendCurrencyChangedImpl;

  factory SendCurrencyChanged.fromJson(Map<String, dynamic> json) =
      _$SendCurrencyChangedImpl.fromJson;

  @override
  String get eventType;
  String get currency;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$SendCurrencyChangedImplCopyWith<_$SendCurrencyChangedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$UseMaxClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$UseMaxClickedImplCopyWith(
          _$UseMaxClickedImpl value, $Res Function(_$UseMaxClickedImpl) then) =
      __$$UseMaxClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String amount, String enoughFunds});
}

/// @nodoc
class __$$UseMaxClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$UseMaxClickedImpl>
    implements _$$UseMaxClickedImplCopyWith<$Res> {
  __$$UseMaxClickedImplCopyWithImpl(
      _$UseMaxClickedImpl _value, $Res Function(_$UseMaxClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? amount = null,
    Object? enoughFunds = null,
  }) {
    return _then(_$UseMaxClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      amount: null == amount
          ? _value.amount
          : amount // ignore: cast_nullable_to_non_nullable
              as String,
      enoughFunds: null == enoughFunds
          ? _value.enoughFunds
          : enoughFunds // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$UseMaxClickedImpl
    with DiagnosticableTreeMixin
    implements UseMaxClicked {
  const _$UseMaxClickedImpl(
      {this.eventType = 'USE_MAX_CLICKED',
      required this.amount,
      required this.enoughFunds,
      final String? $type})
      : $type = $type ?? 'useMaxClicked';

  factory _$UseMaxClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$UseMaxClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String amount;
  @override
  final String enoughFunds;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.useMaxClicked(eventType: $eventType, amount: $amount, enoughFunds: $enoughFunds)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.useMaxClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('amount', amount))
      ..add(DiagnosticsProperty('enoughFunds', enoughFunds));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$UseMaxClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.amount, amount) || other.amount == amount) &&
            (identical(other.enoughFunds, enoughFunds) ||
                other.enoughFunds == enoughFunds));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, amount, enoughFunds);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$UseMaxClickedImplCopyWith<_$UseMaxClickedImpl> get copyWith =>
      __$$UseMaxClickedImplCopyWithImpl<_$UseMaxClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return useMaxClicked(eventType, amount, enoughFunds);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return useMaxClicked?.call(eventType, amount, enoughFunds);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (useMaxClicked != null) {
      return useMaxClicked(eventType, amount, enoughFunds);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return useMaxClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return useMaxClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (useMaxClicked != null) {
      return useMaxClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$UseMaxClickedImplToJson(
      this,
    );
  }
}

abstract class UseMaxClicked implements AmplitudeEventPartTwo {
  const factory UseMaxClicked(
      {final String eventType,
      required final String amount,
      required final String enoughFunds}) = _$UseMaxClickedImpl;

  factory UseMaxClicked.fromJson(Map<String, dynamic> json) =
      _$UseMaxClickedImpl.fromJson;

  @override
  String get eventType;
  String get amount;
  String get enoughFunds;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$UseMaxClickedImplCopyWith<_$UseMaxClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AmountNextClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$AmountNextClickedImplCopyWith(_$AmountNextClickedImpl value,
          $Res Function(_$AmountNextClickedImpl) then) =
      __$$AmountNextClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String sendToAddress,
      String sendFromAddress,
      String amount,
      String balance,
      String fee});
}

/// @nodoc
class __$$AmountNextClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$AmountNextClickedImpl>
    implements _$$AmountNextClickedImplCopyWith<$Res> {
  __$$AmountNextClickedImplCopyWithImpl(_$AmountNextClickedImpl _value,
      $Res Function(_$AmountNextClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? sendToAddress = null,
    Object? sendFromAddress = null,
    Object? amount = null,
    Object? balance = null,
    Object? fee = null,
  }) {
    return _then(_$AmountNextClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      sendToAddress: null == sendToAddress
          ? _value.sendToAddress
          : sendToAddress // ignore: cast_nullable_to_non_nullable
              as String,
      sendFromAddress: null == sendFromAddress
          ? _value.sendFromAddress
          : sendFromAddress // ignore: cast_nullable_to_non_nullable
              as String,
      amount: null == amount
          ? _value.amount
          : amount // ignore: cast_nullable_to_non_nullable
              as String,
      balance: null == balance
          ? _value.balance
          : balance // ignore: cast_nullable_to_non_nullable
              as String,
      fee: null == fee
          ? _value.fee
          : fee // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AmountNextClickedImpl
    with DiagnosticableTreeMixin
    implements AmountNextClicked {
  const _$AmountNextClickedImpl(
      {this.eventType = 'AMOUNT_NEXT_CLICKED',
      required this.sendToAddress,
      required this.sendFromAddress,
      required this.amount,
      required this.balance,
      required this.fee,
      final String? $type})
      : $type = $type ?? 'amountNextClicked';

  factory _$AmountNextClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$AmountNextClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String sendToAddress;
  @override
  final String sendFromAddress;
  @override
  final String amount;
  @override
  final String balance;
  @override
  final String fee;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.amountNextClicked(eventType: $eventType, sendToAddress: $sendToAddress, sendFromAddress: $sendFromAddress, amount: $amount, balance: $balance, fee: $fee)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEventPartTwo.amountNextClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('sendToAddress', sendToAddress))
      ..add(DiagnosticsProperty('sendFromAddress', sendFromAddress))
      ..add(DiagnosticsProperty('amount', amount))
      ..add(DiagnosticsProperty('balance', balance))
      ..add(DiagnosticsProperty('fee', fee));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AmountNextClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.sendToAddress, sendToAddress) ||
                other.sendToAddress == sendToAddress) &&
            (identical(other.sendFromAddress, sendFromAddress) ||
                other.sendFromAddress == sendFromAddress) &&
            (identical(other.amount, amount) || other.amount == amount) &&
            (identical(other.balance, balance) || other.balance == balance) &&
            (identical(other.fee, fee) || other.fee == fee));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, sendToAddress,
      sendFromAddress, amount, balance, fee);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$AmountNextClickedImplCopyWith<_$AmountNextClickedImpl> get copyWith =>
      __$$AmountNextClickedImplCopyWithImpl<_$AmountNextClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return amountNextClicked(
        eventType, sendToAddress, sendFromAddress, amount, balance, fee);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return amountNextClicked?.call(
        eventType, sendToAddress, sendFromAddress, amount, balance, fee);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (amountNextClicked != null) {
      return amountNextClicked(
          eventType, sendToAddress, sendFromAddress, amount, balance, fee);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return amountNextClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return amountNextClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (amountNextClicked != null) {
      return amountNextClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AmountNextClickedImplToJson(
      this,
    );
  }
}

abstract class AmountNextClicked implements AmplitudeEventPartTwo {
  const factory AmountNextClicked(
      {final String eventType,
      required final String sendToAddress,
      required final String sendFromAddress,
      required final String amount,
      required final String balance,
      required final String fee}) = _$AmountNextClickedImpl;

  factory AmountNextClicked.fromJson(Map<String, dynamic> json) =
      _$AmountNextClickedImpl.fromJson;

  @override
  String get eventType;
  String get sendToAddress;
  String get sendFromAddress;
  String get amount;
  String get balance;
  String get fee;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$AmountNextClickedImplCopyWith<_$AmountNextClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SendClickedImplCopyWith<$Res>
    implements $AmplitudeEventPartTwoCopyWith<$Res> {
  factory _$$SendClickedImplCopyWith(
          _$SendClickedImpl value, $Res Function(_$SendClickedImpl) then) =
      __$$SendClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String sendToAddress,
      String sendFromAddress,
      String amount,
      String balance,
      String fee,
      String txHash});
}

/// @nodoc
class __$$SendClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventPartTwoCopyWithImpl<$Res, _$SendClickedImpl>
    implements _$$SendClickedImplCopyWith<$Res> {
  __$$SendClickedImplCopyWithImpl(
      _$SendClickedImpl _value, $Res Function(_$SendClickedImpl) _then)
      : super(_value, _then);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? sendToAddress = null,
    Object? sendFromAddress = null,
    Object? amount = null,
    Object? balance = null,
    Object? fee = null,
    Object? txHash = null,
  }) {
    return _then(_$SendClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      sendToAddress: null == sendToAddress
          ? _value.sendToAddress
          : sendToAddress // ignore: cast_nullable_to_non_nullable
              as String,
      sendFromAddress: null == sendFromAddress
          ? _value.sendFromAddress
          : sendFromAddress // ignore: cast_nullable_to_non_nullable
              as String,
      amount: null == amount
          ? _value.amount
          : amount // ignore: cast_nullable_to_non_nullable
              as String,
      balance: null == balance
          ? _value.balance
          : balance // ignore: cast_nullable_to_non_nullable
              as String,
      fee: null == fee
          ? _value.fee
          : fee // ignore: cast_nullable_to_non_nullable
              as String,
      txHash: null == txHash
          ? _value.txHash
          : txHash // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$SendClickedImpl with DiagnosticableTreeMixin implements SendClicked {
  const _$SendClickedImpl(
      {this.eventType = 'SEND_CLICKED',
      required this.sendToAddress,
      required this.sendFromAddress,
      required this.amount,
      required this.balance,
      required this.fee,
      required this.txHash,
      final String? $type})
      : $type = $type ?? 'sendClicked';

  factory _$SendClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$SendClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String sendToAddress;
  @override
  final String sendFromAddress;
  @override
  final String amount;
  @override
  final String balance;
  @override
  final String fee;
  @override
  final String txHash;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEventPartTwo.sendClicked(eventType: $eventType, sendToAddress: $sendToAddress, sendFromAddress: $sendFromAddress, amount: $amount, balance: $balance, fee: $fee, txHash: $txHash)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEventPartTwo.sendClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('sendToAddress', sendToAddress))
      ..add(DiagnosticsProperty('sendFromAddress', sendFromAddress))
      ..add(DiagnosticsProperty('amount', amount))
      ..add(DiagnosticsProperty('balance', balance))
      ..add(DiagnosticsProperty('fee', fee))
      ..add(DiagnosticsProperty('txHash', txHash));
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SendClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.sendToAddress, sendToAddress) ||
                other.sendToAddress == sendToAddress) &&
            (identical(other.sendFromAddress, sendFromAddress) ||
                other.sendFromAddress == sendFromAddress) &&
            (identical(other.amount, amount) || other.amount == amount) &&
            (identical(other.balance, balance) || other.balance == balance) &&
            (identical(other.fee, fee) || other.fee == fee) &&
            (identical(other.txHash, txHash) || other.txHash == txHash));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, sendToAddress,
      sendFromAddress, amount, balance, fee, txHash);

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$SendClickedImplCopyWith<_$SendClickedImpl> get copyWith =>
      __$$SendClickedImplCopyWithImpl<_$SendClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletActivationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardWithMeNowClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
    required TResult Function(String eventType) eraseMyDataClicked,
    required TResult Function(String eventType) eraseMyDataConfirmed,
    required TResult Function(String eventType) coinSearchClicked,
    required TResult Function(String eventType, String coinName) coinSearched,
    required TResult Function(String eventType) fiatClicked,
    required TResult Function(String eventType, String coinName) coinClicked,
    required TResult Function(String eventType) loadCoinsClicked,
    required TResult Function(String eventType) goUpClicked,
    required TResult Function(String eventType) cardTabHistoryClicked,
    required TResult Function(String eventType) barTabHistoryClicked,
    required TResult Function(String eventType, String walletType)
        selectWalletClicked,
    required TResult Function(
            String eventType, String walletType, String address)
        walletSelected,
    required TResult Function(String eventType, String source) pullToRefresh,
    required TResult Function(String eventType) transactionClicked,
    required TResult Function(String eventType) loadTransactionClicked,
    required TResult Function(String eventType, String address) refreshClicked,
    required TResult Function(String eventType) buyBitcoinShown,
    required TResult Function(String eventType) buyBitcoinNowClicked,
    required TResult Function(String eventType) dontHaveCardClicked,
    required TResult Function(String eventType) pageIndicatorClicked,
    required TResult Function(String eventType, String address)
        activationNextClicked,
    required TResult Function(String eventType, String address)
        sendToAddressFilled,
    required TResult Function(String eventType) buyCardClicked,
    required TResult Function(String eventType, String address)
        sendFromAddressChanged,
    required TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)
        sendNextClicked,
    required TResult Function(
            String eventType, String amount, String balance, String fee)
        amountEntered,
    required TResult Function(String eventType, String currency)
        sendCurrencyChanged,
    required TResult Function(
            String eventType, String amount, String enoughFunds)
        useMaxClicked,
    required TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)
        amountNextClicked,
    required TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)
        sendClicked,
  }) {
    return sendClicked(eventType, sendToAddress, sendFromAddress, amount,
        balance, fee, txHash);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
    TResult? Function(String eventType)? eraseMyDataClicked,
    TResult? Function(String eventType)? eraseMyDataConfirmed,
    TResult? Function(String eventType)? coinSearchClicked,
    TResult? Function(String eventType, String coinName)? coinSearched,
    TResult? Function(String eventType)? fiatClicked,
    TResult? Function(String eventType, String coinName)? coinClicked,
    TResult? Function(String eventType)? loadCoinsClicked,
    TResult? Function(String eventType)? goUpClicked,
    TResult? Function(String eventType)? cardTabHistoryClicked,
    TResult? Function(String eventType)? barTabHistoryClicked,
    TResult? Function(String eventType, String walletType)? selectWalletClicked,
    TResult? Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult? Function(String eventType, String source)? pullToRefresh,
    TResult? Function(String eventType)? transactionClicked,
    TResult? Function(String eventType)? loadTransactionClicked,
    TResult? Function(String eventType, String address)? refreshClicked,
    TResult? Function(String eventType)? buyBitcoinShown,
    TResult? Function(String eventType)? buyBitcoinNowClicked,
    TResult? Function(String eventType)? dontHaveCardClicked,
    TResult? Function(String eventType)? pageIndicatorClicked,
    TResult? Function(String eventType, String address)? activationNextClicked,
    TResult? Function(String eventType, String address)? sendToAddressFilled,
    TResult? Function(String eventType)? buyCardClicked,
    TResult? Function(String eventType, String address)? sendFromAddressChanged,
    TResult? Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult? Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult? Function(String eventType, String currency)? sendCurrencyChanged,
    TResult? Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult? Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult? Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
  }) {
    return sendClicked?.call(eventType, sendToAddress, sendFromAddress, amount,
        balance, fee, txHash);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletActivationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardWithMeNowClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    TResult Function(String eventType)? eraseMyDataClicked,
    TResult Function(String eventType)? eraseMyDataConfirmed,
    TResult Function(String eventType)? coinSearchClicked,
    TResult Function(String eventType, String coinName)? coinSearched,
    TResult Function(String eventType)? fiatClicked,
    TResult Function(String eventType, String coinName)? coinClicked,
    TResult Function(String eventType)? loadCoinsClicked,
    TResult Function(String eventType)? goUpClicked,
    TResult Function(String eventType)? cardTabHistoryClicked,
    TResult Function(String eventType)? barTabHistoryClicked,
    TResult Function(String eventType, String walletType)? selectWalletClicked,
    TResult Function(String eventType, String walletType, String address)?
        walletSelected,
    TResult Function(String eventType, String source)? pullToRefresh,
    TResult Function(String eventType)? transactionClicked,
    TResult Function(String eventType)? loadTransactionClicked,
    TResult Function(String eventType, String address)? refreshClicked,
    TResult Function(String eventType)? buyBitcoinShown,
    TResult Function(String eventType)? buyBitcoinNowClicked,
    TResult Function(String eventType)? dontHaveCardClicked,
    TResult Function(String eventType)? pageIndicatorClicked,
    TResult Function(String eventType, String address)? activationNextClicked,
    TResult Function(String eventType, String address)? sendToAddressFilled,
    TResult Function(String eventType)? buyCardClicked,
    TResult Function(String eventType, String address)? sendFromAddressChanged,
    TResult Function(
            String eventType, String sendToAddress, String sendFromAddress)?
        sendNextClicked,
    TResult Function(
            String eventType, String amount, String balance, String fee)?
        amountEntered,
    TResult Function(String eventType, String currency)? sendCurrencyChanged,
    TResult Function(String eventType, String amount, String enoughFunds)?
        useMaxClicked,
    TResult Function(String eventType, String sendToAddress,
            String sendFromAddress, String amount, String balance, String fee)?
        amountNextClicked,
    TResult Function(
            String eventType,
            String sendToAddress,
            String sendFromAddress,
            String amount,
            String balance,
            String fee,
            String txHash)?
        sendClicked,
    required TResult orElse(),
  }) {
    if (sendClicked != null) {
      return sendClicked(eventType, sendToAddress, sendFromAddress, amount,
          balance, fee, txHash);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(WalletActivated value) walletActivated,
    required TResult Function(WalletActivationFailed value)
        walletActivationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardWithMeNowClicked value)
        dontHaveCardWithMeNowClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
    required TResult Function(EraseMyDataClicked value) eraseMyDataClicked,
    required TResult Function(EraseMyDataConfirmed value) eraseMyDataConfirmed,
    required TResult Function(CoinSearchClicked value) coinSearchClicked,
    required TResult Function(CoinSearched value) coinSearched,
    required TResult Function(FiatCliked value) fiatClicked,
    required TResult Function(CoinClicked value) coinClicked,
    required TResult Function(LoadCoinsClicked value) loadCoinsClicked,
    required TResult Function(GoUpClicked value) goUpClicked,
    required TResult Function(CardTabHistoryClicked value)
        cardTabHistoryClicked,
    required TResult Function(BarTabHistoryClicked value) barTabHistoryClicked,
    required TResult Function(SelectWalletClicked value) selectWalletClicked,
    required TResult Function(WalletSelected value) walletSelected,
    required TResult Function(PullToRefresh value) pullToRefresh,
    required TResult Function(TransactionClicked value) transactionClicked,
    required TResult Function(LoadTransactionClicked value)
        loadTransactionClicked,
    required TResult Function(RefreshClicked value) refreshClicked,
    required TResult Function(BuyBitcoinShown value) buyBitcoinShown,
    required TResult Function(BuyBitcoinNowClicked value) buyBitcoinNowClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(PageIndicatorClicked value) pageIndicatorClicked,
    required TResult Function(ActivationNextClicked value)
        activationNextClicked,
    required TResult Function(SendToAddressFilled value) sendToAddressFilled,
    required TResult Function(BuyCardClicked value) buyCardClicked,
    required TResult Function(SendFromAddressChanged value)
        sendFromAddressChanged,
    required TResult Function(SendNextClicked value) sendNextClicked,
    required TResult Function(AmountEntered value) amountEntered,
    required TResult Function(SendCurrencyChanged value) sendCurrencyChanged,
    required TResult Function(UseMaxClicked value) useMaxClicked,
    required TResult Function(AmountNextClicked value) amountNextClicked,
    required TResult Function(SendClicked value) sendClicked,
  }) {
    return sendClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(WalletActivated value)? walletActivated,
    TResult? Function(WalletActivationFailed value)? walletActivationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
    TResult? Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult? Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult? Function(CoinSearchClicked value)? coinSearchClicked,
    TResult? Function(CoinSearched value)? coinSearched,
    TResult? Function(FiatCliked value)? fiatClicked,
    TResult? Function(CoinClicked value)? coinClicked,
    TResult? Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult? Function(GoUpClicked value)? goUpClicked,
    TResult? Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult? Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult? Function(SelectWalletClicked value)? selectWalletClicked,
    TResult? Function(WalletSelected value)? walletSelected,
    TResult? Function(PullToRefresh value)? pullToRefresh,
    TResult? Function(TransactionClicked value)? transactionClicked,
    TResult? Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult? Function(RefreshClicked value)? refreshClicked,
    TResult? Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult? Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult? Function(ActivationNextClicked value)? activationNextClicked,
    TResult? Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult? Function(BuyCardClicked value)? buyCardClicked,
    TResult? Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult? Function(SendNextClicked value)? sendNextClicked,
    TResult? Function(AmountEntered value)? amountEntered,
    TResult? Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult? Function(UseMaxClicked value)? useMaxClicked,
    TResult? Function(AmountNextClicked value)? amountNextClicked,
    TResult? Function(SendClicked value)? sendClicked,
  }) {
    return sendClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(WalletActivated value)? walletActivated,
    TResult Function(WalletActivationFailed value)? walletActivationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardWithMeNowClicked value)?
        dontHaveCardWithMeNowClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    TResult Function(EraseMyDataClicked value)? eraseMyDataClicked,
    TResult Function(EraseMyDataConfirmed value)? eraseMyDataConfirmed,
    TResult Function(CoinSearchClicked value)? coinSearchClicked,
    TResult Function(CoinSearched value)? coinSearched,
    TResult Function(FiatCliked value)? fiatClicked,
    TResult Function(CoinClicked value)? coinClicked,
    TResult Function(LoadCoinsClicked value)? loadCoinsClicked,
    TResult Function(GoUpClicked value)? goUpClicked,
    TResult Function(CardTabHistoryClicked value)? cardTabHistoryClicked,
    TResult Function(BarTabHistoryClicked value)? barTabHistoryClicked,
    TResult Function(SelectWalletClicked value)? selectWalletClicked,
    TResult Function(WalletSelected value)? walletSelected,
    TResult Function(PullToRefresh value)? pullToRefresh,
    TResult Function(TransactionClicked value)? transactionClicked,
    TResult Function(LoadTransactionClicked value)? loadTransactionClicked,
    TResult Function(RefreshClicked value)? refreshClicked,
    TResult Function(BuyBitcoinShown value)? buyBitcoinShown,
    TResult Function(BuyBitcoinNowClicked value)? buyBitcoinNowClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(PageIndicatorClicked value)? pageIndicatorClicked,
    TResult Function(ActivationNextClicked value)? activationNextClicked,
    TResult Function(SendToAddressFilled value)? sendToAddressFilled,
    TResult Function(BuyCardClicked value)? buyCardClicked,
    TResult Function(SendFromAddressChanged value)? sendFromAddressChanged,
    TResult Function(SendNextClicked value)? sendNextClicked,
    TResult Function(AmountEntered value)? amountEntered,
    TResult Function(SendCurrencyChanged value)? sendCurrencyChanged,
    TResult Function(UseMaxClicked value)? useMaxClicked,
    TResult Function(AmountNextClicked value)? amountNextClicked,
    TResult Function(SendClicked value)? sendClicked,
    required TResult orElse(),
  }) {
    if (sendClicked != null) {
      return sendClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SendClickedImplToJson(
      this,
    );
  }
}

abstract class SendClicked implements AmplitudeEventPartTwo {
  const factory SendClicked(
      {final String eventType,
      required final String sendToAddress,
      required final String sendFromAddress,
      required final String amount,
      required final String balance,
      required final String fee,
      required final String txHash}) = _$SendClickedImpl;

  factory SendClicked.fromJson(Map<String, dynamic> json) =
      _$SendClickedImpl.fromJson;

  @override
  String get eventType;
  String get sendToAddress;
  String get sendFromAddress;
  String get amount;
  String get balance;
  String get fee;
  String get txHash;

  /// Create a copy of AmplitudeEventPartTwo
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$SendClickedImplCopyWith<_$SendClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}
