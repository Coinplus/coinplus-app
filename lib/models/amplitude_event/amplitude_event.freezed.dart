// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target, unnecessary_question_mark

part of 'amplitude_event.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;

final _privateConstructorUsedError = UnsupportedError(
    'It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more information: https://github.com/rrousselGit/freezed#custom-getters-and-methods');

AmplitudeEvent _$AmplitudeEventFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'login':
      return LoginEvent.fromJson(json);
    case 'connectWalletClicked':
      return ConnectWalletClicked.fromJson(json);
    case 'connectManuallyClicked':
      return ConnectManuallyClicked.fromJson(json);
    case 'connectWithQrClicked':
      return ConnectWitchQrClicked.fromJson(json);
    case 'qrButtonClicked':
      return QrButtonClicked.fromJson(json);
    case 'qrScanned':
      return QrScanned.fromJson(json);
    case 'buyNewCardClicked':
      return BuyNewCardClicked.fromJson(json);
    case 'connectOptionSelected':
      return ConnectOptionSelected.fromJson(json);
    case 'nfcTapped':
      return NfcTapped.fromJson(json);
    case 'nfcClosed':
      return NfcClosed.fromJson(json);
    case 'addressFilled':
      return AddressFilled.fromJson(json);
    case 'deepLinkClicked':
      return DeeplinkClicked.fromJson(json);
    case 'typeSelected':
      return TypeSelected.fromJson(json);
    case 'saveToWalletClicked':
      return SaveToWalletClicked.fromJson(json);
    case 'alreadySavedGotItClicked':
      return AlreadySavedGotItClicked.fromJson(json);
    case 'activatedCheckboxClicked':
      return ActivatedCheckboxClicked.fromJson(json);
    case 'gotItClicked':
      return GotItClicked.fromJson(json);
    case 'warningCheckboxClicked':
      return WarningCheckboxClicked.fromJson(json);
    case 'appLockEnabled':
      return AppLockEnabled.fromJson(json);
    case 'notNowLockClicked':
      return NotNowLockClicked.fromJson(json);
    case 'walletTabClicked':
      return WalletTabClicked.fromJson(json);
    case 'settingsTabClicked':
      return SettingsTabClicked.fromJson(json);
    case 'transactionsButtonClicked':
      return TransactionsButtonClicked.fromJson(json);
    case 'addNewClicked':
      return AddNewClicked.fromJson(json);
    case 'addNewPlusClicked':
      return AddNewPlusClicked.fromJson(json);
    case 'walletSettingsClicked':
      return WalletSettingsClicked.fromJson(json);
    case 'topUpButtonCLicked':
      return TopUpButtonClicked.fromJson(json);
    case 'receiveClicked':
      return ReceiveClicked.fromJson(json);
    case 'sendClicked':
      return SendClicked.fromJson(json);
    case 'buyWithCardClicked':
      return BuyWithCardClicked.fromJson(json);
    case 'historyClicked':
      return HistoryClicked.fromJson(json);
    case 'addressCopied':
      return AddressCopied.fromJson(json);
    case 'shareAddressClicked':
      return ShareAddressClicked.fromJson(json);
    case 'gotItSendClicked':
      return GotItSendClicked.fromJson(json);
    case 'sendAnywayClicked':
      return SendAnywayClicked.fromJson(json);
    case 'backButtonClicked':
      return BackButtonClicked.fromJson(json);
    case 'secret1Validated':
      return Secret1Validated.fromJson(json);
    case 'secret2Validated':
      return Secret2Validated.fromJson(json);
    case 'continueClicked':
      return ContinueCLicked.fromJson(json);
    case 'editSecretsClicked':
      return EditSecretsClicked.fromJson(json);
    case 'validationSuccessful':
      return ValidationSuccessful.fromJson(json);
    case 'validationFailed':
      return ValidationFailed.fromJson(json);
    case 'guideMeClicked':
      return GuideMeClicked.fromJson(json);
    case 'cardColorChanged':
      return CardColorCHanged.fromJson(json);
    case 'clickedOnPrivateKey':
      return ClickedOnPrivateKey.fromJson(json);
    case 'privateKeyRevealed':
      return PrivateKeyRevealed.fromJson(json);
    case 'privateKeyCopied':
      return PrivateKeyCopied.fromJson(json);
    case 'cardNameChanged':
      return CardNameChanged.fromJson(json);
    case 'helpCenterClicked':
      return HelpCenterClicked.fromJson(json);
    case 'removeCardClicked':
      return RemoveCardClicked.fromJson(json);
    case 'cardDeleted':
      return CardDeleted.fromJson(json);
    case 'notSureClicked':
      return NotSureClicked.fromJson(json);
    case 'contactUsClicked':
      return ContactUsClicked.fromJson(json);
    case 'appLockClicked':
      return AppLockClicked.fromJson(json);
    case 'appLockDisabled':
      return AppLockDisabled.fromJson(json);
    case 'changePasscodeClicked':
      return ChangePasscodeClicked.fromJson(json);
    case 'passcodeChanged':
      return PasscodeChanged.fromJson(json);
    case 'faceIdEnabled':
      return FaceIdEnabled.fromJson(json);
    case 'faceIdDisabled':
      return FaceIdDisabled.fromJson(json);
    case 'pushNotificationsOn':
      return PushNotificationsOn.fromJson(json);
    case 'pushNotificationsOff':
      return PushNotificationsOff.fromJson(json);
    case 'joinCommunityClicked':
      return JoinCommunityClicked.fromJson(json);
    case 'privacyPolicyClicked':
      return PrivacyPolicyClicked.fromJson(json);
    case 'termsOfUseClicked':
      return TermsOfUseClicked.fromJson(json);
    case 'verifyCardClicked':
      return VerifyCardClicked.fromJson(json);
    case 'verifyCardTapped':
      return VerifyCardTapped.fromJson(json);
    case 'sendMessageClicked':
      return SendMessageClicked.fromJson(json);
    case 'cardTabClicked':
      return CardTabClicked.fromJson(json);
    case 'barTabClicked':
      return BarTabClicked.fromJson(json);
    case 'tapToConnectClicked':
      return TapToConnectClicked.fromJson(json);
    case 'cardDamagedClicked':
      return CardDamagedClicked.fromJson(json);
    case 'nfcNotWorkingClicked':
      return NfcNotWorkingCLicked.fromJson(json);
    case 'dontHaveCardClicked':
      return DontHaveCardClicked.fromJson(json);
    case 'lostCardClicked':
      return LostCardClicked.fromJson(json);
    case 'troubleActivateClicked':
      return TroubleActivateClicked.fromJson(json);
    case 'troubleCloseClicked':
      return TroubleCloseClicked.fromJson(json);
    case 'troubleGotItClicked':
      return TroubleGotItClicked.fromJson(json);
    case 'troubleActivateNowClicked':
      return TroubleActivateNowClicked.fromJson(json);
    case 'cardAdded':
      return CardAddedEvent.fromJson(json);
    case 'barAdded':
      return BarAddedEvent.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AmplitudeEvent',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
mixin _$AmplitudeEvent {
  String get eventType => throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
  @JsonKey(ignore: true)
  $AmplitudeEventCopyWith<AmplitudeEvent> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AmplitudeEventCopyWith<$Res> {
  factory $AmplitudeEventCopyWith(
          AmplitudeEvent value, $Res Function(AmplitudeEvent) then) =
      _$AmplitudeEventCopyWithImpl<$Res, AmplitudeEvent>;
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class _$AmplitudeEventCopyWithImpl<$Res, $Val extends AmplitudeEvent>
    implements $AmplitudeEventCopyWith<$Res> {
  _$AmplitudeEventCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_value.copyWith(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ) as $Val);
  }
}

/// @nodoc
abstract class _$$LoginEventImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$LoginEventImplCopyWith(
          _$LoginEventImpl value, $Res Function(_$LoginEventImpl) then) =
      __$$LoginEventImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$LoginEventImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$LoginEventImpl>
    implements _$$LoginEventImplCopyWith<$Res> {
  __$$LoginEventImplCopyWithImpl(
      _$LoginEventImpl _value, $Res Function(_$LoginEventImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$LoginEventImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$LoginEventImpl with DiagnosticableTreeMixin implements LoginEvent {
  const _$LoginEventImpl({this.eventType = 'LOGIN', final String? $type})
      : $type = $type ?? 'login';

  factory _$LoginEventImpl.fromJson(Map<String, dynamic> json) =>
      _$$LoginEventImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.login(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.login'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LoginEventImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$LoginEventImplCopyWith<_$LoginEventImpl> get copyWith =>
      __$$LoginEventImplCopyWithImpl<_$LoginEventImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return login(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return login?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (login != null) {
      return login(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return login(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return login?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (login != null) {
      return login(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$LoginEventImplToJson(
      this,
    );
  }
}

abstract class LoginEvent implements AmplitudeEvent {
  const factory LoginEvent({final String eventType}) = _$LoginEventImpl;

  factory LoginEvent.fromJson(Map<String, dynamic> json) =
      _$LoginEventImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$LoginEventImplCopyWith<_$LoginEventImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ConnectWalletClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$ConnectWalletClickedImplCopyWith(_$ConnectWalletClickedImpl value,
          $Res Function(_$ConnectWalletClickedImpl) then) =
      __$$ConnectWalletClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$ConnectWalletClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$ConnectWalletClickedImpl>
    implements _$$ConnectWalletClickedImplCopyWith<$Res> {
  __$$ConnectWalletClickedImplCopyWithImpl(_$ConnectWalletClickedImpl _value,
      $Res Function(_$ConnectWalletClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$ConnectWalletClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ConnectWalletClickedImpl
    with DiagnosticableTreeMixin
    implements ConnectWalletClicked {
  const _$ConnectWalletClickedImpl(
      {this.eventType = 'CONNECT_WALLET_CLICKED', final String? $type})
      : $type = $type ?? 'connectWalletClicked';

  factory _$ConnectWalletClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$ConnectWalletClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.connectWalletClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.connectWalletClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ConnectWalletClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ConnectWalletClickedImplCopyWith<_$ConnectWalletClickedImpl>
      get copyWith =>
          __$$ConnectWalletClickedImplCopyWithImpl<_$ConnectWalletClickedImpl>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return connectWalletClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return connectWalletClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (connectWalletClicked != null) {
      return connectWalletClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return connectWalletClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return connectWalletClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (connectWalletClicked != null) {
      return connectWalletClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ConnectWalletClickedImplToJson(
      this,
    );
  }
}

abstract class ConnectWalletClicked implements AmplitudeEvent {
  const factory ConnectWalletClicked({final String eventType}) =
      _$ConnectWalletClickedImpl;

  factory ConnectWalletClicked.fromJson(Map<String, dynamic> json) =
      _$ConnectWalletClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$ConnectWalletClickedImplCopyWith<_$ConnectWalletClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ConnectManuallyClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$ConnectManuallyClickedImplCopyWith(
          _$ConnectManuallyClickedImpl value,
          $Res Function(_$ConnectManuallyClickedImpl) then) =
      __$$ConnectManuallyClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String source});
}

/// @nodoc
class __$$ConnectManuallyClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$ConnectManuallyClickedImpl>
    implements _$$ConnectManuallyClickedImplCopyWith<$Res> {
  __$$ConnectManuallyClickedImplCopyWithImpl(
      _$ConnectManuallyClickedImpl _value,
      $Res Function(_$ConnectManuallyClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
  }) {
    return _then(_$ConnectManuallyClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ConnectManuallyClickedImpl
    with DiagnosticableTreeMixin
    implements ConnectManuallyClicked {
  const _$ConnectManuallyClickedImpl(
      {this.eventType = 'CONNECT_MANUALLY_CLICKED',
      required this.source,
      final String? $type})
      : $type = $type ?? 'connectManuallyClicked';

  factory _$ConnectManuallyClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$ConnectManuallyClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.connectManuallyClicked(eventType: $eventType, source: $source)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEvent.connectManuallyClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ConnectManuallyClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, source);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ConnectManuallyClickedImplCopyWith<_$ConnectManuallyClickedImpl>
      get copyWith => __$$ConnectManuallyClickedImplCopyWithImpl<
          _$ConnectManuallyClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return connectManuallyClicked(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return connectManuallyClicked?.call(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (connectManuallyClicked != null) {
      return connectManuallyClicked(eventType, source);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return connectManuallyClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return connectManuallyClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (connectManuallyClicked != null) {
      return connectManuallyClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ConnectManuallyClickedImplToJson(
      this,
    );
  }
}

abstract class ConnectManuallyClicked implements AmplitudeEvent {
  const factory ConnectManuallyClicked(
      {final String eventType,
      required final String source}) = _$ConnectManuallyClickedImpl;

  factory ConnectManuallyClicked.fromJson(Map<String, dynamic> json) =
      _$ConnectManuallyClickedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  @override
  @JsonKey(ignore: true)
  _$$ConnectManuallyClickedImplCopyWith<_$ConnectManuallyClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ConnectWitchQrClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$ConnectWitchQrClickedImplCopyWith(
          _$ConnectWitchQrClickedImpl value,
          $Res Function(_$ConnectWitchQrClickedImpl) then) =
      __$$ConnectWitchQrClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String source});
}

/// @nodoc
class __$$ConnectWitchQrClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$ConnectWitchQrClickedImpl>
    implements _$$ConnectWitchQrClickedImplCopyWith<$Res> {
  __$$ConnectWitchQrClickedImplCopyWithImpl(_$ConnectWitchQrClickedImpl _value,
      $Res Function(_$ConnectWitchQrClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
  }) {
    return _then(_$ConnectWitchQrClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ConnectWitchQrClickedImpl
    with DiagnosticableTreeMixin
    implements ConnectWitchQrClicked {
  const _$ConnectWitchQrClickedImpl(
      {this.eventType = 'CONNECT_WITH_QR_CLICKED',
      required this.source,
      final String? $type})
      : $type = $type ?? 'connectWithQrClicked';

  factory _$ConnectWitchQrClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$ConnectWitchQrClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.connectWithQrClicked(eventType: $eventType, source: $source)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.connectWithQrClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ConnectWitchQrClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, source);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ConnectWitchQrClickedImplCopyWith<_$ConnectWitchQrClickedImpl>
      get copyWith => __$$ConnectWitchQrClickedImplCopyWithImpl<
          _$ConnectWitchQrClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return connectWithQrClicked(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return connectWithQrClicked?.call(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (connectWithQrClicked != null) {
      return connectWithQrClicked(eventType, source);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return connectWithQrClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return connectWithQrClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (connectWithQrClicked != null) {
      return connectWithQrClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ConnectWitchQrClickedImplToJson(
      this,
    );
  }
}

abstract class ConnectWitchQrClicked implements AmplitudeEvent {
  const factory ConnectWitchQrClicked(
      {final String eventType,
      required final String source}) = _$ConnectWitchQrClickedImpl;

  factory ConnectWitchQrClicked.fromJson(Map<String, dynamic> json) =
      _$ConnectWitchQrClickedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  @override
  @JsonKey(ignore: true)
  _$$ConnectWitchQrClickedImplCopyWith<_$ConnectWitchQrClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$QrButtonClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$QrButtonClickedImplCopyWith(_$QrButtonClickedImpl value,
          $Res Function(_$QrButtonClickedImpl) then) =
      __$$QrButtonClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletType, String source});
}

/// @nodoc
class __$$QrButtonClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$QrButtonClickedImpl>
    implements _$$QrButtonClickedImplCopyWith<$Res> {
  __$$QrButtonClickedImplCopyWithImpl(
      _$QrButtonClickedImpl _value, $Res Function(_$QrButtonClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletType = null,
    Object? source = null,
  }) {
    return _then(_$QrButtonClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$QrButtonClickedImpl
    with DiagnosticableTreeMixin
    implements QrButtonClicked {
  const _$QrButtonClickedImpl(
      {this.eventType = 'QR_BUTTON_CLICKED',
      required this.walletType,
      required this.source,
      final String? $type})
      : $type = $type ?? 'qrButtonClicked';

  factory _$QrButtonClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$QrButtonClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletType;
  @override
  final String source;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.qrButtonClicked(eventType: $eventType, walletType: $walletType, source: $source)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.qrButtonClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('source', source));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$QrButtonClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.source, source) || other.source == source));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, walletType, source);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$QrButtonClickedImplCopyWith<_$QrButtonClickedImpl> get copyWith =>
      __$$QrButtonClickedImplCopyWithImpl<_$QrButtonClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return qrButtonClicked(eventType, walletType, source);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return qrButtonClicked?.call(eventType, walletType, source);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (qrButtonClicked != null) {
      return qrButtonClicked(eventType, walletType, source);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return qrButtonClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return qrButtonClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (qrButtonClicked != null) {
      return qrButtonClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$QrButtonClickedImplToJson(
      this,
    );
  }
}

abstract class QrButtonClicked implements AmplitudeEvent {
  const factory QrButtonClicked(
      {final String eventType,
      required final String walletType,
      required final String source}) = _$QrButtonClickedImpl;

  factory QrButtonClicked.fromJson(Map<String, dynamic> json) =
      _$QrButtonClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletType;
  String get source;
  @override
  @JsonKey(ignore: true)
  _$$QrButtonClickedImplCopyWith<_$QrButtonClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$QrScannedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$QrScannedImplCopyWith(
          _$QrScannedImpl value, $Res Function(_$QrScannedImpl) then) =
      __$$QrScannedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String source, String walletAddress});
}

/// @nodoc
class __$$QrScannedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$QrScannedImpl>
    implements _$$QrScannedImplCopyWith<$Res> {
  __$$QrScannedImplCopyWithImpl(
      _$QrScannedImpl _value, $Res Function(_$QrScannedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
    Object? walletAddress = null,
  }) {
    return _then(_$QrScannedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$QrScannedImpl with DiagnosticableTreeMixin implements QrScanned {
  const _$QrScannedImpl(
      {this.eventType = 'QR_SCANNED',
      required this.source,
      required this.walletAddress,
      final String? $type})
      : $type = $type ?? 'qrScanned';

  factory _$QrScannedImpl.fromJson(Map<String, dynamic> json) =>
      _$$QrScannedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;
  @override
  final String walletAddress;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.qrScanned(eventType: $eventType, source: $source, walletAddress: $walletAddress)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.qrScanned'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source))
      ..add(DiagnosticsProperty('walletAddress', walletAddress));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$QrScannedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, source, walletAddress);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$QrScannedImplCopyWith<_$QrScannedImpl> get copyWith =>
      __$$QrScannedImplCopyWithImpl<_$QrScannedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return qrScanned(eventType, source, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return qrScanned?.call(eventType, source, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (qrScanned != null) {
      return qrScanned(eventType, source, walletAddress);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return qrScanned(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return qrScanned?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (qrScanned != null) {
      return qrScanned(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$QrScannedImplToJson(
      this,
    );
  }
}

abstract class QrScanned implements AmplitudeEvent {
  const factory QrScanned(
      {final String eventType,
      required final String source,
      required final String walletAddress}) = _$QrScannedImpl;

  factory QrScanned.fromJson(Map<String, dynamic> json) =
      _$QrScannedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  String get walletAddress;
  @override
  @JsonKey(ignore: true)
  _$$QrScannedImplCopyWith<_$QrScannedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$BuyNewCardClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$BuyNewCardClickedImplCopyWith(_$BuyNewCardClickedImpl value,
          $Res Function(_$BuyNewCardClickedImpl) then) =
      __$$BuyNewCardClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String source});
}

/// @nodoc
class __$$BuyNewCardClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$BuyNewCardClickedImpl>
    implements _$$BuyNewCardClickedImplCopyWith<$Res> {
  __$$BuyNewCardClickedImplCopyWithImpl(_$BuyNewCardClickedImpl _value,
      $Res Function(_$BuyNewCardClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
  }) {
    return _then(_$BuyNewCardClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BuyNewCardClickedImpl
    with DiagnosticableTreeMixin
    implements BuyNewCardClicked {
  const _$BuyNewCardClickedImpl(
      {this.eventType = 'BUY_NEW_CARD_CLICKED',
      required this.source,
      final String? $type})
      : $type = $type ?? 'buyNewCardClicked';

  factory _$BuyNewCardClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$BuyNewCardClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.buyNewCardClicked(eventType: $eventType, source: $source)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.buyNewCardClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BuyNewCardClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, source);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$BuyNewCardClickedImplCopyWith<_$BuyNewCardClickedImpl> get copyWith =>
      __$$BuyNewCardClickedImplCopyWithImpl<_$BuyNewCardClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return buyNewCardClicked(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return buyNewCardClicked?.call(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (buyNewCardClicked != null) {
      return buyNewCardClicked(eventType, source);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return buyNewCardClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return buyNewCardClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (buyNewCardClicked != null) {
      return buyNewCardClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$BuyNewCardClickedImplToJson(
      this,
    );
  }
}

abstract class BuyNewCardClicked implements AmplitudeEvent {
  const factory BuyNewCardClicked(
      {final String eventType,
      required final String source}) = _$BuyNewCardClickedImpl;

  factory BuyNewCardClicked.fromJson(Map<String, dynamic> json) =
      _$BuyNewCardClickedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  @override
  @JsonKey(ignore: true)
  _$$BuyNewCardClickedImplCopyWith<_$BuyNewCardClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ConnectOptionSelectedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$ConnectOptionSelectedImplCopyWith(
          _$ConnectOptionSelectedImpl value,
          $Res Function(_$ConnectOptionSelectedImpl) then) =
      __$$ConnectOptionSelectedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String source, String connectOption});
}

/// @nodoc
class __$$ConnectOptionSelectedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$ConnectOptionSelectedImpl>
    implements _$$ConnectOptionSelectedImplCopyWith<$Res> {
  __$$ConnectOptionSelectedImplCopyWithImpl(_$ConnectOptionSelectedImpl _value,
      $Res Function(_$ConnectOptionSelectedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
    Object? connectOption = null,
  }) {
    return _then(_$ConnectOptionSelectedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
      connectOption: null == connectOption
          ? _value.connectOption
          : connectOption // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ConnectOptionSelectedImpl
    with DiagnosticableTreeMixin
    implements ConnectOptionSelected {
  const _$ConnectOptionSelectedImpl(
      {this.eventType = 'CONNECT_OPTION_SELECTED',
      required this.source,
      required this.connectOption,
      final String? $type})
      : $type = $type ?? 'connectOptionSelected';

  factory _$ConnectOptionSelectedImpl.fromJson(Map<String, dynamic> json) =>
      _$$ConnectOptionSelectedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;
  @override
  final String connectOption;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.connectOptionSelected(eventType: $eventType, source: $source, connectOption: $connectOption)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.connectOptionSelected'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source))
      ..add(DiagnosticsProperty('connectOption', connectOption));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ConnectOptionSelectedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source) &&
            (identical(other.connectOption, connectOption) ||
                other.connectOption == connectOption));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, source, connectOption);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ConnectOptionSelectedImplCopyWith<_$ConnectOptionSelectedImpl>
      get copyWith => __$$ConnectOptionSelectedImplCopyWithImpl<
          _$ConnectOptionSelectedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return connectOptionSelected(eventType, source, connectOption);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return connectOptionSelected?.call(eventType, source, connectOption);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (connectOptionSelected != null) {
      return connectOptionSelected(eventType, source, connectOption);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return connectOptionSelected(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return connectOptionSelected?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (connectOptionSelected != null) {
      return connectOptionSelected(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ConnectOptionSelectedImplToJson(
      this,
    );
  }
}

abstract class ConnectOptionSelected implements AmplitudeEvent {
  const factory ConnectOptionSelected(
      {final String eventType,
      required final String source,
      required final String connectOption}) = _$ConnectOptionSelectedImpl;

  factory ConnectOptionSelected.fromJson(Map<String, dynamic> json) =
      _$ConnectOptionSelectedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  String get connectOption;
  @override
  @JsonKey(ignore: true)
  _$$ConnectOptionSelectedImplCopyWith<_$ConnectOptionSelectedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$NfcTappedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$NfcTappedImplCopyWith(
          _$NfcTappedImpl value, $Res Function(_$NfcTappedImpl) then) =
      __$$NfcTappedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String source, String walletAddress});
}

/// @nodoc
class __$$NfcTappedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$NfcTappedImpl>
    implements _$$NfcTappedImplCopyWith<$Res> {
  __$$NfcTappedImplCopyWithImpl(
      _$NfcTappedImpl _value, $Res Function(_$NfcTappedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
    Object? walletAddress = null,
  }) {
    return _then(_$NfcTappedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$NfcTappedImpl with DiagnosticableTreeMixin implements NfcTapped {
  const _$NfcTappedImpl(
      {this.eventType = 'NFC_TAPPED',
      required this.source,
      required this.walletAddress,
      final String? $type})
      : $type = $type ?? 'nfcTapped';

  factory _$NfcTappedImpl.fromJson(Map<String, dynamic> json) =>
      _$$NfcTappedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;
  @override
  final String walletAddress;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.nfcTapped(eventType: $eventType, source: $source, walletAddress: $walletAddress)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.nfcTapped'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source))
      ..add(DiagnosticsProperty('walletAddress', walletAddress));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$NfcTappedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, source, walletAddress);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$NfcTappedImplCopyWith<_$NfcTappedImpl> get copyWith =>
      __$$NfcTappedImplCopyWithImpl<_$NfcTappedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return nfcTapped(eventType, source, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return nfcTapped?.call(eventType, source, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (nfcTapped != null) {
      return nfcTapped(eventType, source, walletAddress);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return nfcTapped(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return nfcTapped?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (nfcTapped != null) {
      return nfcTapped(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$NfcTappedImplToJson(
      this,
    );
  }
}

abstract class NfcTapped implements AmplitudeEvent {
  const factory NfcTapped(
      {final String eventType,
      required final String source,
      required final String walletAddress}) = _$NfcTappedImpl;

  factory NfcTapped.fromJson(Map<String, dynamic> json) =
      _$NfcTappedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  String get walletAddress;
  @override
  @JsonKey(ignore: true)
  _$$NfcTappedImplCopyWith<_$NfcTappedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$NfcClosedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$NfcClosedImplCopyWith(
          _$NfcClosedImpl value, $Res Function(_$NfcClosedImpl) then) =
      __$$NfcClosedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String source});
}

/// @nodoc
class __$$NfcClosedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$NfcClosedImpl>
    implements _$$NfcClosedImplCopyWith<$Res> {
  __$$NfcClosedImplCopyWithImpl(
      _$NfcClosedImpl _value, $Res Function(_$NfcClosedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
  }) {
    return _then(_$NfcClosedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$NfcClosedImpl with DiagnosticableTreeMixin implements NfcClosed {
  const _$NfcClosedImpl(
      {this.eventType = 'NFC_CLOSED',
      required this.source,
      final String? $type})
      : $type = $type ?? 'nfcClosed';

  factory _$NfcClosedImpl.fromJson(Map<String, dynamic> json) =>
      _$$NfcClosedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.nfcClosed(eventType: $eventType, source: $source)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.nfcClosed'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$NfcClosedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, source);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$NfcClosedImplCopyWith<_$NfcClosedImpl> get copyWith =>
      __$$NfcClosedImplCopyWithImpl<_$NfcClosedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return nfcClosed(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return nfcClosed?.call(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (nfcClosed != null) {
      return nfcClosed(eventType, source);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return nfcClosed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return nfcClosed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (nfcClosed != null) {
      return nfcClosed(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$NfcClosedImplToJson(
      this,
    );
  }
}

abstract class NfcClosed implements AmplitudeEvent {
  const factory NfcClosed(
      {final String eventType, required final String source}) = _$NfcClosedImpl;

  factory NfcClosed.fromJson(Map<String, dynamic> json) =
      _$NfcClosedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  @override
  @JsonKey(ignore: true)
  _$$NfcClosedImplCopyWith<_$NfcClosedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AddressFilledImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$AddressFilledImplCopyWith(
          _$AddressFilledImpl value, $Res Function(_$AddressFilledImpl) then) =
      __$$AddressFilledImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String source,
      String walletType,
      String walletAddress});
}

/// @nodoc
class __$$AddressFilledImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$AddressFilledImpl>
    implements _$$AddressFilledImplCopyWith<$Res> {
  __$$AddressFilledImplCopyWithImpl(
      _$AddressFilledImpl _value, $Res Function(_$AddressFilledImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
    Object? walletType = null,
    Object? walletAddress = null,
  }) {
    return _then(_$AddressFilledImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AddressFilledImpl
    with DiagnosticableTreeMixin
    implements AddressFilled {
  const _$AddressFilledImpl(
      {this.eventType = 'ADDRESS_FILLED',
      required this.source,
      required this.walletType,
      required this.walletAddress,
      final String? $type})
      : $type = $type ?? 'addressFilled';

  factory _$AddressFilledImpl.fromJson(Map<String, dynamic> json) =>
      _$$AddressFilledImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;
  @override
  final String walletType;
  @override
  final String walletAddress;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.addressFilled(eventType: $eventType, source: $source, walletType: $walletType, walletAddress: $walletAddress)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.addressFilled'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AddressFilledImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, source, walletType, walletAddress);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$AddressFilledImplCopyWith<_$AddressFilledImpl> get copyWith =>
      __$$AddressFilledImplCopyWithImpl<_$AddressFilledImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return addressFilled(eventType, source, walletType, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return addressFilled?.call(eventType, source, walletType, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (addressFilled != null) {
      return addressFilled(eventType, source, walletType, walletAddress);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return addressFilled(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return addressFilled?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (addressFilled != null) {
      return addressFilled(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AddressFilledImplToJson(
      this,
    );
  }
}

abstract class AddressFilled implements AmplitudeEvent {
  const factory AddressFilled(
      {final String eventType,
      required final String source,
      required final String walletType,
      required final String walletAddress}) = _$AddressFilledImpl;

  factory AddressFilled.fromJson(Map<String, dynamic> json) =
      _$AddressFilledImpl.fromJson;

  @override
  String get eventType;
  String get source;
  String get walletType;
  String get walletAddress;
  @override
  @JsonKey(ignore: true)
  _$$AddressFilledImplCopyWith<_$AddressFilledImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$DeeplinkClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$DeeplinkClickedImplCopyWith(_$DeeplinkClickedImpl value,
          $Res Function(_$DeeplinkClickedImpl) then) =
      __$$DeeplinkClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String source,
      String walletType,
      String walletAddress});
}

/// @nodoc
class __$$DeeplinkClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$DeeplinkClickedImpl>
    implements _$$DeeplinkClickedImplCopyWith<$Res> {
  __$$DeeplinkClickedImplCopyWithImpl(
      _$DeeplinkClickedImpl _value, $Res Function(_$DeeplinkClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
    Object? walletType = null,
    Object? walletAddress = null,
  }) {
    return _then(_$DeeplinkClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$DeeplinkClickedImpl
    with DiagnosticableTreeMixin
    implements DeeplinkClicked {
  const _$DeeplinkClickedImpl(
      {this.eventType = 'DEEPLINK_CLICKED',
      required this.source,
      required this.walletType,
      required this.walletAddress,
      final String? $type})
      : $type = $type ?? 'deepLinkClicked';

  factory _$DeeplinkClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$DeeplinkClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;
  @override
  final String walletType;
  @override
  final String walletAddress;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.deepLinkClicked(eventType: $eventType, source: $source, walletType: $walletType, walletAddress: $walletAddress)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.deepLinkClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DeeplinkClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, source, walletType, walletAddress);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$DeeplinkClickedImplCopyWith<_$DeeplinkClickedImpl> get copyWith =>
      __$$DeeplinkClickedImplCopyWithImpl<_$DeeplinkClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return deepLinkClicked(eventType, source, walletType, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return deepLinkClicked?.call(eventType, source, walletType, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (deepLinkClicked != null) {
      return deepLinkClicked(eventType, source, walletType, walletAddress);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return deepLinkClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return deepLinkClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (deepLinkClicked != null) {
      return deepLinkClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$DeeplinkClickedImplToJson(
      this,
    );
  }
}

abstract class DeeplinkClicked implements AmplitudeEvent {
  const factory DeeplinkClicked(
      {final String eventType,
      required final String source,
      required final String walletType,
      required final String walletAddress}) = _$DeeplinkClickedImpl;

  factory DeeplinkClicked.fromJson(Map<String, dynamic> json) =
      _$DeeplinkClickedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  String get walletType;
  String get walletAddress;
  @override
  @JsonKey(ignore: true)
  _$$DeeplinkClickedImplCopyWith<_$DeeplinkClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TypeSelectedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$TypeSelectedImplCopyWith(
          _$TypeSelectedImpl value, $Res Function(_$TypeSelectedImpl) then) =
      __$$TypeSelectedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String source, String walletType});
}

/// @nodoc
class __$$TypeSelectedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$TypeSelectedImpl>
    implements _$$TypeSelectedImplCopyWith<$Res> {
  __$$TypeSelectedImplCopyWithImpl(
      _$TypeSelectedImpl _value, $Res Function(_$TypeSelectedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
    Object? walletType = null,
  }) {
    return _then(_$TypeSelectedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TypeSelectedImpl with DiagnosticableTreeMixin implements TypeSelected {
  const _$TypeSelectedImpl(
      {this.eventType = 'WALLET_TYPE_SELECTED',
      required this.source,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'typeSelected';

  factory _$TypeSelectedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TypeSelectedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.typeSelected(eventType: $eventType, source: $source, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.typeSelected'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TypeSelectedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, source, walletType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$TypeSelectedImplCopyWith<_$TypeSelectedImpl> get copyWith =>
      __$$TypeSelectedImplCopyWithImpl<_$TypeSelectedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return typeSelected(eventType, source, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return typeSelected?.call(eventType, source, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (typeSelected != null) {
      return typeSelected(eventType, source, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return typeSelected(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return typeSelected?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (typeSelected != null) {
      return typeSelected(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TypeSelectedImplToJson(
      this,
    );
  }
}

abstract class TypeSelected implements AmplitudeEvent {
  const factory TypeSelected(
      {final String eventType,
      required final String source,
      required final String walletType}) = _$TypeSelectedImpl;

  factory TypeSelected.fromJson(Map<String, dynamic> json) =
      _$TypeSelectedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  String get walletType;
  @override
  @JsonKey(ignore: true)
  _$$TypeSelectedImplCopyWith<_$TypeSelectedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SaveToWalletClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$SaveToWalletClickedImplCopyWith(_$SaveToWalletClickedImpl value,
          $Res Function(_$SaveToWalletClickedImpl) then) =
      __$$SaveToWalletClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String source,
      String walletType,
      String walletAddress});
}

/// @nodoc
class __$$SaveToWalletClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$SaveToWalletClickedImpl>
    implements _$$SaveToWalletClickedImplCopyWith<$Res> {
  __$$SaveToWalletClickedImplCopyWithImpl(_$SaveToWalletClickedImpl _value,
      $Res Function(_$SaveToWalletClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
    Object? walletType = null,
    Object? walletAddress = null,
  }) {
    return _then(_$SaveToWalletClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$SaveToWalletClickedImpl
    with DiagnosticableTreeMixin
    implements SaveToWalletClicked {
  const _$SaveToWalletClickedImpl(
      {this.eventType = 'SAVE_TO_WALLET_CLICKED',
      required this.source,
      required this.walletType,
      required this.walletAddress,
      final String? $type})
      : $type = $type ?? 'saveToWalletClicked';

  factory _$SaveToWalletClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$SaveToWalletClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;
  @override
  final String walletType;
  @override
  final String walletAddress;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.saveToWalletClicked(eventType: $eventType, source: $source, walletType: $walletType, walletAddress: $walletAddress)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.saveToWalletClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SaveToWalletClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, source, walletType, walletAddress);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$SaveToWalletClickedImplCopyWith<_$SaveToWalletClickedImpl> get copyWith =>
      __$$SaveToWalletClickedImplCopyWithImpl<_$SaveToWalletClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return saveToWalletClicked(eventType, source, walletType, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return saveToWalletClicked?.call(
        eventType, source, walletType, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (saveToWalletClicked != null) {
      return saveToWalletClicked(eventType, source, walletType, walletAddress);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return saveToWalletClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return saveToWalletClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (saveToWalletClicked != null) {
      return saveToWalletClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SaveToWalletClickedImplToJson(
      this,
    );
  }
}

abstract class SaveToWalletClicked implements AmplitudeEvent {
  const factory SaveToWalletClicked(
      {final String eventType,
      required final String source,
      required final String walletType,
      required final String walletAddress}) = _$SaveToWalletClickedImpl;

  factory SaveToWalletClicked.fromJson(Map<String, dynamic> json) =
      _$SaveToWalletClickedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  String get walletType;
  String get walletAddress;
  @override
  @JsonKey(ignore: true)
  _$$SaveToWalletClickedImplCopyWith<_$SaveToWalletClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AlreadySavedGotItClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$AlreadySavedGotItClickedImplCopyWith(
          _$AlreadySavedGotItClickedImpl value,
          $Res Function(_$AlreadySavedGotItClickedImpl) then) =
      __$$AlreadySavedGotItClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletType, String walletAddress});
}

/// @nodoc
class __$$AlreadySavedGotItClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$AlreadySavedGotItClickedImpl>
    implements _$$AlreadySavedGotItClickedImplCopyWith<$Res> {
  __$$AlreadySavedGotItClickedImplCopyWithImpl(
      _$AlreadySavedGotItClickedImpl _value,
      $Res Function(_$AlreadySavedGotItClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletType = null,
    Object? walletAddress = null,
  }) {
    return _then(_$AlreadySavedGotItClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AlreadySavedGotItClickedImpl
    with DiagnosticableTreeMixin
    implements AlreadySavedGotItClicked {
  const _$AlreadySavedGotItClickedImpl(
      {this.eventType = 'ALREADY_SAVED_GOT_IT_CLICKED',
      required this.walletType,
      required this.walletAddress,
      final String? $type})
      : $type = $type ?? 'alreadySavedGotItClicked';

  factory _$AlreadySavedGotItClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$AlreadySavedGotItClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletType;
  @override
  final String walletAddress;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.alreadySavedGotItClicked(eventType: $eventType, walletType: $walletType, walletAddress: $walletAddress)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEvent.alreadySavedGotItClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AlreadySavedGotItClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletType, walletAddress);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$AlreadySavedGotItClickedImplCopyWith<_$AlreadySavedGotItClickedImpl>
      get copyWith => __$$AlreadySavedGotItClickedImplCopyWithImpl<
          _$AlreadySavedGotItClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return alreadySavedGotItClicked(eventType, walletType, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return alreadySavedGotItClicked?.call(eventType, walletType, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (alreadySavedGotItClicked != null) {
      return alreadySavedGotItClicked(eventType, walletType, walletAddress);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return alreadySavedGotItClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return alreadySavedGotItClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (alreadySavedGotItClicked != null) {
      return alreadySavedGotItClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AlreadySavedGotItClickedImplToJson(
      this,
    );
  }
}

abstract class AlreadySavedGotItClicked implements AmplitudeEvent {
  const factory AlreadySavedGotItClicked(
      {final String eventType,
      required final String walletType,
      required final String walletAddress}) = _$AlreadySavedGotItClickedImpl;

  factory AlreadySavedGotItClicked.fromJson(Map<String, dynamic> json) =
      _$AlreadySavedGotItClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletType;
  String get walletAddress;
  @override
  @JsonKey(ignore: true)
  _$$AlreadySavedGotItClickedImplCopyWith<_$AlreadySavedGotItClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ActivatedCheckboxClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$ActivatedCheckboxClickedImplCopyWith(
          _$ActivatedCheckboxClickedImpl value,
          $Res Function(_$ActivatedCheckboxClickedImpl) then) =
      __$$ActivatedCheckboxClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String source,
      String walletType,
      String walletAddress});
}

/// @nodoc
class __$$ActivatedCheckboxClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$ActivatedCheckboxClickedImpl>
    implements _$$ActivatedCheckboxClickedImplCopyWith<$Res> {
  __$$ActivatedCheckboxClickedImplCopyWithImpl(
      _$ActivatedCheckboxClickedImpl _value,
      $Res Function(_$ActivatedCheckboxClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
    Object? walletType = null,
    Object? walletAddress = null,
  }) {
    return _then(_$ActivatedCheckboxClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ActivatedCheckboxClickedImpl
    with DiagnosticableTreeMixin
    implements ActivatedCheckboxClicked {
  const _$ActivatedCheckboxClickedImpl(
      {this.eventType = 'ACTIVATED_CHECKBOX_CLICKED',
      required this.source,
      required this.walletType,
      required this.walletAddress,
      final String? $type})
      : $type = $type ?? 'activatedCheckboxClicked';

  factory _$ActivatedCheckboxClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$ActivatedCheckboxClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;
  @override
  final String walletType;
  @override
  final String walletAddress;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.activatedCheckboxClicked(eventType: $eventType, source: $source, walletType: $walletType, walletAddress: $walletAddress)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEvent.activatedCheckboxClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ActivatedCheckboxClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, source, walletType, walletAddress);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ActivatedCheckboxClickedImplCopyWith<_$ActivatedCheckboxClickedImpl>
      get copyWith => __$$ActivatedCheckboxClickedImplCopyWithImpl<
          _$ActivatedCheckboxClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return activatedCheckboxClicked(
        eventType, source, walletType, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return activatedCheckboxClicked?.call(
        eventType, source, walletType, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (activatedCheckboxClicked != null) {
      return activatedCheckboxClicked(
          eventType, source, walletType, walletAddress);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return activatedCheckboxClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return activatedCheckboxClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (activatedCheckboxClicked != null) {
      return activatedCheckboxClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ActivatedCheckboxClickedImplToJson(
      this,
    );
  }
}

abstract class ActivatedCheckboxClicked implements AmplitudeEvent {
  const factory ActivatedCheckboxClicked(
      {final String eventType,
      required final String source,
      required final String walletType,
      required final String walletAddress}) = _$ActivatedCheckboxClickedImpl;

  factory ActivatedCheckboxClicked.fromJson(Map<String, dynamic> json) =
      _$ActivatedCheckboxClickedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  String get walletType;
  String get walletAddress;
  @override
  @JsonKey(ignore: true)
  _$$ActivatedCheckboxClickedImplCopyWith<_$ActivatedCheckboxClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$GotItClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$GotItClickedImplCopyWith(
          _$GotItClickedImpl value, $Res Function(_$GotItClickedImpl) then) =
      __$$GotItClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String source,
      String walletType,
      String walletAddress});
}

/// @nodoc
class __$$GotItClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$GotItClickedImpl>
    implements _$$GotItClickedImplCopyWith<$Res> {
  __$$GotItClickedImplCopyWithImpl(
      _$GotItClickedImpl _value, $Res Function(_$GotItClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
    Object? walletType = null,
    Object? walletAddress = null,
  }) {
    return _then(_$GotItClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$GotItClickedImpl with DiagnosticableTreeMixin implements GotItClicked {
  const _$GotItClickedImpl(
      {this.eventType = 'GOT_IT_CLICKED',
      required this.source,
      required this.walletType,
      required this.walletAddress,
      final String? $type})
      : $type = $type ?? 'gotItClicked';

  factory _$GotItClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$GotItClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;
  @override
  final String walletType;
  @override
  final String walletAddress;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.gotItClicked(eventType: $eventType, source: $source, walletType: $walletType, walletAddress: $walletAddress)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.gotItClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$GotItClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, source, walletType, walletAddress);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$GotItClickedImplCopyWith<_$GotItClickedImpl> get copyWith =>
      __$$GotItClickedImplCopyWithImpl<_$GotItClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return gotItClicked(eventType, source, walletType, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return gotItClicked?.call(eventType, source, walletType, walletAddress);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (gotItClicked != null) {
      return gotItClicked(eventType, source, walletType, walletAddress);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return gotItClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return gotItClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (gotItClicked != null) {
      return gotItClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$GotItClickedImplToJson(
      this,
    );
  }
}

abstract class GotItClicked implements AmplitudeEvent {
  const factory GotItClicked(
      {final String eventType,
      required final String source,
      required final String walletType,
      required final String walletAddress}) = _$GotItClickedImpl;

  factory GotItClicked.fromJson(Map<String, dynamic> json) =
      _$GotItClickedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  String get walletType;
  String get walletAddress;
  @override
  @JsonKey(ignore: true)
  _$$GotItClickedImplCopyWith<_$GotItClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$WarningCheckboxClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$WarningCheckboxClickedImplCopyWith(
          _$WarningCheckboxClickedImpl value,
          $Res Function(_$WarningCheckboxClickedImpl) then) =
      __$$WarningCheckboxClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$WarningCheckboxClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$WarningCheckboxClickedImpl>
    implements _$$WarningCheckboxClickedImplCopyWith<$Res> {
  __$$WarningCheckboxClickedImplCopyWithImpl(
      _$WarningCheckboxClickedImpl _value,
      $Res Function(_$WarningCheckboxClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$WarningCheckboxClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$WarningCheckboxClickedImpl
    with DiagnosticableTreeMixin
    implements WarningCheckboxClicked {
  const _$WarningCheckboxClickedImpl(
      {this.eventType = 'WARNING_CHECKBOX_CLICKED', final String? $type})
      : $type = $type ?? 'warningCheckboxClicked';

  factory _$WarningCheckboxClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$WarningCheckboxClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.warningCheckboxClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEvent.warningCheckboxClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$WarningCheckboxClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$WarningCheckboxClickedImplCopyWith<_$WarningCheckboxClickedImpl>
      get copyWith => __$$WarningCheckboxClickedImplCopyWithImpl<
          _$WarningCheckboxClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return warningCheckboxClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return warningCheckboxClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (warningCheckboxClicked != null) {
      return warningCheckboxClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return warningCheckboxClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return warningCheckboxClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (warningCheckboxClicked != null) {
      return warningCheckboxClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$WarningCheckboxClickedImplToJson(
      this,
    );
  }
}

abstract class WarningCheckboxClicked implements AmplitudeEvent {
  const factory WarningCheckboxClicked({final String eventType}) =
      _$WarningCheckboxClickedImpl;

  factory WarningCheckboxClicked.fromJson(Map<String, dynamic> json) =
      _$WarningCheckboxClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$WarningCheckboxClickedImplCopyWith<_$WarningCheckboxClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AppLockEnabledImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$AppLockEnabledImplCopyWith(_$AppLockEnabledImpl value,
          $Res Function(_$AppLockEnabledImpl) then) =
      __$$AppLockEnabledImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$AppLockEnabledImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$AppLockEnabledImpl>
    implements _$$AppLockEnabledImplCopyWith<$Res> {
  __$$AppLockEnabledImplCopyWithImpl(
      _$AppLockEnabledImpl _value, $Res Function(_$AppLockEnabledImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$AppLockEnabledImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AppLockEnabledImpl
    with DiagnosticableTreeMixin
    implements AppLockEnabled {
  const _$AppLockEnabledImpl(
      {this.eventType = 'APP_LOCK_ENABLED', final String? $type})
      : $type = $type ?? 'appLockEnabled';

  factory _$AppLockEnabledImpl.fromJson(Map<String, dynamic> json) =>
      _$$AppLockEnabledImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.appLockEnabled(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.appLockEnabled'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AppLockEnabledImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$AppLockEnabledImplCopyWith<_$AppLockEnabledImpl> get copyWith =>
      __$$AppLockEnabledImplCopyWithImpl<_$AppLockEnabledImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return appLockEnabled(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return appLockEnabled?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (appLockEnabled != null) {
      return appLockEnabled(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return appLockEnabled(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return appLockEnabled?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (appLockEnabled != null) {
      return appLockEnabled(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AppLockEnabledImplToJson(
      this,
    );
  }
}

abstract class AppLockEnabled implements AmplitudeEvent {
  const factory AppLockEnabled({final String eventType}) = _$AppLockEnabledImpl;

  factory AppLockEnabled.fromJson(Map<String, dynamic> json) =
      _$AppLockEnabledImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$AppLockEnabledImplCopyWith<_$AppLockEnabledImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$NotNowLockClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$NotNowLockClickedImplCopyWith(_$NotNowLockClickedImpl value,
          $Res Function(_$NotNowLockClickedImpl) then) =
      __$$NotNowLockClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$NotNowLockClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$NotNowLockClickedImpl>
    implements _$$NotNowLockClickedImplCopyWith<$Res> {
  __$$NotNowLockClickedImplCopyWithImpl(_$NotNowLockClickedImpl _value,
      $Res Function(_$NotNowLockClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$NotNowLockClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$NotNowLockClickedImpl
    with DiagnosticableTreeMixin
    implements NotNowLockClicked {
  const _$NotNowLockClickedImpl(
      {this.eventType = 'NOT_NOW_LOCK_CLICKED', final String? $type})
      : $type = $type ?? 'notNowLockClicked';

  factory _$NotNowLockClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$NotNowLockClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.notNowLockClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.notNowLockClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$NotNowLockClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$NotNowLockClickedImplCopyWith<_$NotNowLockClickedImpl> get copyWith =>
      __$$NotNowLockClickedImplCopyWithImpl<_$NotNowLockClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return notNowLockClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return notNowLockClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (notNowLockClicked != null) {
      return notNowLockClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return notNowLockClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return notNowLockClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (notNowLockClicked != null) {
      return notNowLockClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$NotNowLockClickedImplToJson(
      this,
    );
  }
}

abstract class NotNowLockClicked implements AmplitudeEvent {
  const factory NotNowLockClicked({final String eventType}) =
      _$NotNowLockClickedImpl;

  factory NotNowLockClicked.fromJson(Map<String, dynamic> json) =
      _$NotNowLockClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$NotNowLockClickedImplCopyWith<_$NotNowLockClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$WalletTabClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$WalletTabClickedImplCopyWith(_$WalletTabClickedImpl value,
          $Res Function(_$WalletTabClickedImpl) then) =
      __$$WalletTabClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$WalletTabClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$WalletTabClickedImpl>
    implements _$$WalletTabClickedImplCopyWith<$Res> {
  __$$WalletTabClickedImplCopyWithImpl(_$WalletTabClickedImpl _value,
      $Res Function(_$WalletTabClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$WalletTabClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$WalletTabClickedImpl
    with DiagnosticableTreeMixin
    implements WalletTabClicked {
  const _$WalletTabClickedImpl(
      {this.eventType = 'WALLET_TAB_CLICKED', final String? $type})
      : $type = $type ?? 'walletTabClicked';

  factory _$WalletTabClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$WalletTabClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.walletTabClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.walletTabClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$WalletTabClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$WalletTabClickedImplCopyWith<_$WalletTabClickedImpl> get copyWith =>
      __$$WalletTabClickedImplCopyWithImpl<_$WalletTabClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return walletTabClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return walletTabClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (walletTabClicked != null) {
      return walletTabClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return walletTabClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return walletTabClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (walletTabClicked != null) {
      return walletTabClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$WalletTabClickedImplToJson(
      this,
    );
  }
}

abstract class WalletTabClicked implements AmplitudeEvent {
  const factory WalletTabClicked({final String eventType}) =
      _$WalletTabClickedImpl;

  factory WalletTabClicked.fromJson(Map<String, dynamic> json) =
      _$WalletTabClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$WalletTabClickedImplCopyWith<_$WalletTabClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SettingsTabClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$SettingsTabClickedImplCopyWith(_$SettingsTabClickedImpl value,
          $Res Function(_$SettingsTabClickedImpl) then) =
      __$$SettingsTabClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$SettingsTabClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$SettingsTabClickedImpl>
    implements _$$SettingsTabClickedImplCopyWith<$Res> {
  __$$SettingsTabClickedImplCopyWithImpl(_$SettingsTabClickedImpl _value,
      $Res Function(_$SettingsTabClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$SettingsTabClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$SettingsTabClickedImpl
    with DiagnosticableTreeMixin
    implements SettingsTabClicked {
  const _$SettingsTabClickedImpl(
      {this.eventType = 'SETTINGS_TAB_CLICKED', final String? $type})
      : $type = $type ?? 'settingsTabClicked';

  factory _$SettingsTabClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$SettingsTabClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.settingsTabClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.settingsTabClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SettingsTabClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$SettingsTabClickedImplCopyWith<_$SettingsTabClickedImpl> get copyWith =>
      __$$SettingsTabClickedImplCopyWithImpl<_$SettingsTabClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return settingsTabClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return settingsTabClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (settingsTabClicked != null) {
      return settingsTabClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return settingsTabClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return settingsTabClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (settingsTabClicked != null) {
      return settingsTabClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SettingsTabClickedImplToJson(
      this,
    );
  }
}

abstract class SettingsTabClicked implements AmplitudeEvent {
  const factory SettingsTabClicked({final String eventType}) =
      _$SettingsTabClickedImpl;

  factory SettingsTabClicked.fromJson(Map<String, dynamic> json) =
      _$SettingsTabClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$SettingsTabClickedImplCopyWith<_$SettingsTabClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TransactionsButtonClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$TransactionsButtonClickedImplCopyWith(
          _$TransactionsButtonClickedImpl value,
          $Res Function(_$TransactionsButtonClickedImpl) then) =
      __$$TransactionsButtonClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletType,
      String walletAddress,
      bool activated});
}

/// @nodoc
class __$$TransactionsButtonClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$TransactionsButtonClickedImpl>
    implements _$$TransactionsButtonClickedImplCopyWith<$Res> {
  __$$TransactionsButtonClickedImplCopyWithImpl(
      _$TransactionsButtonClickedImpl _value,
      $Res Function(_$TransactionsButtonClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletType = null,
    Object? walletAddress = null,
    Object? activated = null,
  }) {
    return _then(_$TransactionsButtonClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TransactionsButtonClickedImpl
    with DiagnosticableTreeMixin
    implements TransactionsButtonClicked {
  const _$TransactionsButtonClickedImpl(
      {this.eventType = 'TRANSACTIONS_BUTTON_CLICKED',
      required this.walletType,
      required this.walletAddress,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'transactionsButtonClicked';

  factory _$TransactionsButtonClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TransactionsButtonClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletType;
  @override
  final String walletAddress;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.transactionsButtonClicked(eventType: $eventType, walletType: $walletType, walletAddress: $walletAddress, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEvent.transactionsButtonClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TransactionsButtonClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletType, walletAddress, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$TransactionsButtonClickedImplCopyWith<_$TransactionsButtonClickedImpl>
      get copyWith => __$$TransactionsButtonClickedImplCopyWithImpl<
          _$TransactionsButtonClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return transactionsButtonClicked(
        eventType, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return transactionsButtonClicked?.call(
        eventType, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (transactionsButtonClicked != null) {
      return transactionsButtonClicked(
          eventType, walletType, walletAddress, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return transactionsButtonClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return transactionsButtonClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (transactionsButtonClicked != null) {
      return transactionsButtonClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TransactionsButtonClickedImplToJson(
      this,
    );
  }
}

abstract class TransactionsButtonClicked implements AmplitudeEvent {
  const factory TransactionsButtonClicked(
      {final String eventType,
      required final String walletType,
      required final String walletAddress,
      required final bool activated}) = _$TransactionsButtonClickedImpl;

  factory TransactionsButtonClicked.fromJson(Map<String, dynamic> json) =
      _$TransactionsButtonClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletType;
  String get walletAddress;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$TransactionsButtonClickedImplCopyWith<_$TransactionsButtonClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AddNewClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$AddNewClickedImplCopyWith(
          _$AddNewClickedImpl value, $Res Function(_$AddNewClickedImpl) then) =
      __$$AddNewClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String tab});
}

/// @nodoc
class __$$AddNewClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$AddNewClickedImpl>
    implements _$$AddNewClickedImplCopyWith<$Res> {
  __$$AddNewClickedImplCopyWithImpl(
      _$AddNewClickedImpl _value, $Res Function(_$AddNewClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? tab = null,
  }) {
    return _then(_$AddNewClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      tab: null == tab
          ? _value.tab
          : tab // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AddNewClickedImpl
    with DiagnosticableTreeMixin
    implements AddNewClicked {
  const _$AddNewClickedImpl(
      {this.eventType = 'ADD_NEW_CLICKED',
      required this.tab,
      final String? $type})
      : $type = $type ?? 'addNewClicked';

  factory _$AddNewClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$AddNewClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String tab;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.addNewClicked(eventType: $eventType, tab: $tab)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.addNewClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('tab', tab));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AddNewClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.tab, tab) || other.tab == tab));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, tab);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$AddNewClickedImplCopyWith<_$AddNewClickedImpl> get copyWith =>
      __$$AddNewClickedImplCopyWithImpl<_$AddNewClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return addNewClicked(eventType, tab);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return addNewClicked?.call(eventType, tab);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (addNewClicked != null) {
      return addNewClicked(eventType, tab);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return addNewClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return addNewClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (addNewClicked != null) {
      return addNewClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AddNewClickedImplToJson(
      this,
    );
  }
}

abstract class AddNewClicked implements AmplitudeEvent {
  const factory AddNewClicked(
      {final String eventType,
      required final String tab}) = _$AddNewClickedImpl;

  factory AddNewClicked.fromJson(Map<String, dynamic> json) =
      _$AddNewClickedImpl.fromJson;

  @override
  String get eventType;
  String get tab;
  @override
  @JsonKey(ignore: true)
  _$$AddNewClickedImplCopyWith<_$AddNewClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AddNewPlusClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$AddNewPlusClickedImplCopyWith(_$AddNewPlusClickedImpl value,
          $Res Function(_$AddNewPlusClickedImpl) then) =
      __$$AddNewPlusClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String source});
}

/// @nodoc
class __$$AddNewPlusClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$AddNewPlusClickedImpl>
    implements _$$AddNewPlusClickedImplCopyWith<$Res> {
  __$$AddNewPlusClickedImplCopyWithImpl(_$AddNewPlusClickedImpl _value,
      $Res Function(_$AddNewPlusClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
  }) {
    return _then(_$AddNewPlusClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AddNewPlusClickedImpl
    with DiagnosticableTreeMixin
    implements AddNewPlusClicked {
  const _$AddNewPlusClickedImpl(
      {this.eventType = 'ADD_NEW_PLUS_CLICKED',
      required this.source,
      final String? $type})
      : $type = $type ?? 'addNewPlusClicked';

  factory _$AddNewPlusClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$AddNewPlusClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.addNewPlusClicked(eventType: $eventType, source: $source)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.addNewPlusClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AddNewPlusClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, source);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$AddNewPlusClickedImplCopyWith<_$AddNewPlusClickedImpl> get copyWith =>
      __$$AddNewPlusClickedImplCopyWithImpl<_$AddNewPlusClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return addNewPlusClicked(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return addNewPlusClicked?.call(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (addNewPlusClicked != null) {
      return addNewPlusClicked(eventType, source);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return addNewPlusClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return addNewPlusClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (addNewPlusClicked != null) {
      return addNewPlusClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AddNewPlusClickedImplToJson(
      this,
    );
  }
}

abstract class AddNewPlusClicked implements AmplitudeEvent {
  const factory AddNewPlusClicked(
      {final String eventType,
      required final String source}) = _$AddNewPlusClickedImpl;

  factory AddNewPlusClicked.fromJson(Map<String, dynamic> json) =
      _$AddNewPlusClickedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  @override
  @JsonKey(ignore: true)
  _$$AddNewPlusClickedImplCopyWith<_$AddNewPlusClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$WalletSettingsClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$WalletSettingsClickedImplCopyWith(
          _$WalletSettingsClickedImpl value,
          $Res Function(_$WalletSettingsClickedImpl) then) =
      __$$WalletSettingsClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$WalletSettingsClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$WalletSettingsClickedImpl>
    implements _$$WalletSettingsClickedImplCopyWith<$Res> {
  __$$WalletSettingsClickedImplCopyWithImpl(_$WalletSettingsClickedImpl _value,
      $Res Function(_$WalletSettingsClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$WalletSettingsClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$WalletSettingsClickedImpl
    with DiagnosticableTreeMixin
    implements WalletSettingsClicked {
  const _$WalletSettingsClickedImpl(
      {this.eventType = 'WALLET_SETTINGS_CLICKED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'walletSettingsClicked';

  factory _$WalletSettingsClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$WalletSettingsClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.walletSettingsClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.walletSettingsClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$WalletSettingsClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$WalletSettingsClickedImplCopyWith<_$WalletSettingsClickedImpl>
      get copyWith => __$$WalletSettingsClickedImplCopyWithImpl<
          _$WalletSettingsClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return walletSettingsClicked(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return walletSettingsClicked?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (walletSettingsClicked != null) {
      return walletSettingsClicked(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return walletSettingsClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return walletSettingsClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (walletSettingsClicked != null) {
      return walletSettingsClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$WalletSettingsClickedImplToJson(
      this,
    );
  }
}

abstract class WalletSettingsClicked implements AmplitudeEvent {
  const factory WalletSettingsClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$WalletSettingsClickedImpl;

  factory WalletSettingsClicked.fromJson(Map<String, dynamic> json) =
      _$WalletSettingsClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  @override
  @JsonKey(ignore: true)
  _$$WalletSettingsClickedImplCopyWith<_$WalletSettingsClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TopUpButtonClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$TopUpButtonClickedImplCopyWith(_$TopUpButtonClickedImpl value,
          $Res Function(_$TopUpButtonClickedImpl) then) =
      __$$TopUpButtonClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletType,
      String walletAddress,
      bool activated});
}

/// @nodoc
class __$$TopUpButtonClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$TopUpButtonClickedImpl>
    implements _$$TopUpButtonClickedImplCopyWith<$Res> {
  __$$TopUpButtonClickedImplCopyWithImpl(_$TopUpButtonClickedImpl _value,
      $Res Function(_$TopUpButtonClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletType = null,
    Object? walletAddress = null,
    Object? activated = null,
  }) {
    return _then(_$TopUpButtonClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TopUpButtonClickedImpl
    with DiagnosticableTreeMixin
    implements TopUpButtonClicked {
  const _$TopUpButtonClickedImpl(
      {this.eventType = 'TOP_UP_BUTTON_CLICKED',
      required this.walletType,
      required this.walletAddress,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'topUpButtonCLicked';

  factory _$TopUpButtonClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TopUpButtonClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletType;
  @override
  final String walletAddress;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.topUpButtonCLicked(eventType: $eventType, walletType: $walletType, walletAddress: $walletAddress, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.topUpButtonCLicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TopUpButtonClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletType, walletAddress, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$TopUpButtonClickedImplCopyWith<_$TopUpButtonClickedImpl> get copyWith =>
      __$$TopUpButtonClickedImplCopyWithImpl<_$TopUpButtonClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return topUpButtonCLicked(eventType, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return topUpButtonCLicked?.call(
        eventType, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (topUpButtonCLicked != null) {
      return topUpButtonCLicked(
          eventType, walletType, walletAddress, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return topUpButtonCLicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return topUpButtonCLicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (topUpButtonCLicked != null) {
      return topUpButtonCLicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TopUpButtonClickedImplToJson(
      this,
    );
  }
}

abstract class TopUpButtonClicked implements AmplitudeEvent {
  const factory TopUpButtonClicked(
      {final String eventType,
      required final String walletType,
      required final String walletAddress,
      required final bool activated}) = _$TopUpButtonClickedImpl;

  factory TopUpButtonClicked.fromJson(Map<String, dynamic> json) =
      _$TopUpButtonClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletType;
  String get walletAddress;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$TopUpButtonClickedImplCopyWith<_$TopUpButtonClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ReceiveClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$ReceiveClickedImplCopyWith(_$ReceiveClickedImpl value,
          $Res Function(_$ReceiveClickedImpl) then) =
      __$$ReceiveClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletType,
      String walletAddress,
      bool activated});
}

/// @nodoc
class __$$ReceiveClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$ReceiveClickedImpl>
    implements _$$ReceiveClickedImplCopyWith<$Res> {
  __$$ReceiveClickedImplCopyWithImpl(
      _$ReceiveClickedImpl _value, $Res Function(_$ReceiveClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletType = null,
    Object? walletAddress = null,
    Object? activated = null,
  }) {
    return _then(_$ReceiveClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ReceiveClickedImpl
    with DiagnosticableTreeMixin
    implements ReceiveClicked {
  const _$ReceiveClickedImpl(
      {this.eventType = 'RECEIVE_CLICKED',
      required this.walletType,
      required this.walletAddress,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'receiveClicked';

  factory _$ReceiveClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$ReceiveClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletType;
  @override
  final String walletAddress;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.receiveClicked(eventType: $eventType, walletType: $walletType, walletAddress: $walletAddress, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.receiveClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ReceiveClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletType, walletAddress, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ReceiveClickedImplCopyWith<_$ReceiveClickedImpl> get copyWith =>
      __$$ReceiveClickedImplCopyWithImpl<_$ReceiveClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return receiveClicked(eventType, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return receiveClicked?.call(
        eventType, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (receiveClicked != null) {
      return receiveClicked(eventType, walletType, walletAddress, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return receiveClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return receiveClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (receiveClicked != null) {
      return receiveClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ReceiveClickedImplToJson(
      this,
    );
  }
}

abstract class ReceiveClicked implements AmplitudeEvent {
  const factory ReceiveClicked(
      {final String eventType,
      required final String walletType,
      required final String walletAddress,
      required final bool activated}) = _$ReceiveClickedImpl;

  factory ReceiveClicked.fromJson(Map<String, dynamic> json) =
      _$ReceiveClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletType;
  String get walletAddress;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$ReceiveClickedImplCopyWith<_$ReceiveClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SendClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$SendClickedImplCopyWith(
          _$SendClickedImpl value, $Res Function(_$SendClickedImpl) then) =
      __$$SendClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletType,
      String walletAddress,
      bool activated});
}

/// @nodoc
class __$$SendClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$SendClickedImpl>
    implements _$$SendClickedImplCopyWith<$Res> {
  __$$SendClickedImplCopyWithImpl(
      _$SendClickedImpl _value, $Res Function(_$SendClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletType = null,
    Object? walletAddress = null,
    Object? activated = null,
  }) {
    return _then(_$SendClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$SendClickedImpl with DiagnosticableTreeMixin implements SendClicked {
  const _$SendClickedImpl(
      {this.eventType = 'SEND_CLICKED',
      required this.walletType,
      required this.walletAddress,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'sendClicked';

  factory _$SendClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$SendClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletType;
  @override
  final String walletAddress;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.sendClicked(eventType: $eventType, walletType: $walletType, walletAddress: $walletAddress, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.sendClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SendClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletType, walletAddress, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$SendClickedImplCopyWith<_$SendClickedImpl> get copyWith =>
      __$$SendClickedImplCopyWithImpl<_$SendClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return sendClicked(eventType, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return sendClicked?.call(eventType, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (sendClicked != null) {
      return sendClicked(eventType, walletType, walletAddress, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return sendClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return sendClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (sendClicked != null) {
      return sendClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SendClickedImplToJson(
      this,
    );
  }
}

abstract class SendClicked implements AmplitudeEvent {
  const factory SendClicked(
      {final String eventType,
      required final String walletType,
      required final String walletAddress,
      required final bool activated}) = _$SendClickedImpl;

  factory SendClicked.fromJson(Map<String, dynamic> json) =
      _$SendClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletType;
  String get walletAddress;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$SendClickedImplCopyWith<_$SendClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$BuyWithCardClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$BuyWithCardClickedImplCopyWith(_$BuyWithCardClickedImpl value,
          $Res Function(_$BuyWithCardClickedImpl) then) =
      __$$BuyWithCardClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletType,
      String walletAddress,
      bool activated});
}

/// @nodoc
class __$$BuyWithCardClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$BuyWithCardClickedImpl>
    implements _$$BuyWithCardClickedImplCopyWith<$Res> {
  __$$BuyWithCardClickedImplCopyWithImpl(_$BuyWithCardClickedImpl _value,
      $Res Function(_$BuyWithCardClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletType = null,
    Object? walletAddress = null,
    Object? activated = null,
  }) {
    return _then(_$BuyWithCardClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BuyWithCardClickedImpl
    with DiagnosticableTreeMixin
    implements BuyWithCardClicked {
  const _$BuyWithCardClickedImpl(
      {this.eventType = 'BUY_WITH_CARD_CLICKED',
      required this.walletType,
      required this.walletAddress,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'buyWithCardClicked';

  factory _$BuyWithCardClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$BuyWithCardClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletType;
  @override
  final String walletAddress;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.buyWithCardClicked(eventType: $eventType, walletType: $walletType, walletAddress: $walletAddress, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.buyWithCardClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BuyWithCardClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletType, walletAddress, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$BuyWithCardClickedImplCopyWith<_$BuyWithCardClickedImpl> get copyWith =>
      __$$BuyWithCardClickedImplCopyWithImpl<_$BuyWithCardClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return buyWithCardClicked(eventType, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return buyWithCardClicked?.call(
        eventType, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (buyWithCardClicked != null) {
      return buyWithCardClicked(
          eventType, walletType, walletAddress, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return buyWithCardClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return buyWithCardClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (buyWithCardClicked != null) {
      return buyWithCardClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$BuyWithCardClickedImplToJson(
      this,
    );
  }
}

abstract class BuyWithCardClicked implements AmplitudeEvent {
  const factory BuyWithCardClicked(
      {final String eventType,
      required final String walletType,
      required final String walletAddress,
      required final bool activated}) = _$BuyWithCardClickedImpl;

  factory BuyWithCardClicked.fromJson(Map<String, dynamic> json) =
      _$BuyWithCardClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletType;
  String get walletAddress;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$BuyWithCardClickedImplCopyWith<_$BuyWithCardClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$HistoryClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$HistoryClickedImplCopyWith(_$HistoryClickedImpl value,
          $Res Function(_$HistoryClickedImpl) then) =
      __$$HistoryClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletType,
      String walletAddress,
      bool activated});
}

/// @nodoc
class __$$HistoryClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$HistoryClickedImpl>
    implements _$$HistoryClickedImplCopyWith<$Res> {
  __$$HistoryClickedImplCopyWithImpl(
      _$HistoryClickedImpl _value, $Res Function(_$HistoryClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletType = null,
    Object? walletAddress = null,
    Object? activated = null,
  }) {
    return _then(_$HistoryClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$HistoryClickedImpl
    with DiagnosticableTreeMixin
    implements HistoryClicked {
  const _$HistoryClickedImpl(
      {this.eventType = 'HISTORY_CLICKED',
      required this.walletType,
      required this.walletAddress,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'historyClicked';

  factory _$HistoryClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$HistoryClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletType;
  @override
  final String walletAddress;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.historyClicked(eventType: $eventType, walletType: $walletType, walletAddress: $walletAddress, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.historyClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HistoryClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletType, walletAddress, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$HistoryClickedImplCopyWith<_$HistoryClickedImpl> get copyWith =>
      __$$HistoryClickedImplCopyWithImpl<_$HistoryClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return historyClicked(eventType, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return historyClicked?.call(
        eventType, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (historyClicked != null) {
      return historyClicked(eventType, walletType, walletAddress, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return historyClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return historyClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (historyClicked != null) {
      return historyClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$HistoryClickedImplToJson(
      this,
    );
  }
}

abstract class HistoryClicked implements AmplitudeEvent {
  const factory HistoryClicked(
      {final String eventType,
      required final String walletType,
      required final String walletAddress,
      required final bool activated}) = _$HistoryClickedImpl;

  factory HistoryClicked.fromJson(Map<String, dynamic> json) =
      _$HistoryClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletType;
  String get walletAddress;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$HistoryClickedImplCopyWith<_$HistoryClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AddressCopiedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$AddressCopiedImplCopyWith(
          _$AddressCopiedImpl value, $Res Function(_$AddressCopiedImpl) then) =
      __$$AddressCopiedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String source,
      String walletType,
      String walletAddress,
      bool activated});
}

/// @nodoc
class __$$AddressCopiedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$AddressCopiedImpl>
    implements _$$AddressCopiedImplCopyWith<$Res> {
  __$$AddressCopiedImplCopyWithImpl(
      _$AddressCopiedImpl _value, $Res Function(_$AddressCopiedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
    Object? walletType = null,
    Object? walletAddress = null,
    Object? activated = null,
  }) {
    return _then(_$AddressCopiedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AddressCopiedImpl
    with DiagnosticableTreeMixin
    implements AddressCopied {
  const _$AddressCopiedImpl(
      {this.eventType = 'ADDRESS_COPIED',
      required this.source,
      required this.walletType,
      required this.walletAddress,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'addressCopied';

  factory _$AddressCopiedImpl.fromJson(Map<String, dynamic> json) =>
      _$$AddressCopiedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;
  @override
  final String walletType;
  @override
  final String walletAddress;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.addressCopied(eventType: $eventType, source: $source, walletType: $walletType, walletAddress: $walletAddress, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.addressCopied'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AddressCopiedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType, eventType, source, walletType, walletAddress, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$AddressCopiedImplCopyWith<_$AddressCopiedImpl> get copyWith =>
      __$$AddressCopiedImplCopyWithImpl<_$AddressCopiedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return addressCopied(
        eventType, source, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return addressCopied?.call(
        eventType, source, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (addressCopied != null) {
      return addressCopied(
          eventType, source, walletType, walletAddress, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return addressCopied(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return addressCopied?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (addressCopied != null) {
      return addressCopied(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AddressCopiedImplToJson(
      this,
    );
  }
}

abstract class AddressCopied implements AmplitudeEvent {
  const factory AddressCopied(
      {final String eventType,
      required final String source,
      required final String walletType,
      required final String walletAddress,
      required final bool activated}) = _$AddressCopiedImpl;

  factory AddressCopied.fromJson(Map<String, dynamic> json) =
      _$AddressCopiedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  String get walletType;
  String get walletAddress;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$AddressCopiedImplCopyWith<_$AddressCopiedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ShareAddressClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$ShareAddressClickedImplCopyWith(_$ShareAddressClickedImpl value,
          $Res Function(_$ShareAddressClickedImpl) then) =
      __$$ShareAddressClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletType,
      String walletAddress,
      bool activated});
}

/// @nodoc
class __$$ShareAddressClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$ShareAddressClickedImpl>
    implements _$$ShareAddressClickedImplCopyWith<$Res> {
  __$$ShareAddressClickedImplCopyWithImpl(_$ShareAddressClickedImpl _value,
      $Res Function(_$ShareAddressClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletType = null,
    Object? walletAddress = null,
    Object? activated = null,
  }) {
    return _then(_$ShareAddressClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ShareAddressClickedImpl
    with DiagnosticableTreeMixin
    implements ShareAddressClicked {
  const _$ShareAddressClickedImpl(
      {this.eventType = 'SHARE_ADDRESS_CLICKED',
      required this.walletType,
      required this.walletAddress,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'shareAddressClicked';

  factory _$ShareAddressClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$ShareAddressClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletType;
  @override
  final String walletAddress;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.shareAddressClicked(eventType: $eventType, walletType: $walletType, walletAddress: $walletAddress, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.shareAddressClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ShareAddressClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletType, walletAddress, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ShareAddressClickedImplCopyWith<_$ShareAddressClickedImpl> get copyWith =>
      __$$ShareAddressClickedImplCopyWithImpl<_$ShareAddressClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return shareAddressClicked(eventType, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return shareAddressClicked?.call(
        eventType, walletType, walletAddress, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (shareAddressClicked != null) {
      return shareAddressClicked(
          eventType, walletType, walletAddress, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return shareAddressClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return shareAddressClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (shareAddressClicked != null) {
      return shareAddressClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ShareAddressClickedImplToJson(
      this,
    );
  }
}

abstract class ShareAddressClicked implements AmplitudeEvent {
  const factory ShareAddressClicked(
      {final String eventType,
      required final String walletType,
      required final String walletAddress,
      required final bool activated}) = _$ShareAddressClickedImpl;

  factory ShareAddressClicked.fromJson(Map<String, dynamic> json) =
      _$ShareAddressClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletType;
  String get walletAddress;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$ShareAddressClickedImplCopyWith<_$ShareAddressClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$GotItSendClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$GotItSendClickedImplCopyWith(_$GotItSendClickedImpl value,
          $Res Function(_$GotItSendClickedImpl) then) =
      __$$GotItSendClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$GotItSendClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$GotItSendClickedImpl>
    implements _$$GotItSendClickedImplCopyWith<$Res> {
  __$$GotItSendClickedImplCopyWithImpl(_$GotItSendClickedImpl _value,
      $Res Function(_$GotItSendClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$GotItSendClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$GotItSendClickedImpl
    with DiagnosticableTreeMixin
    implements GotItSendClicked {
  const _$GotItSendClickedImpl(
      {this.eventType = 'GOT_IT_SEND_CLICKED', final String? $type})
      : $type = $type ?? 'gotItSendClicked';

  factory _$GotItSendClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$GotItSendClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.gotItSendClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.gotItSendClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$GotItSendClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$GotItSendClickedImplCopyWith<_$GotItSendClickedImpl> get copyWith =>
      __$$GotItSendClickedImplCopyWithImpl<_$GotItSendClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return gotItSendClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return gotItSendClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (gotItSendClicked != null) {
      return gotItSendClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return gotItSendClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return gotItSendClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (gotItSendClicked != null) {
      return gotItSendClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$GotItSendClickedImplToJson(
      this,
    );
  }
}

abstract class GotItSendClicked implements AmplitudeEvent {
  const factory GotItSendClicked({final String eventType}) =
      _$GotItSendClickedImpl;

  factory GotItSendClicked.fromJson(Map<String, dynamic> json) =
      _$GotItSendClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$GotItSendClickedImplCopyWith<_$GotItSendClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SendAnywayClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$SendAnywayClickedImplCopyWith(_$SendAnywayClickedImpl value,
          $Res Function(_$SendAnywayClickedImpl) then) =
      __$$SendAnywayClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$SendAnywayClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$SendAnywayClickedImpl>
    implements _$$SendAnywayClickedImplCopyWith<$Res> {
  __$$SendAnywayClickedImplCopyWithImpl(_$SendAnywayClickedImpl _value,
      $Res Function(_$SendAnywayClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$SendAnywayClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$SendAnywayClickedImpl
    with DiagnosticableTreeMixin
    implements SendAnywayClicked {
  const _$SendAnywayClickedImpl(
      {this.eventType = 'SEND_ANYWAY_CLICKED', final String? $type})
      : $type = $type ?? 'sendAnywayClicked';

  factory _$SendAnywayClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$SendAnywayClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.sendAnywayClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.sendAnywayClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SendAnywayClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$SendAnywayClickedImplCopyWith<_$SendAnywayClickedImpl> get copyWith =>
      __$$SendAnywayClickedImplCopyWithImpl<_$SendAnywayClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return sendAnywayClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return sendAnywayClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (sendAnywayClicked != null) {
      return sendAnywayClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return sendAnywayClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return sendAnywayClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (sendAnywayClicked != null) {
      return sendAnywayClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SendAnywayClickedImplToJson(
      this,
    );
  }
}

abstract class SendAnywayClicked implements AmplitudeEvent {
  const factory SendAnywayClicked({final String eventType}) =
      _$SendAnywayClickedImpl;

  factory SendAnywayClicked.fromJson(Map<String, dynamic> json) =
      _$SendAnywayClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$SendAnywayClickedImplCopyWith<_$SendAnywayClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$BackButtonClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$BackButtonClickedImplCopyWith(_$BackButtonClickedImpl value,
          $Res Function(_$BackButtonClickedImpl) then) =
      __$$BackButtonClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String source});
}

/// @nodoc
class __$$BackButtonClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$BackButtonClickedImpl>
    implements _$$BackButtonClickedImplCopyWith<$Res> {
  __$$BackButtonClickedImplCopyWithImpl(_$BackButtonClickedImpl _value,
      $Res Function(_$BackButtonClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
  }) {
    return _then(_$BackButtonClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BackButtonClickedImpl
    with DiagnosticableTreeMixin
    implements BackButtonClicked {
  const _$BackButtonClickedImpl(
      {this.eventType = 'BACK_BUTTON_CLICKED',
      required this.source,
      final String? $type})
      : $type = $type ?? 'backButtonClicked';

  factory _$BackButtonClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$BackButtonClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.backButtonClicked(eventType: $eventType, source: $source)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.backButtonClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BackButtonClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, source);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$BackButtonClickedImplCopyWith<_$BackButtonClickedImpl> get copyWith =>
      __$$BackButtonClickedImplCopyWithImpl<_$BackButtonClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return backButtonClicked(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return backButtonClicked?.call(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (backButtonClicked != null) {
      return backButtonClicked(eventType, source);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return backButtonClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return backButtonClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (backButtonClicked != null) {
      return backButtonClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$BackButtonClickedImplToJson(
      this,
    );
  }
}

abstract class BackButtonClicked implements AmplitudeEvent {
  const factory BackButtonClicked(
      {final String eventType,
      required final String source}) = _$BackButtonClickedImpl;

  factory BackButtonClicked.fromJson(Map<String, dynamic> json) =
      _$BackButtonClickedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  @override
  @JsonKey(ignore: true)
  _$$BackButtonClickedImplCopyWith<_$BackButtonClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$Secret1ValidatedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$Secret1ValidatedImplCopyWith(_$Secret1ValidatedImpl value,
          $Res Function(_$Secret1ValidatedImpl) then) =
      __$$Secret1ValidatedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$Secret1ValidatedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$Secret1ValidatedImpl>
    implements _$$Secret1ValidatedImplCopyWith<$Res> {
  __$$Secret1ValidatedImplCopyWithImpl(_$Secret1ValidatedImpl _value,
      $Res Function(_$Secret1ValidatedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$Secret1ValidatedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$Secret1ValidatedImpl
    with DiagnosticableTreeMixin
    implements Secret1Validated {
  const _$Secret1ValidatedImpl(
      {this.eventType = 'SECRET_1_VALIDATED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'secret1Validated';

  factory _$Secret1ValidatedImpl.fromJson(Map<String, dynamic> json) =>
      _$$Secret1ValidatedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.secret1Validated(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.secret1Validated'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Secret1ValidatedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$Secret1ValidatedImplCopyWith<_$Secret1ValidatedImpl> get copyWith =>
      __$$Secret1ValidatedImplCopyWithImpl<_$Secret1ValidatedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return secret1Validated(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return secret1Validated?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (secret1Validated != null) {
      return secret1Validated(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return secret1Validated(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return secret1Validated?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (secret1Validated != null) {
      return secret1Validated(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$Secret1ValidatedImplToJson(
      this,
    );
  }
}

abstract class Secret1Validated implements AmplitudeEvent {
  const factory Secret1Validated(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$Secret1ValidatedImpl;

  factory Secret1Validated.fromJson(Map<String, dynamic> json) =
      _$Secret1ValidatedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  @override
  @JsonKey(ignore: true)
  _$$Secret1ValidatedImplCopyWith<_$Secret1ValidatedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$Secret2ValidatedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$Secret2ValidatedImplCopyWith(_$Secret2ValidatedImpl value,
          $Res Function(_$Secret2ValidatedImpl) then) =
      __$$Secret2ValidatedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$Secret2ValidatedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$Secret2ValidatedImpl>
    implements _$$Secret2ValidatedImplCopyWith<$Res> {
  __$$Secret2ValidatedImplCopyWithImpl(_$Secret2ValidatedImpl _value,
      $Res Function(_$Secret2ValidatedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$Secret2ValidatedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$Secret2ValidatedImpl
    with DiagnosticableTreeMixin
    implements Secret2Validated {
  const _$Secret2ValidatedImpl(
      {this.eventType = 'SECRET_2_VALIDATED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'secret2Validated';

  factory _$Secret2ValidatedImpl.fromJson(Map<String, dynamic> json) =>
      _$$Secret2ValidatedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.secret2Validated(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.secret2Validated'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Secret2ValidatedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$Secret2ValidatedImplCopyWith<_$Secret2ValidatedImpl> get copyWith =>
      __$$Secret2ValidatedImplCopyWithImpl<_$Secret2ValidatedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return secret2Validated(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return secret2Validated?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (secret2Validated != null) {
      return secret2Validated(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return secret2Validated(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return secret2Validated?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (secret2Validated != null) {
      return secret2Validated(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$Secret2ValidatedImplToJson(
      this,
    );
  }
}

abstract class Secret2Validated implements AmplitudeEvent {
  const factory Secret2Validated(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$Secret2ValidatedImpl;

  factory Secret2Validated.fromJson(Map<String, dynamic> json) =
      _$Secret2ValidatedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  @override
  @JsonKey(ignore: true)
  _$$Secret2ValidatedImplCopyWith<_$Secret2ValidatedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ContinueCLickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$ContinueCLickedImplCopyWith(_$ContinueCLickedImpl value,
          $Res Function(_$ContinueCLickedImpl) then) =
      __$$ContinueCLickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$ContinueCLickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$ContinueCLickedImpl>
    implements _$$ContinueCLickedImplCopyWith<$Res> {
  __$$ContinueCLickedImplCopyWithImpl(
      _$ContinueCLickedImpl _value, $Res Function(_$ContinueCLickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$ContinueCLickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ContinueCLickedImpl
    with DiagnosticableTreeMixin
    implements ContinueCLicked {
  const _$ContinueCLickedImpl(
      {this.eventType = 'CONTINUE_CLICKED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'continueClicked';

  factory _$ContinueCLickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$ContinueCLickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.continueClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.continueClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ContinueCLickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ContinueCLickedImplCopyWith<_$ContinueCLickedImpl> get copyWith =>
      __$$ContinueCLickedImplCopyWithImpl<_$ContinueCLickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return continueClicked(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return continueClicked?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (continueClicked != null) {
      return continueClicked(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return continueClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return continueClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (continueClicked != null) {
      return continueClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ContinueCLickedImplToJson(
      this,
    );
  }
}

abstract class ContinueCLicked implements AmplitudeEvent {
  const factory ContinueCLicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$ContinueCLickedImpl;

  factory ContinueCLicked.fromJson(Map<String, dynamic> json) =
      _$ContinueCLickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  @override
  @JsonKey(ignore: true)
  _$$ContinueCLickedImplCopyWith<_$ContinueCLickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$EditSecretsClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$EditSecretsClickedImplCopyWith(_$EditSecretsClickedImpl value,
          $Res Function(_$EditSecretsClickedImpl) then) =
      __$$EditSecretsClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$EditSecretsClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$EditSecretsClickedImpl>
    implements _$$EditSecretsClickedImplCopyWith<$Res> {
  __$$EditSecretsClickedImplCopyWithImpl(_$EditSecretsClickedImpl _value,
      $Res Function(_$EditSecretsClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$EditSecretsClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$EditSecretsClickedImpl
    with DiagnosticableTreeMixin
    implements EditSecretsClicked {
  const _$EditSecretsClickedImpl(
      {this.eventType = 'EDIT_SECRETS_CLICKED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'editSecretsClicked';

  factory _$EditSecretsClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$EditSecretsClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.editSecretsClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.editSecretsClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$EditSecretsClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$EditSecretsClickedImplCopyWith<_$EditSecretsClickedImpl> get copyWith =>
      __$$EditSecretsClickedImplCopyWithImpl<_$EditSecretsClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return editSecretsClicked(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return editSecretsClicked?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (editSecretsClicked != null) {
      return editSecretsClicked(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return editSecretsClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return editSecretsClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (editSecretsClicked != null) {
      return editSecretsClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$EditSecretsClickedImplToJson(
      this,
    );
  }
}

abstract class EditSecretsClicked implements AmplitudeEvent {
  const factory EditSecretsClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$EditSecretsClickedImpl;

  factory EditSecretsClicked.fromJson(Map<String, dynamic> json) =
      _$EditSecretsClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  @override
  @JsonKey(ignore: true)
  _$$EditSecretsClickedImplCopyWith<_$EditSecretsClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ValidationSuccessfulImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$ValidationSuccessfulImplCopyWith(_$ValidationSuccessfulImpl value,
          $Res Function(_$ValidationSuccessfulImpl) then) =
      __$$ValidationSuccessfulImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$ValidationSuccessfulImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$ValidationSuccessfulImpl>
    implements _$$ValidationSuccessfulImplCopyWith<$Res> {
  __$$ValidationSuccessfulImplCopyWithImpl(_$ValidationSuccessfulImpl _value,
      $Res Function(_$ValidationSuccessfulImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$ValidationSuccessfulImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ValidationSuccessfulImpl
    with DiagnosticableTreeMixin
    implements ValidationSuccessful {
  const _$ValidationSuccessfulImpl(
      {this.eventType = 'VALIDATION_SUCCESSFUL',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'validationSuccessful';

  factory _$ValidationSuccessfulImpl.fromJson(Map<String, dynamic> json) =>
      _$$ValidationSuccessfulImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.validationSuccessful(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.validationSuccessful'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ValidationSuccessfulImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ValidationSuccessfulImplCopyWith<_$ValidationSuccessfulImpl>
      get copyWith =>
          __$$ValidationSuccessfulImplCopyWithImpl<_$ValidationSuccessfulImpl>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return validationSuccessful(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return validationSuccessful?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (validationSuccessful != null) {
      return validationSuccessful(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return validationSuccessful(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return validationSuccessful?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (validationSuccessful != null) {
      return validationSuccessful(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ValidationSuccessfulImplToJson(
      this,
    );
  }
}

abstract class ValidationSuccessful implements AmplitudeEvent {
  const factory ValidationSuccessful(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$ValidationSuccessfulImpl;

  factory ValidationSuccessful.fromJson(Map<String, dynamic> json) =
      _$ValidationSuccessfulImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  @override
  @JsonKey(ignore: true)
  _$$ValidationSuccessfulImplCopyWith<_$ValidationSuccessfulImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ValidationFailedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$ValidationFailedImplCopyWith(_$ValidationFailedImpl value,
          $Res Function(_$ValidationFailedImpl) then) =
      __$$ValidationFailedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$ValidationFailedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$ValidationFailedImpl>
    implements _$$ValidationFailedImplCopyWith<$Res> {
  __$$ValidationFailedImplCopyWithImpl(_$ValidationFailedImpl _value,
      $Res Function(_$ValidationFailedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$ValidationFailedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ValidationFailedImpl
    with DiagnosticableTreeMixin
    implements ValidationFailed {
  const _$ValidationFailedImpl(
      {this.eventType = 'VALIDATION_FAILED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'validationFailed';

  factory _$ValidationFailedImpl.fromJson(Map<String, dynamic> json) =>
      _$$ValidationFailedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.validationFailed(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.validationFailed'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ValidationFailedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ValidationFailedImplCopyWith<_$ValidationFailedImpl> get copyWith =>
      __$$ValidationFailedImplCopyWithImpl<_$ValidationFailedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return validationFailed(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return validationFailed?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (validationFailed != null) {
      return validationFailed(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return validationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return validationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (validationFailed != null) {
      return validationFailed(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ValidationFailedImplToJson(
      this,
    );
  }
}

abstract class ValidationFailed implements AmplitudeEvent {
  const factory ValidationFailed(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$ValidationFailedImpl;

  factory ValidationFailed.fromJson(Map<String, dynamic> json) =
      _$ValidationFailedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  @override
  @JsonKey(ignore: true)
  _$$ValidationFailedImplCopyWith<_$ValidationFailedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$GuideMeClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$GuideMeClickedImplCopyWith(_$GuideMeClickedImpl value,
          $Res Function(_$GuideMeClickedImpl) then) =
      __$$GuideMeClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$GuideMeClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$GuideMeClickedImpl>
    implements _$$GuideMeClickedImplCopyWith<$Res> {
  __$$GuideMeClickedImplCopyWithImpl(
      _$GuideMeClickedImpl _value, $Res Function(_$GuideMeClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$GuideMeClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$GuideMeClickedImpl
    with DiagnosticableTreeMixin
    implements GuideMeClicked {
  const _$GuideMeClickedImpl(
      {this.eventType = 'GUIDE_ME_CLICKED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'guideMeClicked';

  factory _$GuideMeClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$GuideMeClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.guideMeClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.guideMeClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$GuideMeClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$GuideMeClickedImplCopyWith<_$GuideMeClickedImpl> get copyWith =>
      __$$GuideMeClickedImplCopyWithImpl<_$GuideMeClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return guideMeClicked(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return guideMeClicked?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (guideMeClicked != null) {
      return guideMeClicked(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return guideMeClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return guideMeClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (guideMeClicked != null) {
      return guideMeClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$GuideMeClickedImplToJson(
      this,
    );
  }
}

abstract class GuideMeClicked implements AmplitudeEvent {
  const factory GuideMeClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$GuideMeClickedImpl;

  factory GuideMeClicked.fromJson(Map<String, dynamic> json) =
      _$GuideMeClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  @override
  @JsonKey(ignore: true)
  _$$GuideMeClickedImplCopyWith<_$GuideMeClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CardColorCHangedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$CardColorCHangedImplCopyWith(_$CardColorCHangedImpl value,
          $Res Function(_$CardColorCHangedImpl) then) =
      __$$CardColorCHangedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String color});
}

/// @nodoc
class __$$CardColorCHangedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$CardColorCHangedImpl>
    implements _$$CardColorCHangedImplCopyWith<$Res> {
  __$$CardColorCHangedImplCopyWithImpl(_$CardColorCHangedImpl _value,
      $Res Function(_$CardColorCHangedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? color = null,
  }) {
    return _then(_$CardColorCHangedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      color: null == color
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CardColorCHangedImpl
    with DiagnosticableTreeMixin
    implements CardColorCHanged {
  const _$CardColorCHangedImpl(
      {this.eventType = 'CARD_COLOR_CHANGED',
      required this.walletAddress,
      required this.color,
      final String? $type})
      : $type = $type ?? 'cardColorChanged';

  factory _$CardColorCHangedImpl.fromJson(Map<String, dynamic> json) =>
      _$$CardColorCHangedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.cardColorChanged(eventType: $eventType, walletAddress: $walletAddress, color: $color)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.cardColorChanged'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('color', color));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CardColorCHangedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.color, color) || other.color == color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, walletAddress, color);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$CardColorCHangedImplCopyWith<_$CardColorCHangedImpl> get copyWith =>
      __$$CardColorCHangedImplCopyWithImpl<_$CardColorCHangedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return cardColorChanged(eventType, walletAddress, color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return cardColorChanged?.call(eventType, walletAddress, color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (cardColorChanged != null) {
      return cardColorChanged(eventType, walletAddress, color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return cardColorChanged(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return cardColorChanged?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (cardColorChanged != null) {
      return cardColorChanged(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CardColorCHangedImplToJson(
      this,
    );
  }
}

abstract class CardColorCHanged implements AmplitudeEvent {
  const factory CardColorCHanged(
      {final String eventType,
      required final String walletAddress,
      required final String color}) = _$CardColorCHangedImpl;

  factory CardColorCHanged.fromJson(Map<String, dynamic> json) =
      _$CardColorCHangedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get color;
  @override
  @JsonKey(ignore: true)
  _$$CardColorCHangedImplCopyWith<_$CardColorCHangedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ClickedOnPrivateKeyImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$ClickedOnPrivateKeyImplCopyWith(_$ClickedOnPrivateKeyImpl value,
          $Res Function(_$ClickedOnPrivateKeyImpl) then) =
      __$$ClickedOnPrivateKeyImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$ClickedOnPrivateKeyImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$ClickedOnPrivateKeyImpl>
    implements _$$ClickedOnPrivateKeyImplCopyWith<$Res> {
  __$$ClickedOnPrivateKeyImplCopyWithImpl(_$ClickedOnPrivateKeyImpl _value,
      $Res Function(_$ClickedOnPrivateKeyImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$ClickedOnPrivateKeyImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ClickedOnPrivateKeyImpl
    with DiagnosticableTreeMixin
    implements ClickedOnPrivateKey {
  const _$ClickedOnPrivateKeyImpl(
      {this.eventType = 'CLICKED_ON_PRIVATE_KEY',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'clickedOnPrivateKey';

  factory _$ClickedOnPrivateKeyImpl.fromJson(Map<String, dynamic> json) =>
      _$$ClickedOnPrivateKeyImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.clickedOnPrivateKey(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.clickedOnPrivateKey'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ClickedOnPrivateKeyImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ClickedOnPrivateKeyImplCopyWith<_$ClickedOnPrivateKeyImpl> get copyWith =>
      __$$ClickedOnPrivateKeyImplCopyWithImpl<_$ClickedOnPrivateKeyImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return clickedOnPrivateKey(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return clickedOnPrivateKey?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (clickedOnPrivateKey != null) {
      return clickedOnPrivateKey(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return clickedOnPrivateKey(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return clickedOnPrivateKey?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (clickedOnPrivateKey != null) {
      return clickedOnPrivateKey(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ClickedOnPrivateKeyImplToJson(
      this,
    );
  }
}

abstract class ClickedOnPrivateKey implements AmplitudeEvent {
  const factory ClickedOnPrivateKey(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$ClickedOnPrivateKeyImpl;

  factory ClickedOnPrivateKey.fromJson(Map<String, dynamic> json) =
      _$ClickedOnPrivateKeyImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  @override
  @JsonKey(ignore: true)
  _$$ClickedOnPrivateKeyImplCopyWith<_$ClickedOnPrivateKeyImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PrivateKeyRevealedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$PrivateKeyRevealedImplCopyWith(_$PrivateKeyRevealedImpl value,
          $Res Function(_$PrivateKeyRevealedImpl) then) =
      __$$PrivateKeyRevealedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$PrivateKeyRevealedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$PrivateKeyRevealedImpl>
    implements _$$PrivateKeyRevealedImplCopyWith<$Res> {
  __$$PrivateKeyRevealedImplCopyWithImpl(_$PrivateKeyRevealedImpl _value,
      $Res Function(_$PrivateKeyRevealedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$PrivateKeyRevealedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$PrivateKeyRevealedImpl
    with DiagnosticableTreeMixin
    implements PrivateKeyRevealed {
  const _$PrivateKeyRevealedImpl(
      {this.eventType = 'PRIVATE_KEY_REVEALED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'privateKeyRevealed';

  factory _$PrivateKeyRevealedImpl.fromJson(Map<String, dynamic> json) =>
      _$$PrivateKeyRevealedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.privateKeyRevealed(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.privateKeyRevealed'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$PrivateKeyRevealedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$PrivateKeyRevealedImplCopyWith<_$PrivateKeyRevealedImpl> get copyWith =>
      __$$PrivateKeyRevealedImplCopyWithImpl<_$PrivateKeyRevealedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return privateKeyRevealed(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return privateKeyRevealed?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (privateKeyRevealed != null) {
      return privateKeyRevealed(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return privateKeyRevealed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return privateKeyRevealed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (privateKeyRevealed != null) {
      return privateKeyRevealed(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PrivateKeyRevealedImplToJson(
      this,
    );
  }
}

abstract class PrivateKeyRevealed implements AmplitudeEvent {
  const factory PrivateKeyRevealed(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$PrivateKeyRevealedImpl;

  factory PrivateKeyRevealed.fromJson(Map<String, dynamic> json) =
      _$PrivateKeyRevealedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  @override
  @JsonKey(ignore: true)
  _$$PrivateKeyRevealedImplCopyWith<_$PrivateKeyRevealedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PrivateKeyCopiedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$PrivateKeyCopiedImplCopyWith(_$PrivateKeyCopiedImpl value,
          $Res Function(_$PrivateKeyCopiedImpl) then) =
      __$$PrivateKeyCopiedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletAddress, String walletType});
}

/// @nodoc
class __$$PrivateKeyCopiedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$PrivateKeyCopiedImpl>
    implements _$$PrivateKeyCopiedImplCopyWith<$Res> {
  __$$PrivateKeyCopiedImplCopyWithImpl(_$PrivateKeyCopiedImpl _value,
      $Res Function(_$PrivateKeyCopiedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
  }) {
    return _then(_$PrivateKeyCopiedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$PrivateKeyCopiedImpl
    with DiagnosticableTreeMixin
    implements PrivateKeyCopied {
  const _$PrivateKeyCopiedImpl(
      {this.eventType = 'PRIVATE_KEY_COPIED',
      required this.walletAddress,
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'privateKeyCopied';

  factory _$PrivateKeyCopiedImpl.fromJson(Map<String, dynamic> json) =>
      _$$PrivateKeyCopiedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.privateKeyCopied(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.privateKeyCopied'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$PrivateKeyCopiedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$PrivateKeyCopiedImplCopyWith<_$PrivateKeyCopiedImpl> get copyWith =>
      __$$PrivateKeyCopiedImplCopyWithImpl<_$PrivateKeyCopiedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return privateKeyCopied(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return privateKeyCopied?.call(eventType, walletAddress, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (privateKeyCopied != null) {
      return privateKeyCopied(eventType, walletAddress, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return privateKeyCopied(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return privateKeyCopied?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (privateKeyCopied != null) {
      return privateKeyCopied(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PrivateKeyCopiedImplToJson(
      this,
    );
  }
}

abstract class PrivateKeyCopied implements AmplitudeEvent {
  const factory PrivateKeyCopied(
      {final String eventType,
      required final String walletAddress,
      required final String walletType}) = _$PrivateKeyCopiedImpl;

  factory PrivateKeyCopied.fromJson(Map<String, dynamic> json) =
      _$PrivateKeyCopiedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  @override
  @JsonKey(ignore: true)
  _$$PrivateKeyCopiedImplCopyWith<_$PrivateKeyCopiedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CardNameChangedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$CardNameChangedImplCopyWith(_$CardNameChangedImpl value,
          $Res Function(_$CardNameChangedImpl) then) =
      __$$CardNameChangedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String walletType});
}

/// @nodoc
class __$$CardNameChangedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$CardNameChangedImpl>
    implements _$$CardNameChangedImplCopyWith<$Res> {
  __$$CardNameChangedImplCopyWithImpl(
      _$CardNameChangedImpl _value, $Res Function(_$CardNameChangedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletType = null,
  }) {
    return _then(_$CardNameChangedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CardNameChangedImpl
    with DiagnosticableTreeMixin
    implements CardNameChanged {
  const _$CardNameChangedImpl(
      {this.eventType = 'CARD_NAME_CHANGED',
      required this.walletType,
      final String? $type})
      : $type = $type ?? 'cardNameChanged';

  factory _$CardNameChangedImpl.fromJson(Map<String, dynamic> json) =>
      _$$CardNameChangedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.cardNameChanged(eventType: $eventType, walletType: $walletType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.cardNameChanged'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletType', walletType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CardNameChangedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, walletType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$CardNameChangedImplCopyWith<_$CardNameChangedImpl> get copyWith =>
      __$$CardNameChangedImplCopyWithImpl<_$CardNameChangedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return cardNameChanged(eventType, walletType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return cardNameChanged?.call(eventType, walletType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (cardNameChanged != null) {
      return cardNameChanged(eventType, walletType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return cardNameChanged(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return cardNameChanged?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (cardNameChanged != null) {
      return cardNameChanged(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CardNameChangedImplToJson(
      this,
    );
  }
}

abstract class CardNameChanged implements AmplitudeEvent {
  const factory CardNameChanged(
      {final String eventType,
      required final String walletType}) = _$CardNameChangedImpl;

  factory CardNameChanged.fromJson(Map<String, dynamic> json) =
      _$CardNameChangedImpl.fromJson;

  @override
  String get eventType;
  String get walletType;
  @override
  @JsonKey(ignore: true)
  _$$CardNameChangedImplCopyWith<_$CardNameChangedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$HelpCenterClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$HelpCenterClickedImplCopyWith(_$HelpCenterClickedImpl value,
          $Res Function(_$HelpCenterClickedImpl) then) =
      __$$HelpCenterClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String source});
}

/// @nodoc
class __$$HelpCenterClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$HelpCenterClickedImpl>
    implements _$$HelpCenterClickedImplCopyWith<$Res> {
  __$$HelpCenterClickedImplCopyWithImpl(_$HelpCenterClickedImpl _value,
      $Res Function(_$HelpCenterClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? source = null,
  }) {
    return _then(_$HelpCenterClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$HelpCenterClickedImpl
    with DiagnosticableTreeMixin
    implements HelpCenterClicked {
  const _$HelpCenterClickedImpl(
      {this.eventType = 'HELP_CENTER_CLICKED',
      required this.source,
      final String? $type})
      : $type = $type ?? 'helpCenterClicked';

  factory _$HelpCenterClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$HelpCenterClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String source;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.helpCenterClicked(eventType: $eventType, source: $source)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.helpCenterClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('source', source));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HelpCenterClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.source, source) || other.source == source));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, source);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$HelpCenterClickedImplCopyWith<_$HelpCenterClickedImpl> get copyWith =>
      __$$HelpCenterClickedImplCopyWithImpl<_$HelpCenterClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return helpCenterClicked(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return helpCenterClicked?.call(eventType, source);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (helpCenterClicked != null) {
      return helpCenterClicked(eventType, source);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return helpCenterClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return helpCenterClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (helpCenterClicked != null) {
      return helpCenterClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$HelpCenterClickedImplToJson(
      this,
    );
  }
}

abstract class HelpCenterClicked implements AmplitudeEvent {
  const factory HelpCenterClicked(
      {final String eventType,
      required final String source}) = _$HelpCenterClickedImpl;

  factory HelpCenterClicked.fromJson(Map<String, dynamic> json) =
      _$HelpCenterClickedImpl.fromJson;

  @override
  String get eventType;
  String get source;
  @override
  @JsonKey(ignore: true)
  _$$HelpCenterClickedImplCopyWith<_$HelpCenterClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$RemoveCardClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$RemoveCardClickedImplCopyWith(_$RemoveCardClickedImpl value,
          $Res Function(_$RemoveCardClickedImpl) then) =
      __$$RemoveCardClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$RemoveCardClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$RemoveCardClickedImpl>
    implements _$$RemoveCardClickedImplCopyWith<$Res> {
  __$$RemoveCardClickedImplCopyWithImpl(_$RemoveCardClickedImpl _value,
      $Res Function(_$RemoveCardClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$RemoveCardClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$RemoveCardClickedImpl
    with DiagnosticableTreeMixin
    implements RemoveCardClicked {
  const _$RemoveCardClickedImpl(
      {this.eventType = 'REMOVE_CARD_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'removeCardClicked';

  factory _$RemoveCardClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$RemoveCardClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.removeCardClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.removeCardClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$RemoveCardClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$RemoveCardClickedImplCopyWith<_$RemoveCardClickedImpl> get copyWith =>
      __$$RemoveCardClickedImplCopyWithImpl<_$RemoveCardClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return removeCardClicked(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return removeCardClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (removeCardClicked != null) {
      return removeCardClicked(eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return removeCardClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return removeCardClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (removeCardClicked != null) {
      return removeCardClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$RemoveCardClickedImplToJson(
      this,
    );
  }
}

abstract class RemoveCardClicked implements AmplitudeEvent {
  const factory RemoveCardClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$RemoveCardClickedImpl;

  factory RemoveCardClicked.fromJson(Map<String, dynamic> json) =
      _$RemoveCardClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$RemoveCardClickedImplCopyWith<_$RemoveCardClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CardDeletedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$CardDeletedImplCopyWith(
          _$CardDeletedImpl value, $Res Function(_$CardDeletedImpl) then) =
      __$$CardDeletedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$CardDeletedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$CardDeletedImpl>
    implements _$$CardDeletedImplCopyWith<$Res> {
  __$$CardDeletedImplCopyWithImpl(
      _$CardDeletedImpl _value, $Res Function(_$CardDeletedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$CardDeletedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CardDeletedImpl with DiagnosticableTreeMixin implements CardDeleted {
  const _$CardDeletedImpl(
      {this.eventType = 'CARD_DELETED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'cardDeleted';

  factory _$CardDeletedImpl.fromJson(Map<String, dynamic> json) =>
      _$$CardDeletedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.cardDeleted(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.cardDeleted'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CardDeletedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$CardDeletedImplCopyWith<_$CardDeletedImpl> get copyWith =>
      __$$CardDeletedImplCopyWithImpl<_$CardDeletedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return cardDeleted(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return cardDeleted?.call(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (cardDeleted != null) {
      return cardDeleted(eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return cardDeleted(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return cardDeleted?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (cardDeleted != null) {
      return cardDeleted(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CardDeletedImplToJson(
      this,
    );
  }
}

abstract class CardDeleted implements AmplitudeEvent {
  const factory CardDeleted(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$CardDeletedImpl;

  factory CardDeleted.fromJson(Map<String, dynamic> json) =
      _$CardDeletedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$CardDeletedImplCopyWith<_$CardDeletedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$NotSureClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$NotSureClickedImplCopyWith(_$NotSureClickedImpl value,
          $Res Function(_$NotSureClickedImpl) then) =
      __$$NotSureClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$NotSureClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$NotSureClickedImpl>
    implements _$$NotSureClickedImplCopyWith<$Res> {
  __$$NotSureClickedImplCopyWithImpl(
      _$NotSureClickedImpl _value, $Res Function(_$NotSureClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$NotSureClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$NotSureClickedImpl
    with DiagnosticableTreeMixin
    implements NotSureClicked {
  const _$NotSureClickedImpl(
      {this.eventType = 'NOT_SURE_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'notSureClicked';

  factory _$NotSureClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$NotSureClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.notSureClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.notSureClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$NotSureClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$NotSureClickedImplCopyWith<_$NotSureClickedImpl> get copyWith =>
      __$$NotSureClickedImplCopyWithImpl<_$NotSureClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return notSureClicked(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return notSureClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (notSureClicked != null) {
      return notSureClicked(eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return notSureClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return notSureClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (notSureClicked != null) {
      return notSureClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$NotSureClickedImplToJson(
      this,
    );
  }
}

abstract class NotSureClicked implements AmplitudeEvent {
  const factory NotSureClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$NotSureClickedImpl;

  factory NotSureClicked.fromJson(Map<String, dynamic> json) =
      _$NotSureClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$NotSureClickedImplCopyWith<_$NotSureClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ContactUsClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$ContactUsClickedImplCopyWith(_$ContactUsClickedImpl value,
          $Res Function(_$ContactUsClickedImpl) then) =
      __$$ContactUsClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$ContactUsClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$ContactUsClickedImpl>
    implements _$$ContactUsClickedImplCopyWith<$Res> {
  __$$ContactUsClickedImplCopyWithImpl(_$ContactUsClickedImpl _value,
      $Res Function(_$ContactUsClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$ContactUsClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ContactUsClickedImpl
    with DiagnosticableTreeMixin
    implements ContactUsClicked {
  const _$ContactUsClickedImpl(
      {this.eventType = 'CONTACT_US_CLICKED', final String? $type})
      : $type = $type ?? 'contactUsClicked';

  factory _$ContactUsClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$ContactUsClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.contactUsClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.contactUsClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ContactUsClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ContactUsClickedImplCopyWith<_$ContactUsClickedImpl> get copyWith =>
      __$$ContactUsClickedImplCopyWithImpl<_$ContactUsClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return contactUsClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return contactUsClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (contactUsClicked != null) {
      return contactUsClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return contactUsClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return contactUsClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (contactUsClicked != null) {
      return contactUsClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ContactUsClickedImplToJson(
      this,
    );
  }
}

abstract class ContactUsClicked implements AmplitudeEvent {
  const factory ContactUsClicked({final String eventType}) =
      _$ContactUsClickedImpl;

  factory ContactUsClicked.fromJson(Map<String, dynamic> json) =
      _$ContactUsClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$ContactUsClickedImplCopyWith<_$ContactUsClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AppLockClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$AppLockClickedImplCopyWith(_$AppLockClickedImpl value,
          $Res Function(_$AppLockClickedImpl) then) =
      __$$AppLockClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$AppLockClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$AppLockClickedImpl>
    implements _$$AppLockClickedImplCopyWith<$Res> {
  __$$AppLockClickedImplCopyWithImpl(
      _$AppLockClickedImpl _value, $Res Function(_$AppLockClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$AppLockClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AppLockClickedImpl
    with DiagnosticableTreeMixin
    implements AppLockClicked {
  const _$AppLockClickedImpl(
      {this.eventType = 'APP_LOCK_CLICKED', final String? $type})
      : $type = $type ?? 'appLockClicked';

  factory _$AppLockClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$AppLockClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.appLockClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.appLockClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AppLockClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$AppLockClickedImplCopyWith<_$AppLockClickedImpl> get copyWith =>
      __$$AppLockClickedImplCopyWithImpl<_$AppLockClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return appLockClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return appLockClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (appLockClicked != null) {
      return appLockClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return appLockClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return appLockClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (appLockClicked != null) {
      return appLockClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AppLockClickedImplToJson(
      this,
    );
  }
}

abstract class AppLockClicked implements AmplitudeEvent {
  const factory AppLockClicked({final String eventType}) = _$AppLockClickedImpl;

  factory AppLockClicked.fromJson(Map<String, dynamic> json) =
      _$AppLockClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$AppLockClickedImplCopyWith<_$AppLockClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AppLockDisabledImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$AppLockDisabledImplCopyWith(_$AppLockDisabledImpl value,
          $Res Function(_$AppLockDisabledImpl) then) =
      __$$AppLockDisabledImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$AppLockDisabledImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$AppLockDisabledImpl>
    implements _$$AppLockDisabledImplCopyWith<$Res> {
  __$$AppLockDisabledImplCopyWithImpl(
      _$AppLockDisabledImpl _value, $Res Function(_$AppLockDisabledImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$AppLockDisabledImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AppLockDisabledImpl
    with DiagnosticableTreeMixin
    implements AppLockDisabled {
  const _$AppLockDisabledImpl(
      {this.eventType = 'APP_LOCK_DISABLED', final String? $type})
      : $type = $type ?? 'appLockDisabled';

  factory _$AppLockDisabledImpl.fromJson(Map<String, dynamic> json) =>
      _$$AppLockDisabledImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.appLockDisabled(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.appLockDisabled'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AppLockDisabledImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$AppLockDisabledImplCopyWith<_$AppLockDisabledImpl> get copyWith =>
      __$$AppLockDisabledImplCopyWithImpl<_$AppLockDisabledImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return appLockDisabled(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return appLockDisabled?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (appLockDisabled != null) {
      return appLockDisabled(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return appLockDisabled(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return appLockDisabled?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (appLockDisabled != null) {
      return appLockDisabled(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AppLockDisabledImplToJson(
      this,
    );
  }
}

abstract class AppLockDisabled implements AmplitudeEvent {
  const factory AppLockDisabled({final String eventType}) =
      _$AppLockDisabledImpl;

  factory AppLockDisabled.fromJson(Map<String, dynamic> json) =
      _$AppLockDisabledImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$AppLockDisabledImplCopyWith<_$AppLockDisabledImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ChangePasscodeClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$ChangePasscodeClickedImplCopyWith(
          _$ChangePasscodeClickedImpl value,
          $Res Function(_$ChangePasscodeClickedImpl) then) =
      __$$ChangePasscodeClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$ChangePasscodeClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$ChangePasscodeClickedImpl>
    implements _$$ChangePasscodeClickedImplCopyWith<$Res> {
  __$$ChangePasscodeClickedImplCopyWithImpl(_$ChangePasscodeClickedImpl _value,
      $Res Function(_$ChangePasscodeClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$ChangePasscodeClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$ChangePasscodeClickedImpl
    with DiagnosticableTreeMixin
    implements ChangePasscodeClicked {
  const _$ChangePasscodeClickedImpl(
      {this.eventType = 'CHANGE_PASSCODE_CLICKED', final String? $type})
      : $type = $type ?? 'changePasscodeClicked';

  factory _$ChangePasscodeClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$ChangePasscodeClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.changePasscodeClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.changePasscodeClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ChangePasscodeClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ChangePasscodeClickedImplCopyWith<_$ChangePasscodeClickedImpl>
      get copyWith => __$$ChangePasscodeClickedImplCopyWithImpl<
          _$ChangePasscodeClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return changePasscodeClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return changePasscodeClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (changePasscodeClicked != null) {
      return changePasscodeClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return changePasscodeClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return changePasscodeClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (changePasscodeClicked != null) {
      return changePasscodeClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ChangePasscodeClickedImplToJson(
      this,
    );
  }
}

abstract class ChangePasscodeClicked implements AmplitudeEvent {
  const factory ChangePasscodeClicked({final String eventType}) =
      _$ChangePasscodeClickedImpl;

  factory ChangePasscodeClicked.fromJson(Map<String, dynamic> json) =
      _$ChangePasscodeClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$ChangePasscodeClickedImplCopyWith<_$ChangePasscodeClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PasscodeChangedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$PasscodeChangedImplCopyWith(_$PasscodeChangedImpl value,
          $Res Function(_$PasscodeChangedImpl) then) =
      __$$PasscodeChangedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$PasscodeChangedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$PasscodeChangedImpl>
    implements _$$PasscodeChangedImplCopyWith<$Res> {
  __$$PasscodeChangedImplCopyWithImpl(
      _$PasscodeChangedImpl _value, $Res Function(_$PasscodeChangedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$PasscodeChangedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$PasscodeChangedImpl
    with DiagnosticableTreeMixin
    implements PasscodeChanged {
  const _$PasscodeChangedImpl(
      {this.eventType = 'PASSCODE_CHANGED', final String? $type})
      : $type = $type ?? 'passcodeChanged';

  factory _$PasscodeChangedImpl.fromJson(Map<String, dynamic> json) =>
      _$$PasscodeChangedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.passcodeChanged(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.passcodeChanged'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$PasscodeChangedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$PasscodeChangedImplCopyWith<_$PasscodeChangedImpl> get copyWith =>
      __$$PasscodeChangedImplCopyWithImpl<_$PasscodeChangedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return passcodeChanged(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return passcodeChanged?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (passcodeChanged != null) {
      return passcodeChanged(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return passcodeChanged(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return passcodeChanged?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (passcodeChanged != null) {
      return passcodeChanged(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PasscodeChangedImplToJson(
      this,
    );
  }
}

abstract class PasscodeChanged implements AmplitudeEvent {
  const factory PasscodeChanged({final String eventType}) =
      _$PasscodeChangedImpl;

  factory PasscodeChanged.fromJson(Map<String, dynamic> json) =
      _$PasscodeChangedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$PasscodeChangedImplCopyWith<_$PasscodeChangedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$FaceIdEnabledImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$FaceIdEnabledImplCopyWith(
          _$FaceIdEnabledImpl value, $Res Function(_$FaceIdEnabledImpl) then) =
      __$$FaceIdEnabledImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$FaceIdEnabledImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$FaceIdEnabledImpl>
    implements _$$FaceIdEnabledImplCopyWith<$Res> {
  __$$FaceIdEnabledImplCopyWithImpl(
      _$FaceIdEnabledImpl _value, $Res Function(_$FaceIdEnabledImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$FaceIdEnabledImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$FaceIdEnabledImpl
    with DiagnosticableTreeMixin
    implements FaceIdEnabled {
  const _$FaceIdEnabledImpl(
      {this.eventType = 'FACE_ID_ENABLED', final String? $type})
      : $type = $type ?? 'faceIdEnabled';

  factory _$FaceIdEnabledImpl.fromJson(Map<String, dynamic> json) =>
      _$$FaceIdEnabledImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.faceIdEnabled(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.faceIdEnabled'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FaceIdEnabledImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$FaceIdEnabledImplCopyWith<_$FaceIdEnabledImpl> get copyWith =>
      __$$FaceIdEnabledImplCopyWithImpl<_$FaceIdEnabledImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return faceIdEnabled(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return faceIdEnabled?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (faceIdEnabled != null) {
      return faceIdEnabled(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return faceIdEnabled(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return faceIdEnabled?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (faceIdEnabled != null) {
      return faceIdEnabled(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$FaceIdEnabledImplToJson(
      this,
    );
  }
}

abstract class FaceIdEnabled implements AmplitudeEvent {
  const factory FaceIdEnabled({final String eventType}) = _$FaceIdEnabledImpl;

  factory FaceIdEnabled.fromJson(Map<String, dynamic> json) =
      _$FaceIdEnabledImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$FaceIdEnabledImplCopyWith<_$FaceIdEnabledImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$FaceIdDisabledImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$FaceIdDisabledImplCopyWith(_$FaceIdDisabledImpl value,
          $Res Function(_$FaceIdDisabledImpl) then) =
      __$$FaceIdDisabledImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$FaceIdDisabledImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$FaceIdDisabledImpl>
    implements _$$FaceIdDisabledImplCopyWith<$Res> {
  __$$FaceIdDisabledImplCopyWithImpl(
      _$FaceIdDisabledImpl _value, $Res Function(_$FaceIdDisabledImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$FaceIdDisabledImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$FaceIdDisabledImpl
    with DiagnosticableTreeMixin
    implements FaceIdDisabled {
  const _$FaceIdDisabledImpl(
      {this.eventType = 'FACE_ID_DISABLED', final String? $type})
      : $type = $type ?? 'faceIdDisabled';

  factory _$FaceIdDisabledImpl.fromJson(Map<String, dynamic> json) =>
      _$$FaceIdDisabledImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.faceIdDisabled(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.faceIdDisabled'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FaceIdDisabledImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$FaceIdDisabledImplCopyWith<_$FaceIdDisabledImpl> get copyWith =>
      __$$FaceIdDisabledImplCopyWithImpl<_$FaceIdDisabledImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return faceIdDisabled(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return faceIdDisabled?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (faceIdDisabled != null) {
      return faceIdDisabled(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return faceIdDisabled(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return faceIdDisabled?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (faceIdDisabled != null) {
      return faceIdDisabled(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$FaceIdDisabledImplToJson(
      this,
    );
  }
}

abstract class FaceIdDisabled implements AmplitudeEvent {
  const factory FaceIdDisabled({final String eventType}) = _$FaceIdDisabledImpl;

  factory FaceIdDisabled.fromJson(Map<String, dynamic> json) =
      _$FaceIdDisabledImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$FaceIdDisabledImplCopyWith<_$FaceIdDisabledImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PushNotificationsOnImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$PushNotificationsOnImplCopyWith(_$PushNotificationsOnImpl value,
          $Res Function(_$PushNotificationsOnImpl) then) =
      __$$PushNotificationsOnImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$PushNotificationsOnImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$PushNotificationsOnImpl>
    implements _$$PushNotificationsOnImplCopyWith<$Res> {
  __$$PushNotificationsOnImplCopyWithImpl(_$PushNotificationsOnImpl _value,
      $Res Function(_$PushNotificationsOnImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$PushNotificationsOnImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$PushNotificationsOnImpl
    with DiagnosticableTreeMixin
    implements PushNotificationsOn {
  const _$PushNotificationsOnImpl(
      {this.eventType = 'PUSH_NOTIFICATIONS_ON', final String? $type})
      : $type = $type ?? 'pushNotificationsOn';

  factory _$PushNotificationsOnImpl.fromJson(Map<String, dynamic> json) =>
      _$$PushNotificationsOnImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.pushNotificationsOn(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.pushNotificationsOn'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$PushNotificationsOnImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$PushNotificationsOnImplCopyWith<_$PushNotificationsOnImpl> get copyWith =>
      __$$PushNotificationsOnImplCopyWithImpl<_$PushNotificationsOnImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return pushNotificationsOn(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return pushNotificationsOn?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (pushNotificationsOn != null) {
      return pushNotificationsOn(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return pushNotificationsOn(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return pushNotificationsOn?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (pushNotificationsOn != null) {
      return pushNotificationsOn(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PushNotificationsOnImplToJson(
      this,
    );
  }
}

abstract class PushNotificationsOn implements AmplitudeEvent {
  const factory PushNotificationsOn({final String eventType}) =
      _$PushNotificationsOnImpl;

  factory PushNotificationsOn.fromJson(Map<String, dynamic> json) =
      _$PushNotificationsOnImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$PushNotificationsOnImplCopyWith<_$PushNotificationsOnImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PushNotificationsOffImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$PushNotificationsOffImplCopyWith(_$PushNotificationsOffImpl value,
          $Res Function(_$PushNotificationsOffImpl) then) =
      __$$PushNotificationsOffImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$PushNotificationsOffImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$PushNotificationsOffImpl>
    implements _$$PushNotificationsOffImplCopyWith<$Res> {
  __$$PushNotificationsOffImplCopyWithImpl(_$PushNotificationsOffImpl _value,
      $Res Function(_$PushNotificationsOffImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$PushNotificationsOffImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$PushNotificationsOffImpl
    with DiagnosticableTreeMixin
    implements PushNotificationsOff {
  const _$PushNotificationsOffImpl(
      {this.eventType = 'PUSH_NOTIFICATIONS_OFF', final String? $type})
      : $type = $type ?? 'pushNotificationsOff';

  factory _$PushNotificationsOffImpl.fromJson(Map<String, dynamic> json) =>
      _$$PushNotificationsOffImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.pushNotificationsOff(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.pushNotificationsOff'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$PushNotificationsOffImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$PushNotificationsOffImplCopyWith<_$PushNotificationsOffImpl>
      get copyWith =>
          __$$PushNotificationsOffImplCopyWithImpl<_$PushNotificationsOffImpl>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return pushNotificationsOff(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return pushNotificationsOff?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (pushNotificationsOff != null) {
      return pushNotificationsOff(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return pushNotificationsOff(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return pushNotificationsOff?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (pushNotificationsOff != null) {
      return pushNotificationsOff(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PushNotificationsOffImplToJson(
      this,
    );
  }
}

abstract class PushNotificationsOff implements AmplitudeEvent {
  const factory PushNotificationsOff({final String eventType}) =
      _$PushNotificationsOffImpl;

  factory PushNotificationsOff.fromJson(Map<String, dynamic> json) =
      _$PushNotificationsOffImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$PushNotificationsOffImplCopyWith<_$PushNotificationsOffImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$JoinCommunityClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$JoinCommunityClickedImplCopyWith(_$JoinCommunityClickedImpl value,
          $Res Function(_$JoinCommunityClickedImpl) then) =
      __$$JoinCommunityClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String social});
}

/// @nodoc
class __$$JoinCommunityClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$JoinCommunityClickedImpl>
    implements _$$JoinCommunityClickedImplCopyWith<$Res> {
  __$$JoinCommunityClickedImplCopyWithImpl(_$JoinCommunityClickedImpl _value,
      $Res Function(_$JoinCommunityClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? social = null,
  }) {
    return _then(_$JoinCommunityClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      social: null == social
          ? _value.social
          : social // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$JoinCommunityClickedImpl
    with DiagnosticableTreeMixin
    implements JoinCommunityClicked {
  const _$JoinCommunityClickedImpl(
      {this.eventType = 'JOIN_COMMUNITY_CLICKED',
      required this.social,
      final String? $type})
      : $type = $type ?? 'joinCommunityClicked';

  factory _$JoinCommunityClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$JoinCommunityClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String social;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.joinCommunityClicked(eventType: $eventType, social: $social)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.joinCommunityClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('social', social));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$JoinCommunityClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.social, social) || other.social == social));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, social);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$JoinCommunityClickedImplCopyWith<_$JoinCommunityClickedImpl>
      get copyWith =>
          __$$JoinCommunityClickedImplCopyWithImpl<_$JoinCommunityClickedImpl>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return joinCommunityClicked(eventType, social);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return joinCommunityClicked?.call(eventType, social);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (joinCommunityClicked != null) {
      return joinCommunityClicked(eventType, social);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return joinCommunityClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return joinCommunityClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (joinCommunityClicked != null) {
      return joinCommunityClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$JoinCommunityClickedImplToJson(
      this,
    );
  }
}

abstract class JoinCommunityClicked implements AmplitudeEvent {
  const factory JoinCommunityClicked(
      {final String eventType,
      required final String social}) = _$JoinCommunityClickedImpl;

  factory JoinCommunityClicked.fromJson(Map<String, dynamic> json) =
      _$JoinCommunityClickedImpl.fromJson;

  @override
  String get eventType;
  String get social;
  @override
  @JsonKey(ignore: true)
  _$$JoinCommunityClickedImplCopyWith<_$JoinCommunityClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PrivacyPolicyClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$PrivacyPolicyClickedImplCopyWith(_$PrivacyPolicyClickedImpl value,
          $Res Function(_$PrivacyPolicyClickedImpl) then) =
      __$$PrivacyPolicyClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$PrivacyPolicyClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$PrivacyPolicyClickedImpl>
    implements _$$PrivacyPolicyClickedImplCopyWith<$Res> {
  __$$PrivacyPolicyClickedImplCopyWithImpl(_$PrivacyPolicyClickedImpl _value,
      $Res Function(_$PrivacyPolicyClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$PrivacyPolicyClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$PrivacyPolicyClickedImpl
    with DiagnosticableTreeMixin
    implements PrivacyPolicyClicked {
  const _$PrivacyPolicyClickedImpl(
      {this.eventType = 'PRIVACY_POLICY_CLICKED', final String? $type})
      : $type = $type ?? 'privacyPolicyClicked';

  factory _$PrivacyPolicyClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$PrivacyPolicyClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.privacyPolicyClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.privacyPolicyClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$PrivacyPolicyClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$PrivacyPolicyClickedImplCopyWith<_$PrivacyPolicyClickedImpl>
      get copyWith =>
          __$$PrivacyPolicyClickedImplCopyWithImpl<_$PrivacyPolicyClickedImpl>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return privacyPolicyClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return privacyPolicyClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (privacyPolicyClicked != null) {
      return privacyPolicyClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return privacyPolicyClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return privacyPolicyClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (privacyPolicyClicked != null) {
      return privacyPolicyClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PrivacyPolicyClickedImplToJson(
      this,
    );
  }
}

abstract class PrivacyPolicyClicked implements AmplitudeEvent {
  const factory PrivacyPolicyClicked({final String eventType}) =
      _$PrivacyPolicyClickedImpl;

  factory PrivacyPolicyClicked.fromJson(Map<String, dynamic> json) =
      _$PrivacyPolicyClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$PrivacyPolicyClickedImplCopyWith<_$PrivacyPolicyClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TermsOfUseClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$TermsOfUseClickedImplCopyWith(_$TermsOfUseClickedImpl value,
          $Res Function(_$TermsOfUseClickedImpl) then) =
      __$$TermsOfUseClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$TermsOfUseClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$TermsOfUseClickedImpl>
    implements _$$TermsOfUseClickedImplCopyWith<$Res> {
  __$$TermsOfUseClickedImplCopyWithImpl(_$TermsOfUseClickedImpl _value,
      $Res Function(_$TermsOfUseClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$TermsOfUseClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TermsOfUseClickedImpl
    with DiagnosticableTreeMixin
    implements TermsOfUseClicked {
  const _$TermsOfUseClickedImpl(
      {this.eventType = 'TERMS_OF_USE_CLICKED', final String? $type})
      : $type = $type ?? 'termsOfUseClicked';

  factory _$TermsOfUseClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TermsOfUseClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.termsOfUseClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.termsOfUseClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TermsOfUseClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$TermsOfUseClickedImplCopyWith<_$TermsOfUseClickedImpl> get copyWith =>
      __$$TermsOfUseClickedImplCopyWithImpl<_$TermsOfUseClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return termsOfUseClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return termsOfUseClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (termsOfUseClicked != null) {
      return termsOfUseClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return termsOfUseClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return termsOfUseClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (termsOfUseClicked != null) {
      return termsOfUseClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TermsOfUseClickedImplToJson(
      this,
    );
  }
}

abstract class TermsOfUseClicked implements AmplitudeEvent {
  const factory TermsOfUseClicked({final String eventType}) =
      _$TermsOfUseClickedImpl;

  factory TermsOfUseClicked.fromJson(Map<String, dynamic> json) =
      _$TermsOfUseClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$TermsOfUseClickedImplCopyWith<_$TermsOfUseClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$VerifyCardClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$VerifyCardClickedImplCopyWith(_$VerifyCardClickedImpl value,
          $Res Function(_$VerifyCardClickedImpl) then) =
      __$$VerifyCardClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$VerifyCardClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$VerifyCardClickedImpl>
    implements _$$VerifyCardClickedImplCopyWith<$Res> {
  __$$VerifyCardClickedImplCopyWithImpl(_$VerifyCardClickedImpl _value,
      $Res Function(_$VerifyCardClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$VerifyCardClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$VerifyCardClickedImpl
    with DiagnosticableTreeMixin
    implements VerifyCardClicked {
  const _$VerifyCardClickedImpl(
      {this.eventType = 'VERIFY_CARD_CLICKED', final String? $type})
      : $type = $type ?? 'verifyCardClicked';

  factory _$VerifyCardClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$VerifyCardClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.verifyCardClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.verifyCardClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$VerifyCardClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$VerifyCardClickedImplCopyWith<_$VerifyCardClickedImpl> get copyWith =>
      __$$VerifyCardClickedImplCopyWithImpl<_$VerifyCardClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return verifyCardClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return verifyCardClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (verifyCardClicked != null) {
      return verifyCardClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return verifyCardClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return verifyCardClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (verifyCardClicked != null) {
      return verifyCardClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$VerifyCardClickedImplToJson(
      this,
    );
  }
}

abstract class VerifyCardClicked implements AmplitudeEvent {
  const factory VerifyCardClicked({final String eventType}) =
      _$VerifyCardClickedImpl;

  factory VerifyCardClicked.fromJson(Map<String, dynamic> json) =
      _$VerifyCardClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$VerifyCardClickedImplCopyWith<_$VerifyCardClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$VerifyCardTappedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$VerifyCardTappedImplCopyWith(_$VerifyCardTappedImpl value,
          $Res Function(_$VerifyCardTappedImpl) then) =
      __$$VerifyCardTappedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$VerifyCardTappedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$VerifyCardTappedImpl>
    implements _$$VerifyCardTappedImplCopyWith<$Res> {
  __$$VerifyCardTappedImplCopyWithImpl(_$VerifyCardTappedImpl _value,
      $Res Function(_$VerifyCardTappedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$VerifyCardTappedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$VerifyCardTappedImpl
    with DiagnosticableTreeMixin
    implements VerifyCardTapped {
  const _$VerifyCardTappedImpl(
      {this.eventType = 'VERIFY_CARD_TAPPED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'verifyCardTapped';

  factory _$VerifyCardTappedImpl.fromJson(Map<String, dynamic> json) =>
      _$$VerifyCardTappedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.verifyCardTapped(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.verifyCardTapped'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$VerifyCardTappedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$VerifyCardTappedImplCopyWith<_$VerifyCardTappedImpl> get copyWith =>
      __$$VerifyCardTappedImplCopyWithImpl<_$VerifyCardTappedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return verifyCardTapped(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return verifyCardTapped?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (verifyCardTapped != null) {
      return verifyCardTapped(eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return verifyCardTapped(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return verifyCardTapped?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (verifyCardTapped != null) {
      return verifyCardTapped(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$VerifyCardTappedImplToJson(
      this,
    );
  }
}

abstract class VerifyCardTapped implements AmplitudeEvent {
  const factory VerifyCardTapped(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$VerifyCardTappedImpl;

  factory VerifyCardTapped.fromJson(Map<String, dynamic> json) =
      _$VerifyCardTappedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$VerifyCardTappedImplCopyWith<_$VerifyCardTappedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SendMessageClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$SendMessageClickedImplCopyWith(_$SendMessageClickedImpl value,
          $Res Function(_$SendMessageClickedImpl) then) =
      __$$SendMessageClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$SendMessageClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$SendMessageClickedImpl>
    implements _$$SendMessageClickedImplCopyWith<$Res> {
  __$$SendMessageClickedImplCopyWithImpl(_$SendMessageClickedImpl _value,
      $Res Function(_$SendMessageClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$SendMessageClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$SendMessageClickedImpl
    with DiagnosticableTreeMixin
    implements SendMessageClicked {
  const _$SendMessageClickedImpl(
      {this.eventType = 'SEND_MESSAGE_CLICKED', final String? $type})
      : $type = $type ?? 'sendMessageClicked';

  factory _$SendMessageClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$SendMessageClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.sendMessageClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.sendMessageClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SendMessageClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$SendMessageClickedImplCopyWith<_$SendMessageClickedImpl> get copyWith =>
      __$$SendMessageClickedImplCopyWithImpl<_$SendMessageClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return sendMessageClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return sendMessageClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (sendMessageClicked != null) {
      return sendMessageClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return sendMessageClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return sendMessageClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (sendMessageClicked != null) {
      return sendMessageClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SendMessageClickedImplToJson(
      this,
    );
  }
}

abstract class SendMessageClicked implements AmplitudeEvent {
  const factory SendMessageClicked({final String eventType}) =
      _$SendMessageClickedImpl;

  factory SendMessageClicked.fromJson(Map<String, dynamic> json) =
      _$SendMessageClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$SendMessageClickedImplCopyWith<_$SendMessageClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CardTabClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$CardTabClickedImplCopyWith(_$CardTabClickedImpl value,
          $Res Function(_$CardTabClickedImpl) then) =
      __$$CardTabClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$CardTabClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$CardTabClickedImpl>
    implements _$$CardTabClickedImplCopyWith<$Res> {
  __$$CardTabClickedImplCopyWithImpl(
      _$CardTabClickedImpl _value, $Res Function(_$CardTabClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$CardTabClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CardTabClickedImpl
    with DiagnosticableTreeMixin
    implements CardTabClicked {
  const _$CardTabClickedImpl(
      {this.eventType = 'CARD_TAB_CLICKED', final String? $type})
      : $type = $type ?? 'cardTabClicked';

  factory _$CardTabClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$CardTabClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.cardTabClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.cardTabClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CardTabClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$CardTabClickedImplCopyWith<_$CardTabClickedImpl> get copyWith =>
      __$$CardTabClickedImplCopyWithImpl<_$CardTabClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return cardTabClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return cardTabClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (cardTabClicked != null) {
      return cardTabClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return cardTabClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return cardTabClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (cardTabClicked != null) {
      return cardTabClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CardTabClickedImplToJson(
      this,
    );
  }
}

abstract class CardTabClicked implements AmplitudeEvent {
  const factory CardTabClicked({final String eventType}) = _$CardTabClickedImpl;

  factory CardTabClicked.fromJson(Map<String, dynamic> json) =
      _$CardTabClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$CardTabClickedImplCopyWith<_$CardTabClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$BarTabClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$BarTabClickedImplCopyWith(
          _$BarTabClickedImpl value, $Res Function(_$BarTabClickedImpl) then) =
      __$$BarTabClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType});
}

/// @nodoc
class __$$BarTabClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$BarTabClickedImpl>
    implements _$$BarTabClickedImplCopyWith<$Res> {
  __$$BarTabClickedImplCopyWithImpl(
      _$BarTabClickedImpl _value, $Res Function(_$BarTabClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
  }) {
    return _then(_$BarTabClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BarTabClickedImpl
    with DiagnosticableTreeMixin
    implements BarTabClicked {
  const _$BarTabClickedImpl(
      {this.eventType = 'BAR_TAB_CLICKED', final String? $type})
      : $type = $type ?? 'barTabClicked';

  factory _$BarTabClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$BarTabClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.barTabClicked(eventType: $eventType)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.barTabClicked'))
      ..add(DiagnosticsProperty('eventType', eventType));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BarTabClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$BarTabClickedImplCopyWith<_$BarTabClickedImpl> get copyWith =>
      __$$BarTabClickedImplCopyWithImpl<_$BarTabClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return barTabClicked(eventType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return barTabClicked?.call(eventType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (barTabClicked != null) {
      return barTabClicked(eventType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return barTabClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return barTabClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (barTabClicked != null) {
      return barTabClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$BarTabClickedImplToJson(
      this,
    );
  }
}

abstract class BarTabClicked implements AmplitudeEvent {
  const factory BarTabClicked({final String eventType}) = _$BarTabClickedImpl;

  factory BarTabClicked.fromJson(Map<String, dynamic> json) =
      _$BarTabClickedImpl.fromJson;

  @override
  String get eventType;
  @override
  @JsonKey(ignore: true)
  _$$BarTabClickedImplCopyWith<_$BarTabClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TapToConnectClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$TapToConnectClickedImplCopyWith(_$TapToConnectClickedImpl value,
          $Res Function(_$TapToConnectClickedImpl) then) =
      __$$TapToConnectClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String tab});
}

/// @nodoc
class __$$TapToConnectClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$TapToConnectClickedImpl>
    implements _$$TapToConnectClickedImplCopyWith<$Res> {
  __$$TapToConnectClickedImplCopyWithImpl(_$TapToConnectClickedImpl _value,
      $Res Function(_$TapToConnectClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? tab = null,
  }) {
    return _then(_$TapToConnectClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      tab: null == tab
          ? _value.tab
          : tab // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TapToConnectClickedImpl
    with DiagnosticableTreeMixin
    implements TapToConnectClicked {
  const _$TapToConnectClickedImpl(
      {this.eventType = 'TAP_TO_CONNECT_CLICKED',
      required this.tab,
      final String? $type})
      : $type = $type ?? 'tapToConnectClicked';

  factory _$TapToConnectClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TapToConnectClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String tab;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.tapToConnectClicked(eventType: $eventType, tab: $tab)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.tapToConnectClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('tab', tab));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TapToConnectClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.tab, tab) || other.tab == tab));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, tab);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$TapToConnectClickedImplCopyWith<_$TapToConnectClickedImpl> get copyWith =>
      __$$TapToConnectClickedImplCopyWithImpl<_$TapToConnectClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return tapToConnectClicked(eventType, tab);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return tapToConnectClicked?.call(eventType, tab);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (tapToConnectClicked != null) {
      return tapToConnectClicked(eventType, tab);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return tapToConnectClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return tapToConnectClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (tapToConnectClicked != null) {
      return tapToConnectClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TapToConnectClickedImplToJson(
      this,
    );
  }
}

abstract class TapToConnectClicked implements AmplitudeEvent {
  const factory TapToConnectClicked(
      {final String eventType,
      required final String tab}) = _$TapToConnectClickedImpl;

  factory TapToConnectClicked.fromJson(Map<String, dynamic> json) =
      _$TapToConnectClickedImpl.fromJson;

  @override
  String get eventType;
  String get tab;
  @override
  @JsonKey(ignore: true)
  _$$TapToConnectClickedImplCopyWith<_$TapToConnectClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CardDamagedClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$CardDamagedClickedImplCopyWith(_$CardDamagedClickedImpl value,
          $Res Function(_$CardDamagedClickedImpl) then) =
      __$$CardDamagedClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$CardDamagedClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$CardDamagedClickedImpl>
    implements _$$CardDamagedClickedImplCopyWith<$Res> {
  __$$CardDamagedClickedImplCopyWithImpl(_$CardDamagedClickedImpl _value,
      $Res Function(_$CardDamagedClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$CardDamagedClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CardDamagedClickedImpl
    with DiagnosticableTreeMixin
    implements CardDamagedClicked {
  const _$CardDamagedClickedImpl(
      {this.eventType = 'CARD_DAMAGED_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'cardDamagedClicked';

  factory _$CardDamagedClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$CardDamagedClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.cardDamagedClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.cardDamagedClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CardDamagedClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$CardDamagedClickedImplCopyWith<_$CardDamagedClickedImpl> get copyWith =>
      __$$CardDamagedClickedImplCopyWithImpl<_$CardDamagedClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return cardDamagedClicked(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return cardDamagedClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (cardDamagedClicked != null) {
      return cardDamagedClicked(
          eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return cardDamagedClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return cardDamagedClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (cardDamagedClicked != null) {
      return cardDamagedClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CardDamagedClickedImplToJson(
      this,
    );
  }
}

abstract class CardDamagedClicked implements AmplitudeEvent {
  const factory CardDamagedClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$CardDamagedClickedImpl;

  factory CardDamagedClicked.fromJson(Map<String, dynamic> json) =
      _$CardDamagedClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$CardDamagedClickedImplCopyWith<_$CardDamagedClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$NfcNotWorkingCLickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$NfcNotWorkingCLickedImplCopyWith(_$NfcNotWorkingCLickedImpl value,
          $Res Function(_$NfcNotWorkingCLickedImpl) then) =
      __$$NfcNotWorkingCLickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$NfcNotWorkingCLickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$NfcNotWorkingCLickedImpl>
    implements _$$NfcNotWorkingCLickedImplCopyWith<$Res> {
  __$$NfcNotWorkingCLickedImplCopyWithImpl(_$NfcNotWorkingCLickedImpl _value,
      $Res Function(_$NfcNotWorkingCLickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$NfcNotWorkingCLickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$NfcNotWorkingCLickedImpl
    with DiagnosticableTreeMixin
    implements NfcNotWorkingCLicked {
  const _$NfcNotWorkingCLickedImpl(
      {this.eventType = 'NFC_NOT_WORKING_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'nfcNotWorkingClicked';

  factory _$NfcNotWorkingCLickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$NfcNotWorkingCLickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.nfcNotWorkingClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.nfcNotWorkingClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$NfcNotWorkingCLickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$NfcNotWorkingCLickedImplCopyWith<_$NfcNotWorkingCLickedImpl>
      get copyWith =>
          __$$NfcNotWorkingCLickedImplCopyWithImpl<_$NfcNotWorkingCLickedImpl>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return nfcNotWorkingClicked(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return nfcNotWorkingClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (nfcNotWorkingClicked != null) {
      return nfcNotWorkingClicked(
          eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return nfcNotWorkingClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return nfcNotWorkingClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (nfcNotWorkingClicked != null) {
      return nfcNotWorkingClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$NfcNotWorkingCLickedImplToJson(
      this,
    );
  }
}

abstract class NfcNotWorkingCLicked implements AmplitudeEvent {
  const factory NfcNotWorkingCLicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$NfcNotWorkingCLickedImpl;

  factory NfcNotWorkingCLicked.fromJson(Map<String, dynamic> json) =
      _$NfcNotWorkingCLickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$NfcNotWorkingCLickedImplCopyWith<_$NfcNotWorkingCLickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$DontHaveCardClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$DontHaveCardClickedImplCopyWith(_$DontHaveCardClickedImpl value,
          $Res Function(_$DontHaveCardClickedImpl) then) =
      __$$DontHaveCardClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$DontHaveCardClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$DontHaveCardClickedImpl>
    implements _$$DontHaveCardClickedImplCopyWith<$Res> {
  __$$DontHaveCardClickedImplCopyWithImpl(_$DontHaveCardClickedImpl _value,
      $Res Function(_$DontHaveCardClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$DontHaveCardClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$DontHaveCardClickedImpl
    with DiagnosticableTreeMixin
    implements DontHaveCardClicked {
  const _$DontHaveCardClickedImpl(
      {this.eventType = 'DONT_HAVE_CARD_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'dontHaveCardClicked';

  factory _$DontHaveCardClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$DontHaveCardClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.dontHaveCardClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.dontHaveCardClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DontHaveCardClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$DontHaveCardClickedImplCopyWith<_$DontHaveCardClickedImpl> get copyWith =>
      __$$DontHaveCardClickedImplCopyWithImpl<_$DontHaveCardClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return dontHaveCardClicked(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return dontHaveCardClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (dontHaveCardClicked != null) {
      return dontHaveCardClicked(
          eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return dontHaveCardClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return dontHaveCardClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (dontHaveCardClicked != null) {
      return dontHaveCardClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$DontHaveCardClickedImplToJson(
      this,
    );
  }
}

abstract class DontHaveCardClicked implements AmplitudeEvent {
  const factory DontHaveCardClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$DontHaveCardClickedImpl;

  factory DontHaveCardClicked.fromJson(Map<String, dynamic> json) =
      _$DontHaveCardClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$DontHaveCardClickedImplCopyWith<_$DontHaveCardClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$LostCardClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$LostCardClickedImplCopyWith(_$LostCardClickedImpl value,
          $Res Function(_$LostCardClickedImpl) then) =
      __$$LostCardClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$LostCardClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$LostCardClickedImpl>
    implements _$$LostCardClickedImplCopyWith<$Res> {
  __$$LostCardClickedImplCopyWithImpl(
      _$LostCardClickedImpl _value, $Res Function(_$LostCardClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$LostCardClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$LostCardClickedImpl
    with DiagnosticableTreeMixin
    implements LostCardClicked {
  const _$LostCardClickedImpl(
      {this.eventType = 'LOST_CARD_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'lostCardClicked';

  factory _$LostCardClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$LostCardClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.lostCardClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.lostCardClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LostCardClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$LostCardClickedImplCopyWith<_$LostCardClickedImpl> get copyWith =>
      __$$LostCardClickedImplCopyWithImpl<_$LostCardClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return lostCardClicked(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return lostCardClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (lostCardClicked != null) {
      return lostCardClicked(eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return lostCardClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return lostCardClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (lostCardClicked != null) {
      return lostCardClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$LostCardClickedImplToJson(
      this,
    );
  }
}

abstract class LostCardClicked implements AmplitudeEvent {
  const factory LostCardClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$LostCardClickedImpl;

  factory LostCardClicked.fromJson(Map<String, dynamic> json) =
      _$LostCardClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$LostCardClickedImplCopyWith<_$LostCardClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TroubleActivateClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$TroubleActivateClickedImplCopyWith(
          _$TroubleActivateClickedImpl value,
          $Res Function(_$TroubleActivateClickedImpl) then) =
      __$$TroubleActivateClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$TroubleActivateClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$TroubleActivateClickedImpl>
    implements _$$TroubleActivateClickedImplCopyWith<$Res> {
  __$$TroubleActivateClickedImplCopyWithImpl(
      _$TroubleActivateClickedImpl _value,
      $Res Function(_$TroubleActivateClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$TroubleActivateClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TroubleActivateClickedImpl
    with DiagnosticableTreeMixin
    implements TroubleActivateClicked {
  const _$TroubleActivateClickedImpl(
      {this.eventType = 'TROUBLE_ACTIVATE_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'troubleActivateClicked';

  factory _$TroubleActivateClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TroubleActivateClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.troubleActivateClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(
          DiagnosticsProperty('type', 'AmplitudeEvent.troubleActivateClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TroubleActivateClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$TroubleActivateClickedImplCopyWith<_$TroubleActivateClickedImpl>
      get copyWith => __$$TroubleActivateClickedImplCopyWithImpl<
          _$TroubleActivateClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return troubleActivateClicked(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return troubleActivateClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (troubleActivateClicked != null) {
      return troubleActivateClicked(
          eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return troubleActivateClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return troubleActivateClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (troubleActivateClicked != null) {
      return troubleActivateClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TroubleActivateClickedImplToJson(
      this,
    );
  }
}

abstract class TroubleActivateClicked implements AmplitudeEvent {
  const factory TroubleActivateClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$TroubleActivateClickedImpl;

  factory TroubleActivateClicked.fromJson(Map<String, dynamic> json) =
      _$TroubleActivateClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$TroubleActivateClickedImplCopyWith<_$TroubleActivateClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TroubleCloseClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$TroubleCloseClickedImplCopyWith(_$TroubleCloseClickedImpl value,
          $Res Function(_$TroubleCloseClickedImpl) then) =
      __$$TroubleCloseClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$TroubleCloseClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$TroubleCloseClickedImpl>
    implements _$$TroubleCloseClickedImplCopyWith<$Res> {
  __$$TroubleCloseClickedImplCopyWithImpl(_$TroubleCloseClickedImpl _value,
      $Res Function(_$TroubleCloseClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$TroubleCloseClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TroubleCloseClickedImpl
    with DiagnosticableTreeMixin
    implements TroubleCloseClicked {
  const _$TroubleCloseClickedImpl(
      {this.eventType = 'TROUBLE_CLOSE_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'troubleCloseClicked';

  factory _$TroubleCloseClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TroubleCloseClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.troubleCloseClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.troubleCloseClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TroubleCloseClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$TroubleCloseClickedImplCopyWith<_$TroubleCloseClickedImpl> get copyWith =>
      __$$TroubleCloseClickedImplCopyWithImpl<_$TroubleCloseClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return troubleCloseClicked(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return troubleCloseClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (troubleCloseClicked != null) {
      return troubleCloseClicked(
          eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return troubleCloseClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return troubleCloseClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (troubleCloseClicked != null) {
      return troubleCloseClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TroubleCloseClickedImplToJson(
      this,
    );
  }
}

abstract class TroubleCloseClicked implements AmplitudeEvent {
  const factory TroubleCloseClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$TroubleCloseClickedImpl;

  factory TroubleCloseClicked.fromJson(Map<String, dynamic> json) =
      _$TroubleCloseClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$TroubleCloseClickedImplCopyWith<_$TroubleCloseClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TroubleGotItClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$TroubleGotItClickedImplCopyWith(_$TroubleGotItClickedImpl value,
          $Res Function(_$TroubleGotItClickedImpl) then) =
      __$$TroubleGotItClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$TroubleGotItClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$TroubleGotItClickedImpl>
    implements _$$TroubleGotItClickedImplCopyWith<$Res> {
  __$$TroubleGotItClickedImplCopyWithImpl(_$TroubleGotItClickedImpl _value,
      $Res Function(_$TroubleGotItClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$TroubleGotItClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TroubleGotItClickedImpl
    with DiagnosticableTreeMixin
    implements TroubleGotItClicked {
  const _$TroubleGotItClickedImpl(
      {this.eventType = 'TROUBLE_GOT_IT_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'troubleGotItClicked';

  factory _$TroubleGotItClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TroubleGotItClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.troubleGotItClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.troubleGotItClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TroubleGotItClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$TroubleGotItClickedImplCopyWith<_$TroubleGotItClickedImpl> get copyWith =>
      __$$TroubleGotItClickedImplCopyWithImpl<_$TroubleGotItClickedImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return troubleGotItClicked(eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return troubleGotItClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (troubleGotItClicked != null) {
      return troubleGotItClicked(
          eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return troubleGotItClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return troubleGotItClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (troubleGotItClicked != null) {
      return troubleGotItClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TroubleGotItClickedImplToJson(
      this,
    );
  }
}

abstract class TroubleGotItClicked implements AmplitudeEvent {
  const factory TroubleGotItClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$TroubleGotItClickedImpl;

  factory TroubleGotItClicked.fromJson(Map<String, dynamic> json) =
      _$TroubleGotItClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$TroubleGotItClickedImplCopyWith<_$TroubleGotItClickedImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TroubleActivateNowClickedImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$TroubleActivateNowClickedImplCopyWith(
          _$TroubleActivateNowClickedImpl value,
          $Res Function(_$TroubleActivateNowClickedImpl) then) =
      __$$TroubleActivateNowClickedImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String eventType,
      String walletAddress,
      String walletType,
      bool activated});
}

/// @nodoc
class __$$TroubleActivateNowClickedImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$TroubleActivateNowClickedImpl>
    implements _$$TroubleActivateNowClickedImplCopyWith<$Res> {
  __$$TroubleActivateNowClickedImplCopyWithImpl(
      _$TroubleActivateNowClickedImpl _value,
      $Res Function(_$TroubleActivateNowClickedImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? walletAddress = null,
    Object? walletType = null,
    Object? activated = null,
  }) {
    return _then(_$TroubleActivateNowClickedImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      walletAddress: null == walletAddress
          ? _value.walletAddress
          : walletAddress // ignore: cast_nullable_to_non_nullable
              as String,
      walletType: null == walletType
          ? _value.walletType
          : walletType // ignore: cast_nullable_to_non_nullable
              as String,
      activated: null == activated
          ? _value.activated
          : activated // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$TroubleActivateNowClickedImpl
    with DiagnosticableTreeMixin
    implements TroubleActivateNowClicked {
  const _$TroubleActivateNowClickedImpl(
      {this.eventType = 'TROUBLE_ACTIVATE_NOW_CLICKED',
      required this.walletAddress,
      required this.walletType,
      required this.activated,
      final String? $type})
      : $type = $type ?? 'troubleActivateNowClicked';

  factory _$TroubleActivateNowClickedImpl.fromJson(Map<String, dynamic> json) =>
      _$$TroubleActivateNowClickedImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String walletAddress;
  @override
  final String walletType;
  @override
  final bool activated;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.troubleActivateNowClicked(eventType: $eventType, walletAddress: $walletAddress, walletType: $walletType, activated: $activated)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty(
          'type', 'AmplitudeEvent.troubleActivateNowClicked'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('walletAddress', walletAddress))
      ..add(DiagnosticsProperty('walletType', walletType))
      ..add(DiagnosticsProperty('activated', activated));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TroubleActivateNowClickedImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.walletAddress, walletAddress) ||
                other.walletAddress == walletAddress) &&
            (identical(other.walletType, walletType) ||
                other.walletType == walletType) &&
            (identical(other.activated, activated) ||
                other.activated == activated));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, eventType, walletAddress, walletType, activated);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$TroubleActivateNowClickedImplCopyWith<_$TroubleActivateNowClickedImpl>
      get copyWith => __$$TroubleActivateNowClickedImplCopyWithImpl<
          _$TroubleActivateNowClickedImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return troubleActivateNowClicked(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return troubleActivateNowClicked?.call(
        eventType, walletAddress, walletType, activated);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (troubleActivateNowClicked != null) {
      return troubleActivateNowClicked(
          eventType, walletAddress, walletType, activated);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return troubleActivateNowClicked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return troubleActivateNowClicked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (troubleActivateNowClicked != null) {
      return troubleActivateNowClicked(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TroubleActivateNowClickedImplToJson(
      this,
    );
  }
}

abstract class TroubleActivateNowClicked implements AmplitudeEvent {
  const factory TroubleActivateNowClicked(
      {final String eventType,
      required final String walletAddress,
      required final String walletType,
      required final bool activated}) = _$TroubleActivateNowClickedImpl;

  factory TroubleActivateNowClicked.fromJson(Map<String, dynamic> json) =
      _$TroubleActivateNowClickedImpl.fromJson;

  @override
  String get eventType;
  String get walletAddress;
  String get walletType;
  bool get activated;
  @override
  @JsonKey(ignore: true)
  _$$TroubleActivateNowClickedImplCopyWith<_$TroubleActivateNowClickedImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CardAddedEventImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$CardAddedEventImplCopyWith(_$CardAddedEventImpl value,
          $Res Function(_$CardAddedEventImpl) then) =
      __$$CardAddedEventImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String address});
}

/// @nodoc
class __$$CardAddedEventImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$CardAddedEventImpl>
    implements _$$CardAddedEventImplCopyWith<$Res> {
  __$$CardAddedEventImplCopyWithImpl(
      _$CardAddedEventImpl _value, $Res Function(_$CardAddedEventImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? address = null,
  }) {
    return _then(_$CardAddedEventImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      address: null == address
          ? _value.address
          : address // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$CardAddedEventImpl
    with DiagnosticableTreeMixin
    implements CardAddedEvent {
  const _$CardAddedEventImpl(
      {this.eventType = 'CARD_ADDED',
      required this.address,
      final String? $type})
      : $type = $type ?? 'cardAdded';

  factory _$CardAddedEventImpl.fromJson(Map<String, dynamic> json) =>
      _$$CardAddedEventImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String address;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.cardAdded(eventType: $eventType, address: $address)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.cardAdded'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('address', address));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CardAddedEventImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.address, address) || other.address == address));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, address);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$CardAddedEventImplCopyWith<_$CardAddedEventImpl> get copyWith =>
      __$$CardAddedEventImplCopyWithImpl<_$CardAddedEventImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return cardAdded(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return cardAdded?.call(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (cardAdded != null) {
      return cardAdded(eventType, address);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return cardAdded(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return cardAdded?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (cardAdded != null) {
      return cardAdded(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CardAddedEventImplToJson(
      this,
    );
  }
}

abstract class CardAddedEvent implements AmplitudeEvent {
  const factory CardAddedEvent(
      {final String eventType,
      required final String address}) = _$CardAddedEventImpl;

  factory CardAddedEvent.fromJson(Map<String, dynamic> json) =
      _$CardAddedEventImpl.fromJson;

  @override
  String get eventType;
  String get address;
  @override
  @JsonKey(ignore: true)
  _$$CardAddedEventImplCopyWith<_$CardAddedEventImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$BarAddedEventImplCopyWith<$Res>
    implements $AmplitudeEventCopyWith<$Res> {
  factory _$$BarAddedEventImplCopyWith(
          _$BarAddedEventImpl value, $Res Function(_$BarAddedEventImpl) then) =
      __$$BarAddedEventImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String eventType, String address});
}

/// @nodoc
class __$$BarAddedEventImplCopyWithImpl<$Res>
    extends _$AmplitudeEventCopyWithImpl<$Res, _$BarAddedEventImpl>
    implements _$$BarAddedEventImplCopyWith<$Res> {
  __$$BarAddedEventImplCopyWithImpl(
      _$BarAddedEventImpl _value, $Res Function(_$BarAddedEventImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? eventType = null,
    Object? address = null,
  }) {
    return _then(_$BarAddedEventImpl(
      eventType: null == eventType
          ? _value.eventType
          : eventType // ignore: cast_nullable_to_non_nullable
              as String,
      address: null == address
          ? _value.address
          : address // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BarAddedEventImpl
    with DiagnosticableTreeMixin
    implements BarAddedEvent {
  const _$BarAddedEventImpl(
      {this.eventType = 'BAR_ADDED',
      required this.address,
      final String? $type})
      : $type = $type ?? 'barAdded';

  factory _$BarAddedEventImpl.fromJson(Map<String, dynamic> json) =>
      _$$BarAddedEventImplFromJson(json);

  @override
  @JsonKey()
  final String eventType;
  @override
  final String address;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString({DiagnosticLevel minLevel = DiagnosticLevel.info}) {
    return 'AmplitudeEvent.barAdded(eventType: $eventType, address: $address)';
  }

  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties
      ..add(DiagnosticsProperty('type', 'AmplitudeEvent.barAdded'))
      ..add(DiagnosticsProperty('eventType', eventType))
      ..add(DiagnosticsProperty('address', address));
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BarAddedEventImpl &&
            (identical(other.eventType, eventType) ||
                other.eventType == eventType) &&
            (identical(other.address, address) || other.address == address));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, eventType, address);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$BarAddedEventImplCopyWith<_$BarAddedEventImpl> get copyWith =>
      __$$BarAddedEventImplCopyWithImpl<_$BarAddedEventImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String eventType) login,
    required TResult Function(String eventType) connectWalletClicked,
    required TResult Function(String eventType, String source)
        connectManuallyClicked,
    required TResult Function(String eventType, String source)
        connectWithQrClicked,
    required TResult Function(
            String eventType, String walletType, String source)
        qrButtonClicked,
    required TResult Function(
            String eventType, String source, String walletAddress)
        qrScanned,
    required TResult Function(String eventType, String source)
        buyNewCardClicked,
    required TResult Function(
            String eventType, String source, String connectOption)
        connectOptionSelected,
    required TResult Function(
            String eventType, String source, String walletAddress)
        nfcTapped,
    required TResult Function(String eventType, String source) nfcClosed,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        addressFilled,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        deepLinkClicked,
    required TResult Function(
            String eventType, String source, String walletType)
        typeSelected,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        saveToWalletClicked,
    required TResult Function(
            String eventType, String walletType, String walletAddress)
        alreadySavedGotItClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        activatedCheckboxClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress)
        gotItClicked,
    required TResult Function(String eventType) warningCheckboxClicked,
    required TResult Function(String eventType) appLockEnabled,
    required TResult Function(String eventType) notNowLockClicked,
    required TResult Function(String eventType) walletTabClicked,
    required TResult Function(String eventType) settingsTabClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        transactionsButtonClicked,
    required TResult Function(String eventType, String tab) addNewClicked,
    required TResult Function(String eventType, String source)
        addNewPlusClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        walletSettingsClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        topUpButtonCLicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        receiveClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        sendClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        buyWithCardClicked,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        historyClicked,
    required TResult Function(String eventType, String source,
            String walletType, String walletAddress, bool activated)
        addressCopied,
    required TResult Function(String eventType, String walletType,
            String walletAddress, bool activated)
        shareAddressClicked,
    required TResult Function(String eventType) gotItSendClicked,
    required TResult Function(String eventType) sendAnywayClicked,
    required TResult Function(String eventType, String source)
        backButtonClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret1Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        secret2Validated,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        continueClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        editSecretsClicked,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationSuccessful,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        validationFailed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        guideMeClicked,
    required TResult Function(
            String eventType, String walletAddress, String color)
        cardColorChanged,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        clickedOnPrivateKey,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyRevealed,
    required TResult Function(
            String eventType, String walletAddress, String walletType)
        privateKeyCopied,
    required TResult Function(String eventType, String walletType)
        cardNameChanged,
    required TResult Function(String eventType, String source)
        helpCenterClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        removeCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDeleted,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        notSureClicked,
    required TResult Function(String eventType) contactUsClicked,
    required TResult Function(String eventType) appLockClicked,
    required TResult Function(String eventType) appLockDisabled,
    required TResult Function(String eventType) changePasscodeClicked,
    required TResult Function(String eventType) passcodeChanged,
    required TResult Function(String eventType) faceIdEnabled,
    required TResult Function(String eventType) faceIdDisabled,
    required TResult Function(String eventType) pushNotificationsOn,
    required TResult Function(String eventType) pushNotificationsOff,
    required TResult Function(String eventType, String social)
        joinCommunityClicked,
    required TResult Function(String eventType) privacyPolicyClicked,
    required TResult Function(String eventType) termsOfUseClicked,
    required TResult Function(String eventType) verifyCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        verifyCardTapped,
    required TResult Function(String eventType) sendMessageClicked,
    required TResult Function(String eventType) cardTabClicked,
    required TResult Function(String eventType) barTabClicked,
    required TResult Function(String eventType, String tab) tapToConnectClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        cardDamagedClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        nfcNotWorkingClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        dontHaveCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        lostCardClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleCloseClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleGotItClicked,
    required TResult Function(String eventType, String walletAddress,
            String walletType, bool activated)
        troubleActivateNowClicked,
    required TResult Function(String eventType, String address) cardAdded,
    required TResult Function(String eventType, String address) barAdded,
  }) {
    return barAdded(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String eventType)? login,
    TResult? Function(String eventType)? connectWalletClicked,
    TResult? Function(String eventType, String source)? connectManuallyClicked,
    TResult? Function(String eventType, String source)? connectWithQrClicked,
    TResult? Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult? Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult? Function(String eventType, String source)? buyNewCardClicked,
    TResult? Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult? Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult? Function(String eventType, String source)? nfcClosed,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult? Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult? Function(
            String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult? Function(String eventType)? warningCheckboxClicked,
    TResult? Function(String eventType)? appLockEnabled,
    TResult? Function(String eventType)? notNowLockClicked,
    TResult? Function(String eventType)? walletTabClicked,
    TResult? Function(String eventType)? settingsTabClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult? Function(String eventType, String tab)? addNewClicked,
    TResult? Function(String eventType, String source)? addNewPlusClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult? Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult? Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult? Function(String eventType)? gotItSendClicked,
    TResult? Function(String eventType)? sendAnywayClicked,
    TResult? Function(String eventType, String source)? backButtonClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult? Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult? Function(
            String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult? Function(String eventType, String walletType)? cardNameChanged,
    TResult? Function(String eventType, String source)? helpCenterClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult? Function(String eventType)? contactUsClicked,
    TResult? Function(String eventType)? appLockClicked,
    TResult? Function(String eventType)? appLockDisabled,
    TResult? Function(String eventType)? changePasscodeClicked,
    TResult? Function(String eventType)? passcodeChanged,
    TResult? Function(String eventType)? faceIdEnabled,
    TResult? Function(String eventType)? faceIdDisabled,
    TResult? Function(String eventType)? pushNotificationsOn,
    TResult? Function(String eventType)? pushNotificationsOff,
    TResult? Function(String eventType, String social)? joinCommunityClicked,
    TResult? Function(String eventType)? privacyPolicyClicked,
    TResult? Function(String eventType)? termsOfUseClicked,
    TResult? Function(String eventType)? verifyCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult? Function(String eventType)? sendMessageClicked,
    TResult? Function(String eventType)? cardTabClicked,
    TResult? Function(String eventType)? barTabClicked,
    TResult? Function(String eventType, String tab)? tapToConnectClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult? Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult? Function(String eventType, String address)? cardAdded,
    TResult? Function(String eventType, String address)? barAdded,
  }) {
    return barAdded?.call(eventType, address);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String eventType)? login,
    TResult Function(String eventType)? connectWalletClicked,
    TResult Function(String eventType, String source)? connectManuallyClicked,
    TResult Function(String eventType, String source)? connectWithQrClicked,
    TResult Function(String eventType, String walletType, String source)?
        qrButtonClicked,
    TResult Function(String eventType, String source, String walletAddress)?
        qrScanned,
    TResult Function(String eventType, String source)? buyNewCardClicked,
    TResult Function(String eventType, String source, String connectOption)?
        connectOptionSelected,
    TResult Function(String eventType, String source, String walletAddress)?
        nfcTapped,
    TResult Function(String eventType, String source)? nfcClosed,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        addressFilled,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        deepLinkClicked,
    TResult Function(String eventType, String source, String walletType)?
        typeSelected,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        saveToWalletClicked,
    TResult Function(String eventType, String walletType, String walletAddress)?
        alreadySavedGotItClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        activatedCheckboxClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress)?
        gotItClicked,
    TResult Function(String eventType)? warningCheckboxClicked,
    TResult Function(String eventType)? appLockEnabled,
    TResult Function(String eventType)? notNowLockClicked,
    TResult Function(String eventType)? walletTabClicked,
    TResult Function(String eventType)? settingsTabClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        transactionsButtonClicked,
    TResult Function(String eventType, String tab)? addNewClicked,
    TResult Function(String eventType, String source)? addNewPlusClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        walletSettingsClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        topUpButtonCLicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        receiveClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        sendClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        buyWithCardClicked,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        historyClicked,
    TResult Function(String eventType, String source, String walletType,
            String walletAddress, bool activated)?
        addressCopied,
    TResult Function(String eventType, String walletType, String walletAddress,
            bool activated)?
        shareAddressClicked,
    TResult Function(String eventType)? gotItSendClicked,
    TResult Function(String eventType)? sendAnywayClicked,
    TResult Function(String eventType, String source)? backButtonClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret1Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        secret2Validated,
    TResult Function(String eventType, String walletAddress, String walletType)?
        continueClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        editSecretsClicked,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationSuccessful,
    TResult Function(String eventType, String walletAddress, String walletType)?
        validationFailed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        guideMeClicked,
    TResult Function(String eventType, String walletAddress, String color)?
        cardColorChanged,
    TResult Function(String eventType, String walletAddress, String walletType)?
        clickedOnPrivateKey,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyRevealed,
    TResult Function(String eventType, String walletAddress, String walletType)?
        privateKeyCopied,
    TResult Function(String eventType, String walletType)? cardNameChanged,
    TResult Function(String eventType, String source)? helpCenterClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        removeCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDeleted,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        notSureClicked,
    TResult Function(String eventType)? contactUsClicked,
    TResult Function(String eventType)? appLockClicked,
    TResult Function(String eventType)? appLockDisabled,
    TResult Function(String eventType)? changePasscodeClicked,
    TResult Function(String eventType)? passcodeChanged,
    TResult Function(String eventType)? faceIdEnabled,
    TResult Function(String eventType)? faceIdDisabled,
    TResult Function(String eventType)? pushNotificationsOn,
    TResult Function(String eventType)? pushNotificationsOff,
    TResult Function(String eventType, String social)? joinCommunityClicked,
    TResult Function(String eventType)? privacyPolicyClicked,
    TResult Function(String eventType)? termsOfUseClicked,
    TResult Function(String eventType)? verifyCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        verifyCardTapped,
    TResult Function(String eventType)? sendMessageClicked,
    TResult Function(String eventType)? cardTabClicked,
    TResult Function(String eventType)? barTabClicked,
    TResult Function(String eventType, String tab)? tapToConnectClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        cardDamagedClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        nfcNotWorkingClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        dontHaveCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        lostCardClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleCloseClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleGotItClicked,
    TResult Function(String eventType, String walletAddress, String walletType,
            bool activated)?
        troubleActivateNowClicked,
    TResult Function(String eventType, String address)? cardAdded,
    TResult Function(String eventType, String address)? barAdded,
    required TResult orElse(),
  }) {
    if (barAdded != null) {
      return barAdded(eventType, address);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LoginEvent value) login,
    required TResult Function(ConnectWalletClicked value) connectWalletClicked,
    required TResult Function(ConnectManuallyClicked value)
        connectManuallyClicked,
    required TResult Function(ConnectWitchQrClicked value) connectWithQrClicked,
    required TResult Function(QrButtonClicked value) qrButtonClicked,
    required TResult Function(QrScanned value) qrScanned,
    required TResult Function(BuyNewCardClicked value) buyNewCardClicked,
    required TResult Function(ConnectOptionSelected value)
        connectOptionSelected,
    required TResult Function(NfcTapped value) nfcTapped,
    required TResult Function(NfcClosed value) nfcClosed,
    required TResult Function(AddressFilled value) addressFilled,
    required TResult Function(DeeplinkClicked value) deepLinkClicked,
    required TResult Function(TypeSelected value) typeSelected,
    required TResult Function(SaveToWalletClicked value) saveToWalletClicked,
    required TResult Function(AlreadySavedGotItClicked value)
        alreadySavedGotItClicked,
    required TResult Function(ActivatedCheckboxClicked value)
        activatedCheckboxClicked,
    required TResult Function(GotItClicked value) gotItClicked,
    required TResult Function(WarningCheckboxClicked value)
        warningCheckboxClicked,
    required TResult Function(AppLockEnabled value) appLockEnabled,
    required TResult Function(NotNowLockClicked value) notNowLockClicked,
    required TResult Function(WalletTabClicked value) walletTabClicked,
    required TResult Function(SettingsTabClicked value) settingsTabClicked,
    required TResult Function(TransactionsButtonClicked value)
        transactionsButtonClicked,
    required TResult Function(AddNewClicked value) addNewClicked,
    required TResult Function(AddNewPlusClicked value) addNewPlusClicked,
    required TResult Function(WalletSettingsClicked value)
        walletSettingsClicked,
    required TResult Function(TopUpButtonClicked value) topUpButtonCLicked,
    required TResult Function(ReceiveClicked value) receiveClicked,
    required TResult Function(SendClicked value) sendClicked,
    required TResult Function(BuyWithCardClicked value) buyWithCardClicked,
    required TResult Function(HistoryClicked value) historyClicked,
    required TResult Function(AddressCopied value) addressCopied,
    required TResult Function(ShareAddressClicked value) shareAddressClicked,
    required TResult Function(GotItSendClicked value) gotItSendClicked,
    required TResult Function(SendAnywayClicked value) sendAnywayClicked,
    required TResult Function(BackButtonClicked value) backButtonClicked,
    required TResult Function(Secret1Validated value) secret1Validated,
    required TResult Function(Secret2Validated value) secret2Validated,
    required TResult Function(ContinueCLicked value) continueClicked,
    required TResult Function(EditSecretsClicked value) editSecretsClicked,
    required TResult Function(ValidationSuccessful value) validationSuccessful,
    required TResult Function(ValidationFailed value) validationFailed,
    required TResult Function(GuideMeClicked value) guideMeClicked,
    required TResult Function(CardColorCHanged value) cardColorChanged,
    required TResult Function(ClickedOnPrivateKey value) clickedOnPrivateKey,
    required TResult Function(PrivateKeyRevealed value) privateKeyRevealed,
    required TResult Function(PrivateKeyCopied value) privateKeyCopied,
    required TResult Function(CardNameChanged value) cardNameChanged,
    required TResult Function(HelpCenterClicked value) helpCenterClicked,
    required TResult Function(RemoveCardClicked value) removeCardClicked,
    required TResult Function(CardDeleted value) cardDeleted,
    required TResult Function(NotSureClicked value) notSureClicked,
    required TResult Function(ContactUsClicked value) contactUsClicked,
    required TResult Function(AppLockClicked value) appLockClicked,
    required TResult Function(AppLockDisabled value) appLockDisabled,
    required TResult Function(ChangePasscodeClicked value)
        changePasscodeClicked,
    required TResult Function(PasscodeChanged value) passcodeChanged,
    required TResult Function(FaceIdEnabled value) faceIdEnabled,
    required TResult Function(FaceIdDisabled value) faceIdDisabled,
    required TResult Function(PushNotificationsOn value) pushNotificationsOn,
    required TResult Function(PushNotificationsOff value) pushNotificationsOff,
    required TResult Function(JoinCommunityClicked value) joinCommunityClicked,
    required TResult Function(PrivacyPolicyClicked value) privacyPolicyClicked,
    required TResult Function(TermsOfUseClicked value) termsOfUseClicked,
    required TResult Function(VerifyCardClicked value) verifyCardClicked,
    required TResult Function(VerifyCardTapped value) verifyCardTapped,
    required TResult Function(SendMessageClicked value) sendMessageClicked,
    required TResult Function(CardTabClicked value) cardTabClicked,
    required TResult Function(BarTabClicked value) barTabClicked,
    required TResult Function(TapToConnectClicked value) tapToConnectClicked,
    required TResult Function(CardDamagedClicked value) cardDamagedClicked,
    required TResult Function(NfcNotWorkingCLicked value) nfcNotWorkingClicked,
    required TResult Function(DontHaveCardClicked value) dontHaveCardClicked,
    required TResult Function(LostCardClicked value) lostCardClicked,
    required TResult Function(TroubleActivateClicked value)
        troubleActivateClicked,
    required TResult Function(TroubleCloseClicked value) troubleCloseClicked,
    required TResult Function(TroubleGotItClicked value) troubleGotItClicked,
    required TResult Function(TroubleActivateNowClicked value)
        troubleActivateNowClicked,
    required TResult Function(CardAddedEvent value) cardAdded,
    required TResult Function(BarAddedEvent value) barAdded,
  }) {
    return barAdded(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LoginEvent value)? login,
    TResult? Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult? Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult? Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult? Function(QrButtonClicked value)? qrButtonClicked,
    TResult? Function(QrScanned value)? qrScanned,
    TResult? Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult? Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult? Function(NfcTapped value)? nfcTapped,
    TResult? Function(NfcClosed value)? nfcClosed,
    TResult? Function(AddressFilled value)? addressFilled,
    TResult? Function(DeeplinkClicked value)? deepLinkClicked,
    TResult? Function(TypeSelected value)? typeSelected,
    TResult? Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult? Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult? Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult? Function(GotItClicked value)? gotItClicked,
    TResult? Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult? Function(AppLockEnabled value)? appLockEnabled,
    TResult? Function(NotNowLockClicked value)? notNowLockClicked,
    TResult? Function(WalletTabClicked value)? walletTabClicked,
    TResult? Function(SettingsTabClicked value)? settingsTabClicked,
    TResult? Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult? Function(AddNewClicked value)? addNewClicked,
    TResult? Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult? Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult? Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult? Function(ReceiveClicked value)? receiveClicked,
    TResult? Function(SendClicked value)? sendClicked,
    TResult? Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult? Function(HistoryClicked value)? historyClicked,
    TResult? Function(AddressCopied value)? addressCopied,
    TResult? Function(ShareAddressClicked value)? shareAddressClicked,
    TResult? Function(GotItSendClicked value)? gotItSendClicked,
    TResult? Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult? Function(BackButtonClicked value)? backButtonClicked,
    TResult? Function(Secret1Validated value)? secret1Validated,
    TResult? Function(Secret2Validated value)? secret2Validated,
    TResult? Function(ContinueCLicked value)? continueClicked,
    TResult? Function(EditSecretsClicked value)? editSecretsClicked,
    TResult? Function(ValidationSuccessful value)? validationSuccessful,
    TResult? Function(ValidationFailed value)? validationFailed,
    TResult? Function(GuideMeClicked value)? guideMeClicked,
    TResult? Function(CardColorCHanged value)? cardColorChanged,
    TResult? Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult? Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult? Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult? Function(CardNameChanged value)? cardNameChanged,
    TResult? Function(HelpCenterClicked value)? helpCenterClicked,
    TResult? Function(RemoveCardClicked value)? removeCardClicked,
    TResult? Function(CardDeleted value)? cardDeleted,
    TResult? Function(NotSureClicked value)? notSureClicked,
    TResult? Function(ContactUsClicked value)? contactUsClicked,
    TResult? Function(AppLockClicked value)? appLockClicked,
    TResult? Function(AppLockDisabled value)? appLockDisabled,
    TResult? Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult? Function(PasscodeChanged value)? passcodeChanged,
    TResult? Function(FaceIdEnabled value)? faceIdEnabled,
    TResult? Function(FaceIdDisabled value)? faceIdDisabled,
    TResult? Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult? Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult? Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult? Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult? Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult? Function(VerifyCardClicked value)? verifyCardClicked,
    TResult? Function(VerifyCardTapped value)? verifyCardTapped,
    TResult? Function(SendMessageClicked value)? sendMessageClicked,
    TResult? Function(CardTabClicked value)? cardTabClicked,
    TResult? Function(BarTabClicked value)? barTabClicked,
    TResult? Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult? Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult? Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult? Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult? Function(LostCardClicked value)? lostCardClicked,
    TResult? Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult? Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult? Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult? Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult? Function(CardAddedEvent value)? cardAdded,
    TResult? Function(BarAddedEvent value)? barAdded,
  }) {
    return barAdded?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LoginEvent value)? login,
    TResult Function(ConnectWalletClicked value)? connectWalletClicked,
    TResult Function(ConnectManuallyClicked value)? connectManuallyClicked,
    TResult Function(ConnectWitchQrClicked value)? connectWithQrClicked,
    TResult Function(QrButtonClicked value)? qrButtonClicked,
    TResult Function(QrScanned value)? qrScanned,
    TResult Function(BuyNewCardClicked value)? buyNewCardClicked,
    TResult Function(ConnectOptionSelected value)? connectOptionSelected,
    TResult Function(NfcTapped value)? nfcTapped,
    TResult Function(NfcClosed value)? nfcClosed,
    TResult Function(AddressFilled value)? addressFilled,
    TResult Function(DeeplinkClicked value)? deepLinkClicked,
    TResult Function(TypeSelected value)? typeSelected,
    TResult Function(SaveToWalletClicked value)? saveToWalletClicked,
    TResult Function(AlreadySavedGotItClicked value)? alreadySavedGotItClicked,
    TResult Function(ActivatedCheckboxClicked value)? activatedCheckboxClicked,
    TResult Function(GotItClicked value)? gotItClicked,
    TResult Function(WarningCheckboxClicked value)? warningCheckboxClicked,
    TResult Function(AppLockEnabled value)? appLockEnabled,
    TResult Function(NotNowLockClicked value)? notNowLockClicked,
    TResult Function(WalletTabClicked value)? walletTabClicked,
    TResult Function(SettingsTabClicked value)? settingsTabClicked,
    TResult Function(TransactionsButtonClicked value)?
        transactionsButtonClicked,
    TResult Function(AddNewClicked value)? addNewClicked,
    TResult Function(AddNewPlusClicked value)? addNewPlusClicked,
    TResult Function(WalletSettingsClicked value)? walletSettingsClicked,
    TResult Function(TopUpButtonClicked value)? topUpButtonCLicked,
    TResult Function(ReceiveClicked value)? receiveClicked,
    TResult Function(SendClicked value)? sendClicked,
    TResult Function(BuyWithCardClicked value)? buyWithCardClicked,
    TResult Function(HistoryClicked value)? historyClicked,
    TResult Function(AddressCopied value)? addressCopied,
    TResult Function(ShareAddressClicked value)? shareAddressClicked,
    TResult Function(GotItSendClicked value)? gotItSendClicked,
    TResult Function(SendAnywayClicked value)? sendAnywayClicked,
    TResult Function(BackButtonClicked value)? backButtonClicked,
    TResult Function(Secret1Validated value)? secret1Validated,
    TResult Function(Secret2Validated value)? secret2Validated,
    TResult Function(ContinueCLicked value)? continueClicked,
    TResult Function(EditSecretsClicked value)? editSecretsClicked,
    TResult Function(ValidationSuccessful value)? validationSuccessful,
    TResult Function(ValidationFailed value)? validationFailed,
    TResult Function(GuideMeClicked value)? guideMeClicked,
    TResult Function(CardColorCHanged value)? cardColorChanged,
    TResult Function(ClickedOnPrivateKey value)? clickedOnPrivateKey,
    TResult Function(PrivateKeyRevealed value)? privateKeyRevealed,
    TResult Function(PrivateKeyCopied value)? privateKeyCopied,
    TResult Function(CardNameChanged value)? cardNameChanged,
    TResult Function(HelpCenterClicked value)? helpCenterClicked,
    TResult Function(RemoveCardClicked value)? removeCardClicked,
    TResult Function(CardDeleted value)? cardDeleted,
    TResult Function(NotSureClicked value)? notSureClicked,
    TResult Function(ContactUsClicked value)? contactUsClicked,
    TResult Function(AppLockClicked value)? appLockClicked,
    TResult Function(AppLockDisabled value)? appLockDisabled,
    TResult Function(ChangePasscodeClicked value)? changePasscodeClicked,
    TResult Function(PasscodeChanged value)? passcodeChanged,
    TResult Function(FaceIdEnabled value)? faceIdEnabled,
    TResult Function(FaceIdDisabled value)? faceIdDisabled,
    TResult Function(PushNotificationsOn value)? pushNotificationsOn,
    TResult Function(PushNotificationsOff value)? pushNotificationsOff,
    TResult Function(JoinCommunityClicked value)? joinCommunityClicked,
    TResult Function(PrivacyPolicyClicked value)? privacyPolicyClicked,
    TResult Function(TermsOfUseClicked value)? termsOfUseClicked,
    TResult Function(VerifyCardClicked value)? verifyCardClicked,
    TResult Function(VerifyCardTapped value)? verifyCardTapped,
    TResult Function(SendMessageClicked value)? sendMessageClicked,
    TResult Function(CardTabClicked value)? cardTabClicked,
    TResult Function(BarTabClicked value)? barTabClicked,
    TResult Function(TapToConnectClicked value)? tapToConnectClicked,
    TResult Function(CardDamagedClicked value)? cardDamagedClicked,
    TResult Function(NfcNotWorkingCLicked value)? nfcNotWorkingClicked,
    TResult Function(DontHaveCardClicked value)? dontHaveCardClicked,
    TResult Function(LostCardClicked value)? lostCardClicked,
    TResult Function(TroubleActivateClicked value)? troubleActivateClicked,
    TResult Function(TroubleCloseClicked value)? troubleCloseClicked,
    TResult Function(TroubleGotItClicked value)? troubleGotItClicked,
    TResult Function(TroubleActivateNowClicked value)?
        troubleActivateNowClicked,
    TResult Function(CardAddedEvent value)? cardAdded,
    TResult Function(BarAddedEvent value)? barAdded,
    required TResult orElse(),
  }) {
    if (barAdded != null) {
      return barAdded(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$BarAddedEventImplToJson(
      this,
    );
  }
}

abstract class BarAddedEvent implements AmplitudeEvent {
  const factory BarAddedEvent(
      {final String eventType,
      required final String address}) = _$BarAddedEventImpl;

  factory BarAddedEvent.fromJson(Map<String, dynamic> json) =
      _$BarAddedEventImpl.fromJson;

  @override
  String get eventType;
  String get address;
  @override
  @JsonKey(ignore: true)
  _$$BarAddedEventImplCopyWith<_$BarAddedEventImpl> get copyWith =>
      throw _privateConstructorUsedError;
}
